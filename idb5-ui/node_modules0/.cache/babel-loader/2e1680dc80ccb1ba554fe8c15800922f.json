{"ast":null,"code":"import { createDisplay, DisplaySymbol } from \"./composables/display.mjs\";\nimport { createTheme, ThemeSymbol } from \"./composables/theme.mjs\";\nimport { defaultSets, IconSymbol } from \"./composables/icons.mjs\";\nimport { createDefaults, DefaultsSymbol } from \"./composables/defaults.mjs\";\nimport { createLocaleAdapter, LocaleAdapterSymbol } from \"./composables/locale.mjs\";\nimport { createRtl, RtlSymbol } from \"./composables/rtl.mjs\";\nimport { aliases, mdi } from \"./iconsets/mdi.mjs\"; // Utilities\n\nimport { reactive } from 'vue';\nimport { mergeDeep } from \"./util/index.mjs\"; // Types\n\nexport * from \"./composables/index.mjs\";\nexport const createVuetify = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  const install = app => {\n    const {\n      components = {},\n      directives = {},\n      icons = {}\n    } = options;\n\n    for (const key in directives) {\n      const directive = directives[key];\n      app.directive(key, directive);\n    }\n\n    for (const key in components) {\n      const component = components[key];\n      app.component(key, component);\n    }\n\n    app.provide(DefaultsSymbol, createDefaults(options.defaults));\n    app.provide(DisplaySymbol, createDisplay(options.display));\n    app.provide(ThemeSymbol, createTheme(options.theme));\n    app.provide(IconSymbol, mergeDeep({\n      defaultSet: 'mdi',\n      sets: { ...defaultSets,\n        mdi\n      },\n      aliases\n    }, icons));\n    const {\n      adapter,\n      rootInstance\n    } = createLocaleAdapter(app, options == null ? void 0 : options.locale);\n    app.provide(LocaleAdapterSymbol, adapter);\n    app.provide(RtlSymbol, createRtl(rootInstance, options == null ? void 0 : options.locale)); // Vue's inject() can only be used in setup\n\n    function inject(key) {\n      var _vm$parent$provides, _vm$parent, _vm$vnode$appContext;\n\n      const vm = this.$;\n      const provides = (_vm$parent$provides = (_vm$parent = vm.parent) == null ? void 0 : _vm$parent.provides) != null ? _vm$parent$provides : (_vm$vnode$appContext = vm.vnode.appContext) == null ? void 0 : _vm$vnode$appContext.provides;\n\n      if (provides && key in provides) {\n        return provides[key];\n      }\n    }\n\n    app.mixin({\n      computed: {\n        $vuetify() {\n          return reactive({\n            defaults: inject.call(this, DefaultsSymbol),\n            display: inject.call(this, DisplaySymbol),\n            theme: inject.call(this, ThemeSymbol),\n            icons: inject.call(this, IconSymbol),\n            locale: inject.call(this, LocaleAdapterSymbol),\n            rtl: inject.call(this, RtlSymbol)\n          });\n        }\n\n      }\n    });\n  };\n\n  return {\n    install\n  };\n};","map":{"version":3,"mappings":"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","names":["createDisplay","DisplaySymbol","createTheme","ThemeSymbol","defaultSets","IconSymbol","createDefaults","DefaultsSymbol","createLocaleAdapter","LocaleAdapterSymbol","createRtl","RtlSymbol","aliases","mdi","reactive","mergeDeep","createVuetify","options","install","app","components","directives","icons","key","directive","component","provide","defaults","display","theme","defaultSet","sets","adapter","rootInstance","locale","inject","vm","$","provides","parent","_vm$parent","vnode","appContext","_vm$vnode$appContext","mixin","computed","$vuetify","call","rtl"],"sources":["../src/framework.ts"],"sourcesContent":["import { createDisplay, DisplaySymbol } from '@/composables/display'\nimport { createTheme, ThemeSymbol } from '@/composables/theme'\nimport { defaultSets, IconSymbol } from '@/composables/icons'\nimport { createDefaults, DefaultsSymbol } from '@/composables/defaults'\nimport { createLocaleAdapter, LocaleAdapterSymbol } from '@/composables/locale'\nimport { createRtl, RtlSymbol } from '@/composables/rtl'\nimport { aliases, mdi } from '@/iconsets/mdi'\n\n// Utilities\nimport { reactive } from 'vue'\nimport { mergeDeep } from '@/util'\n\n// Types\nimport type { App, ComponentPublicInstance, InjectionKey } from 'vue'\nimport type { DisplayOptions } from '@/composables/display'\nimport type { ThemeOptions } from '@/composables/theme'\nimport type { IconOptions } from '@/composables/icons'\nimport type { LocaleAdapter, LocaleOptions } from '@/composables/locale'\nimport type { RtlOptions } from '@/composables/rtl'\nimport type { DefaultsOptions } from '@/composables/defaults'\n\nexport * from './composables'\n\nexport interface VuetifyOptions {\n  components?: Record<string, any>\n  directives?: Record<string, any>\n  defaults?: DefaultsOptions\n  display?: DisplayOptions\n  theme?: ThemeOptions\n  icons?: IconOptions\n  locale?: (LocaleOptions & RtlOptions) | (LocaleAdapter & RtlOptions)\n}\n\nexport const createVuetify = (options: VuetifyOptions = {}) => {\n  const install = (app: App) => {\n    const {\n      components = {},\n      directives = {},\n      icons = {},\n    } = options\n\n    for (const key in directives) {\n      const directive = directives[key]\n\n      app.directive(key, directive)\n    }\n\n    for (const key in components) {\n      const component = components[key]\n\n      app.component(key, component)\n    }\n\n    app.provide(DefaultsSymbol, createDefaults(options.defaults))\n    app.provide(DisplaySymbol, createDisplay(options.display))\n    app.provide(ThemeSymbol, createTheme(options.theme))\n    app.provide(IconSymbol, mergeDeep({\n      defaultSet: 'mdi',\n      sets: {\n        ...defaultSets,\n        mdi,\n      },\n      aliases,\n    }, icons))\n    const { adapter, rootInstance } = createLocaleAdapter(app, options?.locale)\n    app.provide(LocaleAdapterSymbol, adapter)\n    app.provide(RtlSymbol, createRtl(rootInstance, options?.locale))\n\n    // Vue's inject() can only be used in setup\n    function inject (this: ComponentPublicInstance, key: InjectionKey<any> | string) {\n      const vm = this.$\n\n      const provides = vm.parent?.provides ?? vm.vnode.appContext?.provides\n\n      if (provides && (key as any) in provides) {\n        return provides[(key as string)]\n      }\n    }\n\n    app.mixin({\n      computed: {\n        $vuetify () {\n          return reactive({\n            defaults: inject.call(this, DefaultsSymbol),\n            display: inject.call(this, DisplaySymbol),\n            theme: inject.call(this, ThemeSymbol),\n            icons: inject.call(this, IconSymbol),\n            locale: inject.call(this, LocaleAdapterSymbol),\n            rtl: inject.call(this, RtlSymbol),\n          })\n        },\n      },\n    })\n  }\n\n  return { install }\n}\n"]},"metadata":{},"sourceType":"module"}