{"ast":null,"code":"'use strict';\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\n\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || // overlong\n      buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || // overlong\n      buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;","map":{"version":3,"sources":["/home/thaumy/Desktop/idb5-ui/node_modules/utf-8-validate/fallback.js"],"names":["isValidUTF8","buf","len","length","i","module","exports"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AACxB,QAAMC,GAAG,GAAGD,GAAG,CAACE,MAAhB;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,SAAOA,CAAC,GAAGF,GAAX,EAAgB;AACd,QAAI,CAACD,GAAG,CAACG,CAAD,CAAH,GAAS,IAAV,MAAoB,IAAxB,EAA8B;AAAG;AAC/BA,MAAAA,CAAC;AACF,KAFD,MAEO,IAAI,CAACH,GAAG,CAACG,CAAD,CAAH,GAAS,IAAV,MAAoB,IAAxB,EAA8B;AAAG;AACtC,UACEA,CAAC,GAAG,CAAJ,KAAUF,GAAV,IACA,CAACD,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IADxB,IAEA,CAACH,GAAG,CAACG,CAAD,CAAH,GAAS,IAAV,MAAoB,IAHtB,CAG4B;AAH5B,QAIE;AACA,eAAO,KAAP;AACD;;AAEDA,MAAAA,CAAC,IAAI,CAAL;AACD,KAVM,MAUA,IAAI,CAACH,GAAG,CAACG,CAAD,CAAH,GAAS,IAAV,MAAoB,IAAxB,EAA8B;AAAG;AACtC,UACEA,CAAC,GAAG,CAAJ,IAASF,GAAT,IACA,CAACD,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IADxB,IAEA,CAACH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IAFxB,IAGAH,GAAG,CAACG,CAAD,CAAH,KAAW,IAAX,IAAmB,CAACH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IAH3C,IAGoD;AACpDH,MAAAA,GAAG,CAACG,CAAD,CAAH,KAAW,IAAX,IAAmB,CAACH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IAL7C,CAKmD;AALnD,QAME;AACA,eAAO,KAAP;AACD;;AAEDA,MAAAA,CAAC,IAAI,CAAL;AACD,KAZM,MAYA,IAAI,CAACH,GAAG,CAACG,CAAD,CAAH,GAAS,IAAV,MAAoB,IAAxB,EAA8B;AAAG;AACtC,UACEA,CAAC,GAAG,CAAJ,IAASF,GAAT,IACA,CAACD,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IADxB,IAEA,CAACH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IAFxB,IAGA,CAACH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IAHxB,IAIAH,GAAG,CAACG,CAAD,CAAH,KAAW,IAAX,IAAmB,CAACH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IAAd,MAAwB,IAJ3C,IAIoD;AACpDH,MAAAA,GAAG,CAACG,CAAD,CAAH,KAAW,IAAX,IAAmBH,GAAG,CAACG,CAAC,GAAG,CAAL,CAAH,GAAa,IALhC,IAKwCH,GAAG,CAACG,CAAD,CAAH,GAAS,IANnD,CAMyD;AANzD,QAOE;AACA,eAAO,KAAP;AACD;;AAEDA,MAAAA,CAAC,IAAI,CAAL;AACD,KAbM,MAaA;AACL,aAAO,KAAP;AACD;AACF;;AAED,SAAO,IAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBN,WAAjB","sourcesContent":["'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0  // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;\n"]},"metadata":{},"sourceType":"script"}