{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Components\n\nimport { VProgressLinear } from \"../components/VProgressLinear/index.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { propsFactory } from \"../util/index.mjs\"; // Types\n// Composables\n\nexport const makeLoaderProps = propsFactory({\n  loading: Boolean\n}, 'loader');\nexport function useLoader(props, name) {\n  const loaderClasses = computed(() => ({\n    [`${name}--loading`]: props.loading\n  }));\n  return {\n    loaderClasses\n  };\n}\nexport function LoaderSlot(props, _ref) {\n  var _slots$default;\n\n  let {\n    slots\n  } = _ref;\n  return _createVNode(\"div\", {\n    \"class\": `${props.name}__loader`\n  }, [((_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {\n    color: props.color,\n    isActive: props.active\n  })) || _createVNode(VProgressLinear, {\n    \"active\": props.active,\n    \"color\": props.color,\n    \"height\": \"2\",\n    \"indeterminate\": true\n  }, null, 8, [\"active\", \"color\", \"indeterminate\"])]);\n}","map":{"version":3,"mappings":"mDAAA;;SACSA,uB,2CAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,oB,qBAET;AAOA;;AACA,OAAO,MAAMC,eAAe,GAAGD,YAAY,CAAC;AAC1CE,SAAO,EAAEC;AADiC,CAAD,EAExC,QAFwC,CAApC;AAIP,OAAO,SAASC,SAAT,CAAoBC,KAApB,EAAwCC,IAAxC,EAAsD;AAC3D,QAAMC,aAAa,GAAGR,QAAQ,CAAC,OAAO;AACpC,KAAE,GAAEO,IAAK,WAAT,GAAsBD,KAAK,CAACH;AADQ,GAAP,CAAD,CAA9B;AAIA,SAAO;AAAEK;AAAF,GAAP;AACD;AAED,OAAO,SAASC,UAAT,CACLH,KADK,QAOL;AAAA;;AAAA,MADA;AAAEI;AAAF,MACAC;AACA;AAAA,aACe,GAAEL,KAAK,CAACC,IAAK;AAD5B,MAEM,wBAAK,CAACK,OAAN,gDAAgB;AAChBC,SAAK,EAAEP,KAAK,CAACO,KADG;AAEhBC,YAAQ,EAAER,KAAK,CAACS;AAFA,GAAhB;AAAA,cAKWT,KAAK,CAACS,MALjB;AAAA,aAMUT,KAAK,CAACO,KANhB;AAAA,cAOS,GAPT;AAAA;AAAA,mDAFN;AAeD","names":["VProgressLinear","computed","propsFactory","makeLoaderProps","loading","Boolean","useLoader","props","name","loaderClasses","LoaderSlot","slots","_ref","default","color","isActive","active"],"sources":["../../src/composables/loader.tsx"],"sourcesContent":["// Components\nimport { VProgressLinear } from '@/components/VProgressLinear'\n\n// Utilities\nimport { computed } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { SetupContext } from '@vue/runtime-core'\n\nexport interface LoaderProps {\n  loading: boolean\n}\n\n// Composables\nexport const makeLoaderProps = propsFactory({\n  loading: Boolean,\n}, 'loader')\n\nexport function useLoader (props: LoaderProps, name: string) {\n  const loaderClasses = computed(() => ({\n    [`${name}--loading`]: props.loading,\n  }))\n\n  return { loaderClasses }\n}\n\nexport function LoaderSlot (\n  props: {\n    active: boolean\n    name: string\n    color?: string\n  },\n  { slots }: SetupContext,\n) {\n  return (\n    <div class={`${props.name}__loader`}>\n      { slots.default?.({\n        color: props.color,\n        isActive: props.active,\n      }) || (\n        <VProgressLinear\n          active={ props.active }\n          color={ props.color }\n          height=\"2\"\n          indeterminate\n        />\n      )}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}