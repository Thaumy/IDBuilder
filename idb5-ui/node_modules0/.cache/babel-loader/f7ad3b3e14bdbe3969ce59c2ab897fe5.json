{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VDivider.css\"; // Utilities\n\nimport { computed } from 'vue';\nimport { convertToUnit, defineComponent } from \"../../util/index.mjs\"; // Composables\n\nimport { makeThemeProps, useTheme } from \"../../composables/theme.mjs\"; // Types\n\nexport const VDivider = defineComponent({\n  name: 'VDivider',\n  props: {\n    inset: Boolean,\n    length: [Number, String],\n    thickness: [Number, String],\n    vertical: Boolean,\n    ...makeThemeProps()\n  },\n\n  setup(props, _ref) {\n    let {\n      attrs\n    } = _ref;\n    const {\n      themeClasses\n    } = useTheme(props);\n    const dividerStyles = computed(() => {\n      const styles = {};\n\n      if (props.length) {\n        styles[props.vertical ? 'maxHeight' : 'maxWidth'] = convertToUnit(props.length);\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness);\n      }\n\n      return styles;\n    });\n    return () => {\n      return _createVNode(\"hr\", {\n        \"class\": [{\n          'v-divider': true,\n          'v-divider--inset': props.inset,\n          'v-divider--vertical': props.vertical\n        }, themeClasses.value],\n        \"style\": dividerStyles.value,\n        \"aria-orientation\": !attrs.role || attrs.role === 'separator' ? props.vertical ? 'vertical' : 'horizontal' : undefined,\n        \"role\": `${attrs.role || 'separator'}`\n      }, null, 14, [\"aria-orientation\"]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,wB,CAEA;;AACA,SAASA,QAAT,QAAyB,KAAzB;SACSC,eAAeC,uB,wBAExB;;SACSC,gBAAgBC,gB,+BAEzB;;AAIA,OAAO,MAAMC,QAAQ,GAAGH,eAAe,CAAC;AACtCI,MAAI,EAAE,UADgC;AAGtCC,OAAK,EAAE;AACLC,SAAK,EAAEC,OADF;AAELC,UAAM,EAAE,CAACC,MAAD,EAASC,MAAT,CAFH;AAGLC,aAAS,EAAE,CAACF,MAAD,EAASC,MAAT,CAHN;AAILE,YAAQ,EAAEL,OAJL;AAKL,OAAGN,cAAc;AALZ,GAH+B;;AAWtCY,OAAK,CAAER,KAAF,QAAoB;AAAA,QAAX;AAAES;AAAF,QAAWC;AACvB,UAAM;AAAEC;AAAF,QAAmBd,QAAQ,CAACG,KAAD,CAAjC;AACA,UAAMY,aAAa,GAAGnB,QAAQ,CAAC,MAAM;AACnC,YAAMoB,MAAqB,GAAG,EAA9B;;AAEA,UAAIb,KAAK,CAACG,MAAV,EAAkB;AAChBU,cAAM,CAACb,KAAK,CAACO,QAANP,GAAiB,WAAjBA,GAA+B,UAAhC,CAANa,GAAoDnB,aAAa,CAACM,KAAK,CAACG,MAAP,CAAjEU;AACD;;AAED,UAAIb,KAAK,CAACM,SAAV,EAAqB;AACnBO,cAAM,CAACb,KAAK,CAACO,QAANP,GAAiB,kBAAjBA,GAAsC,gBAAvC,CAANa,GAAiEnB,aAAa,CAACM,KAAK,CAACM,SAAP,CAA9EO;AACD;;AAED,aAAOA,MAAP;AAX4B,MAA9B;AAcA,WAAO,MAAM;AACX;AAAA,iBAEW,CACL;AACE,uBAAa,IADf;AAEE,8BAAoBb,KAAK,CAACC,KAF5B;AAGE,iCAAuBD,KAAK,CAACO;AAH/B,SADK,EAMLI,YAAY,CAACG,KANR,CAFX;AAAA,iBAUYF,aAAa,CAACE,KAV1B;AAAA,4BAYM,CAACL,KAAK,CAACM,IAAP,IAAeN,KAAK,CAACM,IAANN,KAAe,WAA9B,GACIT,KAAK,CAACO,QAANP,GAAiB,UAAjBA,GAA8B,YADlC,GAEIgB,SAdV;AAAA,gBAgBW,GAAEP,KAAK,CAACM,IAANN,IAAc,WAAY;AAhBvC;AADF;AAqBD;;AAhDqC,CAAD,CAAhC","names":["computed","convertToUnit","defineComponent","makeThemeProps","useTheme","VDivider","name","props","inset","Boolean","length","Number","String","thickness","vertical","setup","attrs","_ref","themeClasses","dividerStyles","styles","value","role","undefined"],"sources":["../../../src/components/VDivider/VDivider.tsx"],"sourcesContent":["// Styles\nimport './VDivider.sass'\n\n// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\n\n// Composables\nimport { makeThemeProps, useTheme } from '@/composables/theme'\n\n// Types\ntype DividerKey = 'borderRightWidth' | 'borderTopWidth' | 'maxHeight' | 'maxWidth'\ntype DividerStyles = Partial<Record<DividerKey, string>>\n\nexport const VDivider = defineComponent({\n  name: 'VDivider',\n\n  props: {\n    inset: Boolean,\n    length: [Number, String],\n    thickness: [Number, String],\n    vertical: Boolean,\n    ...makeThemeProps(),\n  },\n\n  setup (props, { attrs }) {\n    const { themeClasses } = useTheme(props)\n    const dividerStyles = computed(() => {\n      const styles: DividerStyles = {}\n\n      if (props.length) {\n        styles[props.vertical ? 'maxHeight' : 'maxWidth'] = convertToUnit(props.length)\n      }\n\n      if (props.thickness) {\n        styles[props.vertical ? 'borderRightWidth' : 'borderTopWidth'] = convertToUnit(props.thickness)\n      }\n\n      return styles\n    })\n\n    return () => {\n      return (\n        <hr\n          class={[\n            {\n              'v-divider': true,\n              'v-divider--inset': props.inset,\n              'v-divider--vertical': props.vertical,\n            },\n            themeClasses.value,\n          ]}\n          style={ dividerStyles.value }\n          aria-orientation={\n            !attrs.role || attrs.role === 'separator'\n              ? props.vertical ? 'vertical' : 'horizontal'\n              : undefined\n          }\n          role={`${attrs.role || 'separator'}`}\n        />\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}