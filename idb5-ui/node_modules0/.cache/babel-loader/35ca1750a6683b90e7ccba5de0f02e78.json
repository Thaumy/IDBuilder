{"ast":null,"code":"import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\nimport { Transition } from 'vue';\nimport { acceleratedEasing, deceleratedEasing, defineComponent, nullifyTransforms } from \"../../util/index.mjs\";\nexport const VDialogTransition = defineComponent({\n  name: 'VDialogTransition',\n  props: {\n    target: Object\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const functions = {\n      onBeforeEnter(el) {\n        el.style.pointerEvents = 'none';\n      },\n\n      async onEnter(el, done) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        const {\n          x,\n          y\n        } = getDimensions(props.target, el);\n        const animation = el.animate([{\n          transform: `translate(${x}px, ${y}px) scale(0.1)`,\n          opacity: 0\n        }, {\n          transform: ''\n        }], {\n          duration: 225,\n          easing: deceleratedEasing\n        });\n        animation.finished.then(() => done());\n      },\n\n      onAfterEnter(el) {\n        el.style.removeProperty('pointer-events');\n      },\n\n      onBeforeLeave(el) {\n        el.style.pointerEvents = 'none';\n      },\n\n      async onLeave(el, done) {\n        await new Promise(resolve => requestAnimationFrame(resolve));\n        const {\n          x,\n          y\n        } = getDimensions(props.target, el);\n        const animation = el.animate([{\n          transform: ''\n        }, {\n          transform: `translate(${x}px, ${y}px) scale(0.1)`,\n          opacity: 0\n        }], {\n          duration: 125,\n          easing: acceleratedEasing\n        });\n        animation.finished.then(() => done());\n      },\n\n      onAfterLeave(el) {\n        el.style.removeProperty('pointer-events');\n      }\n\n    };\n    return () => {\n      return props.target ? _createVNode(Transition, _mergeProps({\n        \"name\": \"dialog-transition\"\n      }, functions, {\n        \"css\": false\n      }), slots, 16) : _createVNode(Transition, {\n        \"name\": \"dialog-transition\"\n      }, slots);\n    };\n  }\n\n});\n\nfunction getDimensions(target, el) {\n  const targetBox = target.getBoundingClientRect();\n  const elBox = nullifyTransforms(el);\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v));\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ');\n  let offsetX = targetBox.left + targetBox.width / 2;\n\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2;\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2;\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2;\n\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2;\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2;\n  }\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top)\n  };\n}","map":{"version":3,"mappings":"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","names":["Transition","acceleratedEasing","deceleratedEasing","defineComponent","nullifyTransforms","VDialogTransition","name","props","target","Object","setup","slots","_ref","functions","onBeforeEnter","el","style","pointerEvents","onEnter","done","Promise","resolve","requestAnimationFrame","x","y","getDimensions","animation","animate","transform","opacity","duration","easing","finished","then","onAfterEnter","removeProperty","onBeforeLeave","onLeave","onAfterLeave","targetBox","getBoundingClientRect","elBox","originX","originY","getComputedStyle","transformOrigin","split","map","v","parseFloat","anchorSide","anchorOffset","getPropertyValue","offsetX","left","width","offsetY","top","height"],"sources":["../../../src/components/transitions/dialog-transition.tsx"],"sourcesContent":["import type { PropType } from 'vue'\nimport { Transition } from 'vue'\nimport { acceleratedEasing, deceleratedEasing, defineComponent, nullifyTransforms } from '@/util'\n\nexport const VDialogTransition = defineComponent({\n  name: 'VDialogTransition',\n\n  props: {\n    target: Object as PropType<HTMLElement>,\n  },\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = el.animate([\n          { transform: `translate(${x}px, ${y}px) scale(0.1)`, opacity: 0 },\n          { transform: '' },\n        ], {\n          duration: 225,\n          easing: deceleratedEasing,\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = el.animate([\n          { transform: '' },\n          { transform: `translate(${x}px, ${y}px) scale(0.1)`, opacity: 0 },\n        ], {\n          duration: 125,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\nfunction getDimensions (target: HTMLElement, el: HTMLElement) {\n  const targetBox = target.getBoundingClientRect()\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}