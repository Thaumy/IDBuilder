{"ast":null,"code":"require(\"core-js/modules/es.error.cause.js\");\n\n/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\nvar crypto = require('crypto');\n\nvar util = require('util');\n\nvar url = require('url');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar WebSocketConnection = require('./WebSocketConnection');\n\nvar headerValueSplitRegExp = /,\\s*/;\nvar headerParamSplitRegExp = /;\\s*/;\nvar headerSanitizeRegExp = /[\\r\\n]/g;\nvar xForwardedForSeparatorRegExp = /,\\s*/;\nvar separators = ['(', ')', '<', '>', '@', ',', ';', ':', '\\\\', '\\\"', '/', '[', ']', '?', '=', '{', '}', ' ', String.fromCharCode(9)];\nvar controlChars = [String.fromCharCode(127)\n/* DEL */\n];\n\nfor (var i = 0; i < 31; i++) {\n  /* US-ASCII Control Characters */\n  controlChars.push(String.fromCharCode(i));\n}\n\nvar cookieNameValidateRegEx = /([\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2f\\x3a-\\x3f\\x40\\x5b-\\x5e\\x7b\\x7d\\x7f])/;\nvar cookieValueValidateRegEx = /[^\\x21\\x23-\\x2b\\x2d-\\x3a\\x3c-\\x5b\\x5d-\\x7e]/;\nvar cookieValueDQuoteValidateRegEx = /^\"[^\"]*\"$/;\nvar controlCharsAndSemicolonRegEx = /[\\x00-\\x20\\x3b]/g;\nvar cookieSeparatorRegEx = /[;,] */;\nvar httpStatusDescriptions = {\n  100: 'Continue',\n  101: 'Switching Protocols',\n  200: 'OK',\n  201: 'Created',\n  203: 'Non-Authoritative Information',\n  204: 'No Content',\n  205: 'Reset Content',\n  206: 'Partial Content',\n  300: 'Multiple Choices',\n  301: 'Moved Permanently',\n  302: 'Found',\n  303: 'See Other',\n  304: 'Not Modified',\n  305: 'Use Proxy',\n  307: 'Temporary Redirect',\n  400: 'Bad Request',\n  401: 'Unauthorized',\n  402: 'Payment Required',\n  403: 'Forbidden',\n  404: 'Not Found',\n  406: 'Not Acceptable',\n  407: 'Proxy Authorization Required',\n  408: 'Request Timeout',\n  409: 'Conflict',\n  410: 'Gone',\n  411: 'Length Required',\n  412: 'Precondition Failed',\n  413: 'Request Entity Too Long',\n  414: 'Request-URI Too Long',\n  415: 'Unsupported Media Type',\n  416: 'Requested Range Not Satisfiable',\n  417: 'Expectation Failed',\n  426: 'Upgrade Required',\n  500: 'Internal Server Error',\n  501: 'Not Implemented',\n  502: 'Bad Gateway',\n  503: 'Service Unavailable',\n  504: 'Gateway Timeout',\n  505: 'HTTP Version Not Supported'\n};\n\nfunction WebSocketRequest(socket, httpRequest, serverConfig) {\n  // Superclass Constructor\n  EventEmitter.call(this);\n  this.socket = socket;\n  this.httpRequest = httpRequest;\n  this.resource = httpRequest.url;\n  this.remoteAddress = socket.remoteAddress;\n  this.remoteAddresses = [this.remoteAddress];\n  this.serverConfig = serverConfig; // Watch for the underlying TCP socket closing before we call accept\n\n  this._socketIsClosing = false;\n  this._socketCloseHandler = this._handleSocketCloseBeforeAccept.bind(this);\n  this.socket.on('end', this._socketCloseHandler);\n  this.socket.on('close', this._socketCloseHandler);\n  this._resolved = false;\n}\n\nutil.inherits(WebSocketRequest, EventEmitter);\n\nWebSocketRequest.prototype.readHandshake = function () {\n  var self = this;\n  var request = this.httpRequest; // Decode URL\n\n  this.resourceURL = url.parse(this.resource, true);\n  this.host = request.headers['host'];\n\n  if (!this.host) {\n    throw new Error('Client must provide a Host header.');\n  }\n\n  this.key = request.headers['sec-websocket-key'];\n\n  if (!this.key) {\n    throw new Error('Client must provide a value for Sec-WebSocket-Key.');\n  }\n\n  this.webSocketVersion = parseInt(request.headers['sec-websocket-version'], 10);\n\n  if (!this.webSocketVersion || isNaN(this.webSocketVersion)) {\n    throw new Error('Client must provide a value for Sec-WebSocket-Version.');\n  }\n\n  switch (this.webSocketVersion) {\n    case 8:\n    case 13:\n      break;\n\n    default:\n      var e = new Error('Unsupported websocket client version: ' + this.webSocketVersion + 'Only versions 8 and 13 are supported.');\n      e.httpCode = 426;\n      e.headers = {\n        'Sec-WebSocket-Version': '13'\n      };\n      throw e;\n  }\n\n  if (this.webSocketVersion === 13) {\n    this.origin = request.headers['origin'];\n  } else if (this.webSocketVersion === 8) {\n    this.origin = request.headers['sec-websocket-origin'];\n  } // Protocol is optional.\n\n\n  var protocolString = request.headers['sec-websocket-protocol'];\n  this.protocolFullCaseMap = {};\n  this.requestedProtocols = [];\n\n  if (protocolString) {\n    var requestedProtocolsFullCase = protocolString.split(headerValueSplitRegExp);\n    requestedProtocolsFullCase.forEach(function (protocol) {\n      var lcProtocol = protocol.toLocaleLowerCase();\n      self.requestedProtocols.push(lcProtocol);\n      self.protocolFullCaseMap[lcProtocol] = protocol;\n    });\n  }\n\n  if (!this.serverConfig.ignoreXForwardedFor && request.headers['x-forwarded-for']) {\n    var immediatePeerIP = this.remoteAddress;\n    this.remoteAddresses = request.headers['x-forwarded-for'].split(xForwardedForSeparatorRegExp);\n    this.remoteAddresses.push(immediatePeerIP);\n    this.remoteAddress = this.remoteAddresses[0];\n  } // Extensions are optional.\n\n\n  if (this.serverConfig.parseExtensions) {\n    var extensionsString = request.headers['sec-websocket-extensions'];\n    this.requestedExtensions = this.parseExtensions(extensionsString);\n  } else {\n    this.requestedExtensions = [];\n  } // Cookies are optional\n\n\n  if (this.serverConfig.parseCookies) {\n    var cookieString = request.headers['cookie'];\n    this.cookies = this.parseCookies(cookieString);\n  } else {\n    this.cookies = [];\n  }\n};\n\nWebSocketRequest.prototype.parseExtensions = function (extensionsString) {\n  if (!extensionsString || extensionsString.length === 0) {\n    return [];\n  }\n\n  var extensions = extensionsString.toLocaleLowerCase().split(headerValueSplitRegExp);\n  extensions.forEach(function (extension, index, array) {\n    var params = extension.split(headerParamSplitRegExp);\n    var extensionName = params[0];\n    var extensionParams = params.slice(1);\n    extensionParams.forEach(function (rawParam, index, array) {\n      var arr = rawParam.split('=');\n      var obj = {\n        name: arr[0],\n        value: arr[1]\n      };\n      array.splice(index, 1, obj);\n    });\n    var obj = {\n      name: extensionName,\n      params: extensionParams\n    };\n    array.splice(index, 1, obj);\n  });\n  return extensions;\n}; // This function adapted from node-cookie\n// https://github.com/shtylman/node-cookie\n\n\nWebSocketRequest.prototype.parseCookies = function (str) {\n  // Sanity Check\n  if (!str || typeof str !== 'string') {\n    return [];\n  }\n\n  var cookies = [];\n  var pairs = str.split(cookieSeparatorRegEx);\n  pairs.forEach(function (pair) {\n    var eq_idx = pair.indexOf('=');\n\n    if (eq_idx === -1) {\n      cookies.push({\n        name: pair,\n        value: null\n      });\n      return;\n    }\n\n    var key = pair.substr(0, eq_idx).trim();\n    var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values\n\n    if ('\"' === val[0]) {\n      val = val.slice(1, -1);\n    }\n\n    cookies.push({\n      name: key,\n      value: decodeURIComponent(val)\n    });\n  });\n  return cookies;\n};\n\nWebSocketRequest.prototype.accept = function (acceptedProtocol, allowedOrigin, cookies) {\n  this._verifyResolution(); // TODO: Handle extensions\n\n\n  var protocolFullCase;\n\n  if (acceptedProtocol) {\n    protocolFullCase = this.protocolFullCaseMap[acceptedProtocol.toLocaleLowerCase()];\n\n    if (typeof protocolFullCase === 'undefined') {\n      protocolFullCase = acceptedProtocol;\n    }\n  } else {\n    protocolFullCase = acceptedProtocol;\n  }\n\n  this.protocolFullCaseMap = null; // Create key validation hash\n\n  var sha1 = crypto.createHash('sha1');\n  sha1.update(this.key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n  var acceptKey = sha1.digest('base64');\n  var response = 'HTTP/1.1 101 Switching Protocols\\r\\n' + 'Upgrade: websocket\\r\\n' + 'Connection: Upgrade\\r\\n' + 'Sec-WebSocket-Accept: ' + acceptKey + '\\r\\n';\n\n  if (protocolFullCase) {\n    // validate protocol\n    for (var i = 0; i < protocolFullCase.length; i++) {\n      var charCode = protocolFullCase.charCodeAt(i);\n      var character = protocolFullCase.charAt(i);\n\n      if (charCode < 0x21 || charCode > 0x7E || separators.indexOf(character) !== -1) {\n        this.reject(500);\n        throw new Error('Illegal character \"' + String.fromCharCode(character) + '\" in subprotocol.');\n      }\n    }\n\n    if (this.requestedProtocols.indexOf(acceptedProtocol) === -1) {\n      this.reject(500);\n      throw new Error('Specified protocol was not requested by the client.');\n    }\n\n    protocolFullCase = protocolFullCase.replace(headerSanitizeRegExp, '');\n    response += 'Sec-WebSocket-Protocol: ' + protocolFullCase + '\\r\\n';\n  }\n\n  this.requestedProtocols = null;\n\n  if (allowedOrigin) {\n    allowedOrigin = allowedOrigin.replace(headerSanitizeRegExp, '');\n\n    if (this.webSocketVersion === 13) {\n      response += 'Origin: ' + allowedOrigin + '\\r\\n';\n    } else if (this.webSocketVersion === 8) {\n      response += 'Sec-WebSocket-Origin: ' + allowedOrigin + '\\r\\n';\n    }\n  }\n\n  if (cookies) {\n    if (!Array.isArray(cookies)) {\n      this.reject(500);\n      throw new Error('Value supplied for \"cookies\" argument must be an array.');\n    }\n\n    var seenCookies = {};\n    cookies.forEach(function (cookie) {\n      if (!cookie.name || !cookie.value) {\n        this.reject(500);\n        throw new Error('Each cookie to set must at least provide a \"name\" and \"value\"');\n      } // Make sure there are no \\r\\n sequences inserted\n\n\n      cookie.name = cookie.name.replace(controlCharsAndSemicolonRegEx, '');\n      cookie.value = cookie.value.replace(controlCharsAndSemicolonRegEx, '');\n\n      if (seenCookies[cookie.name]) {\n        this.reject(500);\n        throw new Error('You may not specify the same cookie name twice.');\n      }\n\n      seenCookies[cookie.name] = true; // token (RFC 2616, Section 2.2)\n\n      var invalidChar = cookie.name.match(cookieNameValidateRegEx);\n\n      if (invalidChar) {\n        this.reject(500);\n        throw new Error('Illegal character ' + invalidChar[0] + ' in cookie name');\n      } // RFC 6265, Section 4.1.1\n      // *cookie-octet / ( DQUOTE *cookie-octet DQUOTE ) | %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n\n\n      if (cookie.value.match(cookieValueDQuoteValidateRegEx)) {\n        invalidChar = cookie.value.slice(1, -1).match(cookieValueValidateRegEx);\n      } else {\n        invalidChar = cookie.value.match(cookieValueValidateRegEx);\n      }\n\n      if (invalidChar) {\n        this.reject(500);\n        throw new Error('Illegal character ' + invalidChar[0] + ' in cookie value');\n      }\n\n      var cookieParts = [cookie.name + '=' + cookie.value]; // RFC 6265, Section 4.1.1\n      // 'Path=' path-value | <any CHAR except CTLs or ';'>\n\n      if (cookie.path) {\n        invalidChar = cookie.path.match(controlCharsAndSemicolonRegEx);\n\n        if (invalidChar) {\n          this.reject(500);\n          throw new Error('Illegal character ' + invalidChar[0] + ' in cookie path');\n        }\n\n        cookieParts.push('Path=' + cookie.path);\n      } // RFC 6265, Section 4.1.2.3\n      // 'Domain=' subdomain\n\n\n      if (cookie.domain) {\n        if (typeof cookie.domain !== 'string') {\n          this.reject(500);\n          throw new Error('Domain must be specified and must be a string.');\n        }\n\n        invalidChar = cookie.domain.match(controlCharsAndSemicolonRegEx);\n\n        if (invalidChar) {\n          this.reject(500);\n          throw new Error('Illegal character ' + invalidChar[0] + ' in cookie domain');\n        }\n\n        cookieParts.push('Domain=' + cookie.domain.toLowerCase());\n      } // RFC 6265, Section 4.1.1\n      //'Expires=' sane-cookie-date | Force Date object requirement by using only epoch\n\n\n      if (cookie.expires) {\n        if (!(cookie.expires instanceof Date)) {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"expires\" must be a vaild date object');\n        }\n\n        cookieParts.push('Expires=' + cookie.expires.toGMTString());\n      } // RFC 6265, Section 4.1.1\n      //'Max-Age=' non-zero-digit *DIGIT\n\n\n      if (cookie.maxage) {\n        var maxage = cookie.maxage;\n\n        if (typeof maxage === 'string') {\n          maxage = parseInt(maxage, 10);\n        }\n\n        if (isNaN(maxage) || maxage <= 0) {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"maxage\" must be a non-zero number');\n        }\n\n        maxage = Math.round(maxage);\n        cookieParts.push('Max-Age=' + maxage.toString(10));\n      } // RFC 6265, Section 4.1.1\n      //'Secure;'\n\n\n      if (cookie.secure) {\n        if (typeof cookie.secure !== 'boolean') {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"secure\" must be of type boolean');\n        }\n\n        cookieParts.push('Secure');\n      } // RFC 6265, Section 4.1.1\n      //'HttpOnly;'\n\n\n      if (cookie.httponly) {\n        if (typeof cookie.httponly !== 'boolean') {\n          this.reject(500);\n          throw new Error('Value supplied for cookie \"httponly\" must be of type boolean');\n        }\n\n        cookieParts.push('HttpOnly');\n      }\n\n      response += 'Set-Cookie: ' + cookieParts.join(';') + '\\r\\n';\n    }.bind(this));\n  } // TODO: handle negotiated extensions\n  // if (negotiatedExtensions) {\n  //     response += 'Sec-WebSocket-Extensions: ' + negotiatedExtensions.join(', ') + '\\r\\n';\n  // }\n  // Mark the request resolved now so that the user can't call accept or\n  // reject a second time.\n\n\n  this._resolved = true;\n  this.emit('requestResolved', this);\n  response += '\\r\\n';\n  var connection = new WebSocketConnection(this.socket, [], acceptedProtocol, false, this.serverConfig);\n  connection.webSocketVersion = this.webSocketVersion;\n  connection.remoteAddress = this.remoteAddress;\n  connection.remoteAddresses = this.remoteAddresses;\n  var self = this;\n\n  if (this._socketIsClosing) {\n    // Handle case when the client hangs up before we get a chance to\n    // accept the connection and send our side of the opening handshake.\n    cleanupFailedConnection(connection);\n  } else {\n    this.socket.write(response, 'ascii', function (error) {\n      if (error) {\n        cleanupFailedConnection(connection);\n        return;\n      }\n\n      self._removeSocketCloseListeners();\n\n      connection._addSocketEventListeners();\n    });\n  }\n\n  this.emit('requestAccepted', connection);\n  return connection;\n};\n\nWebSocketRequest.prototype.reject = function (status, reason, extraHeaders) {\n  this._verifyResolution(); // Mark the request resolved now so that the user can't call accept or\n  // reject a second time.\n\n\n  this._resolved = true;\n  this.emit('requestResolved', this);\n\n  if (typeof status !== 'number') {\n    status = 403;\n  }\n\n  var response = 'HTTP/1.1 ' + status + ' ' + httpStatusDescriptions[status] + '\\r\\n' + 'Connection: close\\r\\n';\n\n  if (reason) {\n    reason = reason.replace(headerSanitizeRegExp, '');\n    response += 'X-WebSocket-Reject-Reason: ' + reason + '\\r\\n';\n  }\n\n  if (extraHeaders) {\n    for (var key in extraHeaders) {\n      var sanitizedValue = extraHeaders[key].toString().replace(headerSanitizeRegExp, '');\n      var sanitizedKey = key.replace(headerSanitizeRegExp, '');\n      response += sanitizedKey + ': ' + sanitizedValue + '\\r\\n';\n    }\n  }\n\n  response += '\\r\\n';\n  this.socket.end(response, 'ascii');\n  this.emit('requestRejected', this);\n};\n\nWebSocketRequest.prototype._handleSocketCloseBeforeAccept = function () {\n  this._socketIsClosing = true;\n\n  this._removeSocketCloseListeners();\n};\n\nWebSocketRequest.prototype._removeSocketCloseListeners = function () {\n  this.socket.removeListener('end', this._socketCloseHandler);\n  this.socket.removeListener('close', this._socketCloseHandler);\n};\n\nWebSocketRequest.prototype._verifyResolution = function () {\n  if (this._resolved) {\n    throw new Error('WebSocketRequest may only be accepted or rejected one time.');\n  }\n};\n\nfunction cleanupFailedConnection(connection) {\n  // Since we have to return a connection object even if the socket is\n  // already dead in order not to break the API, we schedule a 'close'\n  // event on the connection object to occur immediately.\n  process.nextTick(function () {\n    // WebSocketConnection.CLOSE_REASON_ABNORMAL = 1006\n    // Third param: Skip sending the close frame to a dead socket\n    connection.drop(1006, 'TCP connection lost before handshake completed.', true);\n  });\n}\n\nmodule.exports = WebSocketRequest;","map":{"version":3,"sources":["/home/thaumy/Desktop/idb5-ui/node_modules/websocket/lib/WebSocketRequest.js"],"names":["crypto","require","util","url","EventEmitter","WebSocketConnection","headerValueSplitRegExp","headerParamSplitRegExp","headerSanitizeRegExp","xForwardedForSeparatorRegExp","separators","String","fromCharCode","controlChars","i","push","cookieNameValidateRegEx","cookieValueValidateRegEx","cookieValueDQuoteValidateRegEx","controlCharsAndSemicolonRegEx","cookieSeparatorRegEx","httpStatusDescriptions","WebSocketRequest","socket","httpRequest","serverConfig","call","resource","remoteAddress","remoteAddresses","_socketIsClosing","_socketCloseHandler","_handleSocketCloseBeforeAccept","bind","on","_resolved","inherits","prototype","readHandshake","self","request","resourceURL","parse","host","headers","Error","key","webSocketVersion","parseInt","isNaN","e","httpCode","origin","protocolString","protocolFullCaseMap","requestedProtocols","requestedProtocolsFullCase","split","forEach","protocol","lcProtocol","toLocaleLowerCase","ignoreXForwardedFor","immediatePeerIP","parseExtensions","extensionsString","requestedExtensions","parseCookies","cookieString","cookies","length","extensions","extension","index","array","params","extensionName","extensionParams","slice","rawParam","arr","obj","name","value","splice","str","pairs","pair","eq_idx","indexOf","substr","trim","val","decodeURIComponent","accept","acceptedProtocol","allowedOrigin","_verifyResolution","protocolFullCase","sha1","createHash","update","acceptKey","digest","response","charCode","charCodeAt","character","charAt","reject","replace","Array","isArray","seenCookies","cookie","invalidChar","match","cookieParts","path","domain","toLowerCase","expires","Date","toGMTString","maxage","Math","round","toString","secure","httponly","join","emit","connection","cleanupFailedConnection","write","error","_removeSocketCloseListeners","_addSocketEventListeners","status","reason","extraHeaders","sanitizedValue","sanitizedKey","end","removeListener","process","nextTick","drop","module","exports"],"mappings":"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","sourcesContent":["/************************************************************************\n *  Copyright 2010-2015 Brian McKelvey.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License.\n ***********************************************************************/\n\nvar crypto = require('crypto');\nvar util = require('util');\nvar url = require('url');\nvar EventEmitter = require('events').EventEmitter;\nvar WebSocketConnection = require('./WebSocketConnection');\n\nvar headerValueSplitRegExp = /,\\s*/;\nvar headerParamSplitRegExp = /;\\s*/;\nvar headerSanitizeRegExp = /[\\r\\n]/g;\nvar xForwardedForSeparatorRegExp = /,\\s*/;\nvar separators = [\n    '(', ')', '<', '>', '@',\n    ',', ';', ':', '\\\\', '\\\"',\n    '/', '[', ']', '?', '=',\n    '{', '}', ' ', String.fromCharCode(9)\n];\nvar controlChars = [String.fromCharCode(127) /* DEL */];\nfor (var i=0; i < 31; i ++) {\n    /* US-ASCII Control Characters */\n    controlChars.push(String.fromCharCode(i));\n}\n\nvar cookieNameValidateRegEx = /([\\x00-\\x20\\x22\\x28\\x29\\x2c\\x2f\\x3a-\\x3f\\x40\\x5b-\\x5e\\x7b\\x7d\\x7f])/;\nvar cookieValueValidateRegEx = /[^\\x21\\x23-\\x2b\\x2d-\\x3a\\x3c-\\x5b\\x5d-\\x7e]/;\nvar cookieValueDQuoteValidateRegEx = /^\"[^\"]*\"$/;\nvar controlCharsAndSemicolonRegEx = /[\\x00-\\x20\\x3b]/g;\n\nvar cookieSeparatorRegEx = /[;,] */;\n\nvar httpStatusDescriptions = {\n    100: 'Continue',\n    101: 'Switching Protocols',\n    200: 'OK',\n    201: 'Created',\n    203: 'Non-Authoritative Information',\n    204: 'No Content',\n    205: 'Reset Content',\n    206: 'Partial Content',\n    300: 'Multiple Choices',\n    301: 'Moved Permanently',\n    302: 'Found',\n    303: 'See Other',\n    304: 'Not Modified',\n    305: 'Use Proxy',\n    307: 'Temporary Redirect',\n    400: 'Bad Request',\n    401: 'Unauthorized',\n    402: 'Payment Required',\n    403: 'Forbidden',\n    404: 'Not Found',\n    406: 'Not Acceptable',\n    407: 'Proxy Authorization Required',\n    408: 'Request Timeout',\n    409: 'Conflict',\n    410: 'Gone',\n    411: 'Length Required',\n    412: 'Precondition Failed',\n    413: 'Request Entity Too Long',\n    414: 'Request-URI Too Long',\n    415: 'Unsupported Media Type',\n    416: 'Requested Range Not Satisfiable',\n    417: 'Expectation Failed',\n    426: 'Upgrade Required',\n    500: 'Internal Server Error',\n    501: 'Not Implemented',\n    502: 'Bad Gateway',\n    503: 'Service Unavailable',\n    504: 'Gateway Timeout',\n    505: 'HTTP Version Not Supported'\n};\n\nfunction WebSocketRequest(socket, httpRequest, serverConfig) {\n    // Superclass Constructor\n    EventEmitter.call(this);\n\n    this.socket = socket;\n    this.httpRequest = httpRequest;\n    this.resource = httpRequest.url;\n    this.remoteAddress = socket.remoteAddress;\n    this.remoteAddresses = [this.remoteAddress];\n    this.serverConfig = serverConfig;\n\n    // Watch for the underlying TCP socket closing before we call accept\n    this._socketIsClosing = false;\n    this._socketCloseHandler = this._handleSocketCloseBeforeAccept.bind(this);\n    this.socket.on('end', this._socketCloseHandler);\n    this.socket.on('close', this._socketCloseHandler);\n\n    this._resolved = false;\n}\n\nutil.inherits(WebSocketRequest, EventEmitter);\n\nWebSocketRequest.prototype.readHandshake = function() {\n    var self = this;\n    var request = this.httpRequest;\n\n    // Decode URL\n    this.resourceURL = url.parse(this.resource, true);\n\n    this.host = request.headers['host'];\n    if (!this.host) {\n        throw new Error('Client must provide a Host header.');\n    }\n\n    this.key = request.headers['sec-websocket-key'];\n    if (!this.key) {\n        throw new Error('Client must provide a value for Sec-WebSocket-Key.');\n    }\n\n    this.webSocketVersion = parseInt(request.headers['sec-websocket-version'], 10);\n\n    if (!this.webSocketVersion || isNaN(this.webSocketVersion)) {\n        throw new Error('Client must provide a value for Sec-WebSocket-Version.');\n    }\n\n    switch (this.webSocketVersion) {\n        case 8:\n        case 13:\n            break;\n        default:\n            var e = new Error('Unsupported websocket client version: ' + this.webSocketVersion +\n                              'Only versions 8 and 13 are supported.');\n            e.httpCode = 426;\n            e.headers = {\n                'Sec-WebSocket-Version': '13'\n            };\n            throw e;\n    }\n\n    if (this.webSocketVersion === 13) {\n        this.origin = request.headers['origin'];\n    }\n    else if (this.webSocketVersion === 8) {\n        this.origin = request.headers['sec-websocket-origin'];\n    }\n\n    // Protocol is optional.\n    var protocolString = request.headers['sec-websocket-protocol'];\n    this.protocolFullCaseMap = {};\n    this.requestedProtocols = [];\n    if (protocolString) {\n        var requestedProtocolsFullCase = protocolString.split(headerValueSplitRegExp);\n        requestedProtocolsFullCase.forEach(function(protocol) {\n            var lcProtocol = protocol.toLocaleLowerCase();\n            self.requestedProtocols.push(lcProtocol);\n            self.protocolFullCaseMap[lcProtocol] = protocol;\n        });\n    }\n\n    if (!this.serverConfig.ignoreXForwardedFor &&\n        request.headers['x-forwarded-for']) {\n        var immediatePeerIP = this.remoteAddress;\n        this.remoteAddresses = request.headers['x-forwarded-for']\n            .split(xForwardedForSeparatorRegExp);\n        this.remoteAddresses.push(immediatePeerIP);\n        this.remoteAddress = this.remoteAddresses[0];\n    }\n\n    // Extensions are optional.\n    if (this.serverConfig.parseExtensions) {\n        var extensionsString = request.headers['sec-websocket-extensions'];\n        this.requestedExtensions = this.parseExtensions(extensionsString);\n    } else {\n        this.requestedExtensions = [];\n    }\n\n    // Cookies are optional\n    if (this.serverConfig.parseCookies) {\n        var cookieString = request.headers['cookie'];\n        this.cookies = this.parseCookies(cookieString);\n    } else {\n        this.cookies = [];\n    }\n};\n\nWebSocketRequest.prototype.parseExtensions = function(extensionsString) {\n    if (!extensionsString || extensionsString.length === 0) {\n        return [];\n    }\n    var extensions = extensionsString.toLocaleLowerCase().split(headerValueSplitRegExp);\n    extensions.forEach(function(extension, index, array) {\n        var params = extension.split(headerParamSplitRegExp);\n        var extensionName = params[0];\n        var extensionParams = params.slice(1);\n        extensionParams.forEach(function(rawParam, index, array) {\n            var arr = rawParam.split('=');\n            var obj = {\n                name: arr[0],\n                value: arr[1]\n            };\n            array.splice(index, 1, obj);\n        });\n        var obj = {\n            name: extensionName,\n            params: extensionParams\n        };\n        array.splice(index, 1, obj);\n    });\n    return extensions;\n};\n\n// This function adapted from node-cookie\n// https://github.com/shtylman/node-cookie\nWebSocketRequest.prototype.parseCookies = function(str) {\n    // Sanity Check\n    if (!str || typeof(str) !== 'string') {\n        return [];\n    }\n\n    var cookies = [];\n    var pairs = str.split(cookieSeparatorRegEx);\n\n    pairs.forEach(function(pair) {\n        var eq_idx = pair.indexOf('=');\n        if (eq_idx === -1) {\n            cookies.push({\n                name: pair,\n                value: null\n            });\n            return;\n        }\n\n        var key = pair.substr(0, eq_idx).trim();\n        var val = pair.substr(++eq_idx, pair.length).trim();\n\n        // quoted values\n        if ('\"' === val[0]) {\n            val = val.slice(1, -1);\n        }\n\n        cookies.push({\n            name: key,\n            value: decodeURIComponent(val)\n        });\n    });\n\n    return cookies;\n};\n\nWebSocketRequest.prototype.accept = function(acceptedProtocol, allowedOrigin, cookies) {\n    this._verifyResolution();\n\n    // TODO: Handle extensions\n\n    var protocolFullCase;\n\n    if (acceptedProtocol) {\n        protocolFullCase = this.protocolFullCaseMap[acceptedProtocol.toLocaleLowerCase()];\n        if (typeof(protocolFullCase) === 'undefined') {\n            protocolFullCase = acceptedProtocol;\n        }\n    }\n    else {\n        protocolFullCase = acceptedProtocol;\n    }\n    this.protocolFullCaseMap = null;\n\n    // Create key validation hash\n    var sha1 = crypto.createHash('sha1');\n    sha1.update(this.key + '258EAFA5-E914-47DA-95CA-C5AB0DC85B11');\n    var acceptKey = sha1.digest('base64');\n\n    var response = 'HTTP/1.1 101 Switching Protocols\\r\\n' +\n                   'Upgrade: websocket\\r\\n' +\n                   'Connection: Upgrade\\r\\n' +\n                   'Sec-WebSocket-Accept: ' + acceptKey + '\\r\\n';\n\n    if (protocolFullCase) {\n        // validate protocol\n        for (var i=0; i < protocolFullCase.length; i++) {\n            var charCode = protocolFullCase.charCodeAt(i);\n            var character = protocolFullCase.charAt(i);\n            if (charCode < 0x21 || charCode > 0x7E || separators.indexOf(character) !== -1) {\n                this.reject(500);\n                throw new Error('Illegal character \"' + String.fromCharCode(character) + '\" in subprotocol.');\n            }\n        }\n        if (this.requestedProtocols.indexOf(acceptedProtocol) === -1) {\n            this.reject(500);\n            throw new Error('Specified protocol was not requested by the client.');\n        }\n\n        protocolFullCase = protocolFullCase.replace(headerSanitizeRegExp, '');\n        response += 'Sec-WebSocket-Protocol: ' + protocolFullCase + '\\r\\n';\n    }\n    this.requestedProtocols = null;\n\n    if (allowedOrigin) {\n        allowedOrigin = allowedOrigin.replace(headerSanitizeRegExp, '');\n        if (this.webSocketVersion === 13) {\n            response += 'Origin: ' + allowedOrigin + '\\r\\n';\n        }\n        else if (this.webSocketVersion === 8) {\n            response += 'Sec-WebSocket-Origin: ' + allowedOrigin + '\\r\\n';\n        }\n    }\n\n    if (cookies) {\n        if (!Array.isArray(cookies)) {\n            this.reject(500);\n            throw new Error('Value supplied for \"cookies\" argument must be an array.');\n        }\n        var seenCookies = {};\n        cookies.forEach(function(cookie) {\n            if (!cookie.name || !cookie.value) {\n                this.reject(500);\n                throw new Error('Each cookie to set must at least provide a \"name\" and \"value\"');\n            }\n\n            // Make sure there are no \\r\\n sequences inserted\n            cookie.name = cookie.name.replace(controlCharsAndSemicolonRegEx, '');\n            cookie.value = cookie.value.replace(controlCharsAndSemicolonRegEx, '');\n\n            if (seenCookies[cookie.name]) {\n                this.reject(500);\n                throw new Error('You may not specify the same cookie name twice.');\n            }\n            seenCookies[cookie.name] = true;\n\n            // token (RFC 2616, Section 2.2)\n            var invalidChar = cookie.name.match(cookieNameValidateRegEx);\n            if (invalidChar) {\n                this.reject(500);\n                throw new Error('Illegal character ' + invalidChar[0] + ' in cookie name');\n            }\n\n            // RFC 6265, Section 4.1.1\n            // *cookie-octet / ( DQUOTE *cookie-octet DQUOTE ) | %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n            if (cookie.value.match(cookieValueDQuoteValidateRegEx)) {\n                invalidChar = cookie.value.slice(1, -1).match(cookieValueValidateRegEx);\n            } else {\n                invalidChar = cookie.value.match(cookieValueValidateRegEx);\n            }\n            if (invalidChar) {\n                this.reject(500);\n                throw new Error('Illegal character ' + invalidChar[0] + ' in cookie value');\n            }\n\n            var cookieParts = [cookie.name + '=' + cookie.value];\n\n            // RFC 6265, Section 4.1.1\n            // 'Path=' path-value | <any CHAR except CTLs or ';'>\n            if(cookie.path){\n                invalidChar = cookie.path.match(controlCharsAndSemicolonRegEx);\n                if (invalidChar) {\n                    this.reject(500);\n                    throw new Error('Illegal character ' + invalidChar[0] + ' in cookie path');\n                }\n                cookieParts.push('Path=' + cookie.path);\n            }\n\n            // RFC 6265, Section 4.1.2.3\n            // 'Domain=' subdomain\n            if (cookie.domain) {\n                if (typeof(cookie.domain) !== 'string') {\n                    this.reject(500);\n                    throw new Error('Domain must be specified and must be a string.');\n                }\n                invalidChar = cookie.domain.match(controlCharsAndSemicolonRegEx);\n                if (invalidChar) {\n                    this.reject(500);\n                    throw new Error('Illegal character ' + invalidChar[0] + ' in cookie domain');\n                }\n                cookieParts.push('Domain=' + cookie.domain.toLowerCase());\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Expires=' sane-cookie-date | Force Date object requirement by using only epoch\n            if (cookie.expires) {\n                if (!(cookie.expires instanceof Date)){\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"expires\" must be a vaild date object');\n                }\n                cookieParts.push('Expires=' + cookie.expires.toGMTString());\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Max-Age=' non-zero-digit *DIGIT\n            if (cookie.maxage) {\n                var maxage = cookie.maxage;\n                if (typeof(maxage) === 'string') {\n                    maxage = parseInt(maxage, 10);\n                }\n                if (isNaN(maxage) || maxage <= 0 ) {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"maxage\" must be a non-zero number');\n                }\n                maxage = Math.round(maxage);\n                cookieParts.push('Max-Age=' + maxage.toString(10));\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'Secure;'\n            if (cookie.secure) {\n                if (typeof(cookie.secure) !== 'boolean') {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"secure\" must be of type boolean');\n                }\n                cookieParts.push('Secure');\n            }\n\n            // RFC 6265, Section 4.1.1\n            //'HttpOnly;'\n            if (cookie.httponly) {\n                if (typeof(cookie.httponly) !== 'boolean') {\n                    this.reject(500);\n                    throw new Error('Value supplied for cookie \"httponly\" must be of type boolean');\n                }\n                cookieParts.push('HttpOnly');\n            }\n\n            response += ('Set-Cookie: ' + cookieParts.join(';') + '\\r\\n');\n        }.bind(this));\n    }\n\n    // TODO: handle negotiated extensions\n    // if (negotiatedExtensions) {\n    //     response += 'Sec-WebSocket-Extensions: ' + negotiatedExtensions.join(', ') + '\\r\\n';\n    // }\n\n    // Mark the request resolved now so that the user can't call accept or\n    // reject a second time.\n    this._resolved = true;\n    this.emit('requestResolved', this);\n\n    response += '\\r\\n';\n\n    var connection = new WebSocketConnection(this.socket, [], acceptedProtocol, false, this.serverConfig);\n    connection.webSocketVersion = this.webSocketVersion;\n    connection.remoteAddress = this.remoteAddress;\n    connection.remoteAddresses = this.remoteAddresses;\n\n    var self = this;\n\n    if (this._socketIsClosing) {\n        // Handle case when the client hangs up before we get a chance to\n        // accept the connection and send our side of the opening handshake.\n        cleanupFailedConnection(connection);\n    }\n    else {\n        this.socket.write(response, 'ascii', function(error) {\n            if (error) {\n                cleanupFailedConnection(connection);\n                return;\n            }\n\n            self._removeSocketCloseListeners();\n            connection._addSocketEventListeners();\n        });\n    }\n\n    this.emit('requestAccepted', connection);\n    return connection;\n};\n\nWebSocketRequest.prototype.reject = function(status, reason, extraHeaders) {\n    this._verifyResolution();\n\n    // Mark the request resolved now so that the user can't call accept or\n    // reject a second time.\n    this._resolved = true;\n    this.emit('requestResolved', this);\n\n    if (typeof(status) !== 'number') {\n        status = 403;\n    }\n    var response = 'HTTP/1.1 ' + status + ' ' + httpStatusDescriptions[status] + '\\r\\n' +\n                   'Connection: close\\r\\n';\n    if (reason) {\n        reason = reason.replace(headerSanitizeRegExp, '');\n        response += 'X-WebSocket-Reject-Reason: ' + reason + '\\r\\n';\n    }\n\n    if (extraHeaders) {\n        for (var key in extraHeaders) {\n            var sanitizedValue = extraHeaders[key].toString().replace(headerSanitizeRegExp, '');\n            var sanitizedKey = key.replace(headerSanitizeRegExp, '');\n            response += (sanitizedKey + ': ' + sanitizedValue + '\\r\\n');\n        }\n    }\n\n    response += '\\r\\n';\n    this.socket.end(response, 'ascii');\n\n    this.emit('requestRejected', this);\n};\n\nWebSocketRequest.prototype._handleSocketCloseBeforeAccept = function() {\n    this._socketIsClosing = true;\n    this._removeSocketCloseListeners();\n};\n\nWebSocketRequest.prototype._removeSocketCloseListeners = function() {\n    this.socket.removeListener('end', this._socketCloseHandler);\n    this.socket.removeListener('close', this._socketCloseHandler);\n};\n\nWebSocketRequest.prototype._verifyResolution = function() {\n    if (this._resolved) {\n        throw new Error('WebSocketRequest may only be accepted or rejected one time.');\n    }\n};\n\nfunction cleanupFailedConnection(connection) {\n    // Since we have to return a connection object even if the socket is\n    // already dead in order not to break the API, we schedule a 'close'\n    // event on the connection object to occur immediately.\n    process.nextTick(function() {\n        // WebSocketConnection.CLOSE_REASON_ABNORMAL = 1006\n        // Third param: Skip sending the close frame to a dead socket\n        connection.drop(1006, 'TCP connection lost before handshake completed.', true);\n    });\n}\n\nmodule.exports = WebSocketRequest;\n"]},"metadata":{},"sourceType":"script"}