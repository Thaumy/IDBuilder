{"ast":null,"code":"'use strict'; //\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\n\nconst tokenChars = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\n\nfunction isValidStatusCode(code) {\n  return code >= 1000 && code <= 1014 && code !== 1004 && code !== 1005 && code !== 1006 || code >= 3000 && code <= 4999;\n}\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\n\n\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (i + 1 === len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (i + 2 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 || // Overlong\n      buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0 // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (i + 3 >= len || (buf[i + 1] & 0xc0) !== 0x80 || (buf[i + 2] & 0xc0) !== 0x80 || (buf[i + 3] & 0xc0) !== 0x80 || buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 || // Overlong\n      buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  module.exports = {\n    isValidStatusCode,\n\n    isValidUTF8(buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    },\n\n    tokenChars\n  };\n} catch (e)\n/* istanbul ignore next */\n{\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8: _isValidUTF8,\n    tokenChars\n  };\n}","map":{"version":3,"sources":["/home/thaumy/Desktop/idb5-ui/node_modules/ws/lib/validation.js"],"names":["tokenChars","isValidStatusCode","code","_isValidUTF8","buf","len","length","i","isValidUTF8","require","module","exports","e"],"mappings":"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","sourcesContent":["'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8(buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    },\n    tokenChars\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    isValidStatusCode,\n    isValidUTF8: _isValidUTF8,\n    tokenChars\n  };\n}\n"]},"metadata":{},"sourceType":"script"}