{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { colorToInt, colorToRGB, createRange, darken, getCurrentInstance, getLuma, intToHex, lighten, mergeDeep, propsFactory } from \"../util/index.mjs\"; // Utilities\n\nimport { computed, inject, provide, ref, watch } from 'vue'; // Types\n\nimport { APCAcontrast } from \"../util/color/APCA.mjs\";\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\nconst defaultThemeOptions = {\n  defaultTheme: 'light',\n  variations: {\n    colors: [],\n    lighten: 0,\n    darken: 0\n  },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'activated-opacity': 0.12,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.12,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'dragged-opacity': 0.08,\n        'pressed-opacity': 0.16,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#C2C2C2'\n      }\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00'\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'activated-opacity': 0.12,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'dragged-opacity': 0.08,\n        'pressed-opacity': 0.16,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#B7B7B7'\n      }\n    }\n  }\n};\n\nconst parseThemeOptions = function () {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultThemeOptions;\n  if (!options) return { ...defaultThemeOptions,\n    isDisabled: true\n  };\n  return mergeDeep(defaultThemeOptions, options);\n}; // Composables\n\n\nexport function createTheme(options) {\n  const parsedOptions = parseThemeOptions(options);\n  const styleEl = ref();\n  const current = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const variations = ref(parsedOptions.variations);\n  const computedThemes = computed(() => {\n    return Object.keys(themes.value).reduce((obj, key) => {\n      var _parsedOptions$variat;\n\n      const theme = { ...themes.value[key],\n        colors: { ...themes.value[key].colors,\n          ...((_parsedOptions$variat = parsedOptions.variations.colors) != null ? _parsedOptions$variat : []).reduce((obj, color) => {\n            return { ...obj,\n              ...genColorVariations(color, themes.value[key].colors[color])\n            };\n          }, {})\n        }\n      };\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\n        const onColor = `on-${color}`;\n        const colorVal = colorToInt(theme.colors[color]);\n        const blackContrast = Math.abs(APCAcontrast(0, colorVal));\n        const whiteContrast = Math.abs(APCAcontrast(0xffffff, colorVal)); // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n        // Prefer white text if both have an acceptable contrast ratio\n\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000';\n      }\n\n      obj[key] = theme;\n      return obj;\n    }, {});\n  });\n\n  function genColorVariations(name, color) {\n    const obj = {};\n\n    for (const variation of ['lighten', 'darken']) {\n      const fn = variation === 'lighten' ? lighten : darken;\n\n      for (const amount of createRange(variations.value[variation], 1)) {\n        obj[`${name}-${variation}-${amount}`] = intToHex(fn(colorToInt(color), amount));\n      }\n    }\n\n    return obj;\n  }\n\n  function genCssVariables(name) {\n    const theme = computedThemes.value[name];\n    if (!theme) throw new Error(`Could not find theme ${name}`);\n    const lightOverlay = theme.dark ? 2 : 1;\n    const darkOverlay = theme.dark ? 1 : 2;\n    const variables = [];\n\n    for (const [key, value] of Object.entries(theme.colors)) {\n      const rgb = colorToRGB(value);\n      variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n\n      if (!key.startsWith('on-')) {\n        variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n      }\n    }\n\n    return variables;\n  }\n\n  function genStyleElement() {\n    if (typeof document === 'undefined' || styleEl.value) return;\n    const el = document.createElement('style');\n    el.type = 'text/css';\n    el.id = 'vuetify-theme-stylesheet';\n    styleEl.value = el;\n    document.head.appendChild(styleEl.value);\n  }\n\n  function createCssClass(selector, content) {\n    return [`${selector} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n'];\n  }\n\n  function updateStyles() {\n    if (parsedOptions.isDisabled) return;\n    genStyleElement();\n    const lines = [];\n\n    for (const themeName of Object.keys(computedThemes.value)) {\n      const variables = computedThemes.value[themeName].variables;\n      lines.push(...createCssClass(`.v-theme--${themeName}`, [...genCssVariables(themeName), ...Object.keys(variables).map(key => {\n        const value = variables[key];\n        const color = typeof value === 'string' && value.startsWith('#') ? colorToRGB(value) : undefined;\n        const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n        return `--v-${key}: ${rgb != null ? rgb : value}`;\n      })]));\n    } // Assumption is that all theme objects have the same keys, so it doesn't matter which one\n    // we use since the values are all css variables.\n\n\n    const firstTheme = Object.keys(computedThemes.value)[0];\n\n    for (const key of Object.keys(computedThemes.value[firstTheme].colors)) {\n      if (/on-[a-z]/.test(key)) {\n        lines.push(...createCssClass(`.${key}`, [`color: rgb(var(--v-theme-${key}))`]));\n      } else {\n        lines.push(...createCssClass(`.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background: rgb(var(--v-theme-${key}))`, `color: rgb(var(--v-theme-on-${key}))`]), ...createCssClass(`.text-${key}`, [`color: rgb(var(--v-theme-${key}))`]), ...createCssClass(`.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]));\n      }\n    }\n\n    if (styleEl.value) styleEl.value.innerHTML = lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  }\n\n  watch(themes, updateStyles, {\n    deep: true,\n    immediate: true\n  });\n  return {\n    isDisabled: parsedOptions.isDisabled,\n    themes: computedThemes,\n    setTheme: (key, theme) => themes.value[key] = theme,\n    getTheme: key => computedThemes.value[key],\n    current,\n    themeClasses: computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${current.value}`)\n  };\n}\n/**\n * Used to either set up and provide a new theme instance, or to pass\n * along the closest available already provided instance.\n */\n\nexport function useTheme(props) {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const current = computed(() => {\n    var _props$theme;\n\n    return (_props$theme = props.theme) != null ? _props$theme : theme == null ? void 0 : theme.current.value;\n  });\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${current.value}`);\n  const newTheme = { ...theme,\n    current,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}","map":{"version":3,"mappings":"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","names":["colorToInt","colorToRGB","createRange","darken","getCurrentInstance","getLuma","intToHex","lighten","mergeDeep","propsFactory","computed","inject","provide","ref","watch","APCAcontrast","ThemeSymbol","Symbol","for","makeThemeProps","theme","String","defaultThemeOptions","defaultTheme","variations","colors","themes","light","dark","background","surface","primary","secondary","error","info","success","warning","variables","parseThemeOptions","options","isDisabled","createTheme","parsedOptions","styleEl","current","computedThemes","Object","keys","value","reduce","obj","key","color","genColorVariations","test","onColor","colorVal","blackContrast","Math","abs","whiteContrast","min","name","variation","fn","amount","genCssVariables","Error","lightOverlay","darkOverlay","entries","rgb","push","r","g","b","startsWith","genStyleElement","document","el","createElement","type","id","head","appendChild","createCssClass","selector","content","map","line","updateStyles","lines","themeName","undefined","firstTheme","innerHTML","str","i","join","deep","immediate","setTheme","getTheme","themeClasses","useTheme","props","newTheme"],"sources":["../../src/composables/theme.ts"],"sourcesContent":["import {\n  colorToInt,\n  colorToRGB,\n  createRange,\n  darken,\n  getCurrentInstance,\n  getLuma,\n  intToHex,\n  lighten,\n  mergeDeep,\n  propsFactory,\n} from '@/util'\n// Utilities\nimport { computed, inject, provide, ref, watch } from 'vue'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\nimport { APCAcontrast } from '@/util/color/APCA'\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\ninterface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\ninterface ThemeDefinitionColors extends BaseColors, Partial<OnColors> {\n  [key: string]: string | undefined\n}\n\nexport interface ThemeDefinition {\n  dark: boolean\n  colors: ThemeDefinitionColors\n  variables: Record<string, string | number>\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeOptions {\n  isDisabled: boolean\n  defaultTheme: string\n  variations: VariationsOptions\n  themes: Record<string, ThemeDefinition>\n}\n\nexport type ThemeOptions = false | {\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n}\n\nexport interface ThemeInstance {\n  isDisabled: boolean\n  themes: Ref<Record<string, InternalThemeDefinition>>\n  current: Ref<string>\n  themeClasses: Ref<string | undefined>\n  setTheme: (key: string, theme: ThemeDefinition) => void\n  getTheme: (key: string) => InternalThemeDefinition\n}\n\nexport const ThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nexport const makeThemeProps = propsFactory({\n  theme: String,\n}, 'theme')\n\nconst defaultThemeOptions: ThemeOptions = {\n  defaultTheme: 'light',\n  variations: { colors: [], lighten: 0, darken: 0 },\n  themes: {\n    light: {\n      dark: false,\n      colors: {\n        background: '#FFFFFF',\n        surface: '#FFFFFF',\n        primary: '#6200EE',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC6',\n        'secondary-darken-1': '#018786',\n        error: '#B00020',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '#000000',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'activated-opacity': 0.12,\n        'idle-opacity': 0.04,\n        'hover-opacity': 0.12,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'dragged-opacity': 0.08,\n        'pressed-opacity': 0.16,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#C2C2C2',\n      },\n    },\n    dark: {\n      dark: true,\n      colors: {\n        background: '#121212',\n        surface: '#212121',\n        primary: '#BB86FC',\n        'primary-darken-1': '#3700B3',\n        secondary: '#03DAC5',\n        'secondary-darken-1': '#03DAC5',\n        error: '#CF6679',\n        info: '#2196F3',\n        success: '#4CAF50',\n        warning: '#FB8C00',\n      },\n      variables: {\n        'border-color': '#FFFFFF',\n        'border-opacity': 0.12,\n        'high-emphasis-opacity': 0.87,\n        'medium-emphasis-opacity': 0.60,\n        'disabled-opacity': 0.38,\n        'activated-opacity': 0.12,\n        'idle-opacity': 0.10,\n        'hover-opacity': 0.04,\n        'focus-opacity': 0.12,\n        'selected-opacity': 0.08,\n        'dragged-opacity': 0.08,\n        'pressed-opacity': 0.16,\n        'kbd-background-color': '#212529',\n        'kbd-color': '#FFFFFF',\n        'code-background-color': '#B7B7B7',\n      },\n    },\n  },\n}\n\nconst parseThemeOptions = (options: ThemeOptions = defaultThemeOptions): InternalThemeOptions => {\n  if (!options) return { ...defaultThemeOptions, isDisabled: true } as InternalThemeOptions\n\n  return mergeDeep(\n    defaultThemeOptions,\n    options,\n  ) as InternalThemeOptions\n}\n\n// Composables\nexport function createTheme (options?: ThemeOptions): ThemeInstance {\n  const parsedOptions = parseThemeOptions(options)\n  const styleEl = ref<HTMLStyleElement>()\n  const current = ref(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n  const variations = ref(parsedOptions.variations)\n\n  const computedThemes = computed(() => {\n    return Object.keys(themes.value).reduce((obj, key) => {\n      const theme: ThemeDefinition = {\n        ...themes.value[key],\n        colors: {\n          ...themes.value[key].colors,\n          ...(parsedOptions.variations.colors ?? []).reduce((obj, color) => {\n            return { ...obj, ...genColorVariations(color, themes.value[key].colors[color]!) }\n          }, {}),\n        },\n      }\n\n      for (const color of Object.keys(theme.colors)) {\n        if (/on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue\n\n        const onColor = `on-${color}` as keyof OnColors\n        const colorVal = colorToInt(theme.colors[color]!)\n\n        const blackContrast = Math.abs(APCAcontrast(0, colorVal))\n        const whiteContrast = Math.abs(APCAcontrast(0xffffff, colorVal))\n\n        // TODO: warn about poor color selections\n        // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n        // const minContrast = Math.max(blackContrast, whiteContrast)\n        // if (minContrast < 60) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n        // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n        //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n        // }\n\n        // Prefer white text if both have an acceptable contrast ratio\n        theme.colors[onColor] = whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000'\n      }\n\n      obj[key] = theme as InternalThemeDefinition\n\n      return obj\n    }, {} as Record<string, InternalThemeDefinition>)\n  })\n\n  function genColorVariations (name: string, color: string) {\n    const obj: Record<string, string> = {}\n    for (const variation of (['lighten', 'darken'] as const)) {\n      const fn = variation === 'lighten' ? lighten : darken\n      for (const amount of createRange(variations.value[variation], 1)) {\n        obj[`${name}-${variation}-${amount}`] = intToHex(fn(colorToInt(color), amount))\n      }\n    }\n\n    return obj\n  }\n\n  function genCssVariables (name: string) {\n    const theme = computedThemes.value[name]\n\n    if (!theme) throw new Error(`Could not find theme ${name}`)\n\n    const lightOverlay = theme.dark ? 2 : 1\n    const darkOverlay = theme.dark ? 1 : 2\n\n    const variables: string[] = []\n    for (const [key, value] of Object.entries(theme.colors)) {\n      const rgb = colorToRGB(value!)\n      variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n      if (!key.startsWith('on-')) {\n        variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n      }\n    }\n\n    return variables\n  }\n\n  function genStyleElement () {\n    if (typeof document === 'undefined' || styleEl.value) return\n\n    const el = document.createElement('style')\n    el.type = 'text/css'\n    el.id = 'vuetify-theme-stylesheet'\n\n    styleEl.value = el\n    document.head.appendChild(styleEl.value)\n  }\n\n  function createCssClass (selector: string, content: string[]) {\n    return [\n      `${selector} {\\n`,\n      ...content.map(line => `  ${line};\\n`),\n      '}\\n',\n    ]\n  }\n\n  function updateStyles () {\n    if (parsedOptions.isDisabled) return\n\n    genStyleElement()\n\n    const lines = []\n\n    for (const themeName of Object.keys(computedThemes.value)) {\n      const variables = computedThemes.value[themeName].variables\n\n      lines.push(...createCssClass(`.v-theme--${themeName}`, [\n        ...genCssVariables(themeName),\n        ...Object.keys(variables).map(key => {\n          const value = variables[key]\n          const color = typeof value === 'string' && value.startsWith('#') ? colorToRGB(value) : undefined\n          const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined\n\n          return `--v-${key}: ${rgb ?? value}`\n        }),\n      ]))\n    }\n\n    // Assumption is that all theme objects have the same keys, so it doesn't matter which one\n    // we use since the values are all css variables.\n    const firstTheme = Object.keys(computedThemes.value)[0]\n    for (const key of Object.keys(computedThemes.value[firstTheme].colors)) {\n      if (/on-[a-z]/.test(key)) {\n        lines.push(...createCssClass(`.${key}`, [`color: rgb(var(--v-theme-${key}))`]))\n      } else {\n        lines.push(\n          ...createCssClass(`.bg-${key}`, [\n            `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n            `background: rgb(var(--v-theme-${key}))`,\n            `color: rgb(var(--v-theme-on-${key}))`,\n          ]),\n          ...createCssClass(`.text-${key}`, [`color: rgb(var(--v-theme-${key}))`]),\n          ...createCssClass(`.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]),\n        )\n      }\n    }\n\n    if (styleEl.value) styleEl.value.innerHTML = lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  }\n\n  watch(themes, updateStyles, { deep: true, immediate: true })\n\n  return {\n    isDisabled: parsedOptions.isDisabled,\n    themes: computedThemes,\n    setTheme: (key: string, theme: ThemeDefinition) => themes.value[key] = theme,\n    getTheme: (key: string) => computedThemes.value[key],\n    current,\n    themeClasses: computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${current.value}`),\n  }\n}\n\n/**\n * Used to either set up and provide a new theme instance, or to pass\n * along the closest available already provided instance.\n */\nexport function useTheme (props: { theme?: string }) {\n  getCurrentInstance('useTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const current = computed<string>(() => {\n    return props.theme ?? theme?.current.value\n  })\n\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${current.value}`)\n\n  const newTheme: ThemeInstance = {\n    ...theme,\n    current,\n    themeClasses,\n  }\n\n  provide(ThemeSymbol, newTheme)\n\n  return newTheme\n}\n"]},"metadata":{},"sourceType":"module"}