{"ast":null,"code":"import { withDirectives as _withDirectives, vShow as _vShow, createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\"; // Components\n\nimport { VExpandTransition } from \"../transitions/index.mjs\";\nimport { VListChildren } from \"./VListChildren.mjs\"; // Composables\n\nimport { useNestedGroup } from \"../../composables/nested/nested.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\n\nimport { computed } from 'vue';\nimport { defineComponent, genericComponent } from \"../../util/index.mjs\";\nimport { createList, useDepth, useList } from \"./VList.mjs\"; // Types\n\nconst VListGroupItems = defineComponent({\n  name: 'VListGroupItems',\n  props: {\n    open: Boolean,\n    items: Array\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const parent = createList();\n    const depth = useDepth(parent.hasPrepend);\n    return () => {\n      return _createVNode(VExpandTransition, null, {\n        default: () => [_withDirectives(_createVNode(\"div\", {\n          \"class\": \"v-list-group__items\",\n          \"style\": {\n            '--v-list-depth': depth.value\n          }\n        }, [_createVNode(VListChildren, {\n          \"items\": props.items\n        }, slots, 8, [\"items\"])], 4), [[_vShow, props.open]])]\n      });\n    };\n  }\n\n});\nexport const VListGroup = genericComponent()({\n  name: 'VListGroup',\n  props: {\n    value: null,\n    collapseIcon: {\n      type: String,\n      default: '$collapse'\n    },\n    expandIcon: {\n      type: String,\n      default: '$expand'\n    },\n    items: Array,\n    ...makeTagProps()\n  },\n\n  setup(props, _ref2) {\n    let {\n      slots\n    } = _ref2;\n    const {\n      isOpen,\n      open\n    } = useNestedGroup(props);\n    const list = useList();\n\n    const onClick = e => {\n      open(!isOpen.value, e);\n    };\n\n    const headerProps = computed(() => ({\n      onClick,\n      appendIcon: isOpen.value ? props.collapseIcon : props.expandIcon,\n      class: 'v-list-group__header'\n    }));\n    return () => {\n      var _slots$header;\n\n      return _createVNode(props.tag, {\n        \"class\": ['v-list-group', {\n          'v-list-group--prepend': list == null ? void 0 : list.hasPrepend.value\n        }]\n      }, {\n        default: () => [(_slots$header = slots.header) == null ? void 0 : _slots$header.call(slots, headerProps.value), _createVNode(VListGroupItems, {\n          \"items\": props.items,\n          \"open\": isOpen.value\n        }, slots, 8, [\"items\", \"open\"])],\n        _: 1\n      }, 8, [\"class\"]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"8IAAA;;SACSA,yB;SACAC,qB,uBAET;;SACSC,sB;SACAC,oB,6BAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,iBAAiBC,wB;SACjBC,YAAYC,UAAUC,e,eAE/B;;AAWA,MAAMC,eAAe,GAAGL,eAAe,CAAC;AACtCM,MAAI,EAAE,iBADgC;AAGtCC,OAAK,EAAE;AACLC,QAAI,EAAEC,OADD;AAELC,SAAK,EAAEC;AAFF,GAH+B;;AAQtCC,OAAK,CAAEL,KAAF,QAAoB;AAAA,QAAX;AAAEM;AAAF,QAAWC;AACvB,UAAMC,MAAM,GAAGb,UAAU,EAAzB;AACA,UAAMc,KAAK,GAAGb,QAAQ,CAACY,MAAM,CAACE,UAAR,CAAtB;AAEA,WAAO,MAAM;AACX;AAAAC;AAAA,mBAEe,qBAFf;AAAA,mBAE4C;AAAE,8BAAkBF,KAAK,CAACG;AAA1B;AAF5C;AAAA,mBAG4BZ,KAAK,CAACG;AAHlC,WAGkDG,KAHlD,gCAEuFN,KAAK,CAACC,IAF7F;AAAA;AADF;AASD;;AArBqC,CAAD,CAAvC;AAwBA,OAAO,MAAMY,UAAU,GAAGnB,gBAAgB,GASrC;AACHK,MAAI,EAAE,YADH;AAGHC,OAAK,EAAE;AACLY,SAAK,EAAE,IADF;AAELE,gBAAY,EAAE;AACZC,UAAI,EAAEC,MADM;AAEZL,aAAO,EAAE;AAFG,KAFT;AAMLM,cAAU,EAAE;AACVF,UAAI,EAAEC,MADI;AAEVL,aAAO,EAAE;AAFC,KANP;AAULR,SAAK,EAAEC,KAVF;AAYL,OAAGb,YAAY;AAZV,GAHJ;;AAkBHc,OAAK,CAAEL,KAAF,SAAoB;AAAA,QAAX;AAAEM;AAAF,QAAWY;AACvB,UAAM;AAAEC,YAAF;AAAUlB;AAAV,QAAmBX,cAAc,CAACU,KAAD,CAAvC;AACA,UAAMoB,IAAI,GAAGvB,OAAO,EAApB;;AAEA,UAAMwB,OAAO,GAAIC,CAAD,IAAc;AAC5BrB,UAAI,CAAC,CAACkB,MAAM,CAACP,KAAT,EAAgBU,CAAhB,CAAJrB;AADF;;AAIA,UAAMsB,WAAW,GAAG/B,QAAQ,CAAC,OAAO;AAClC6B,aADkC;AAElCG,gBAAU,EAAEL,MAAM,CAACP,KAAPO,GAAenB,KAAK,CAACc,YAArBK,GAAoCnB,KAAK,CAACiB,UAFpB;AAGlCQ,WAAK,EAAE;AAH2B,KAAP,CAAD,CAA5B;AAMA,WAAO,MAAM;AAAA;;AACX;AAAA,iBAEW,CACL,cADK,EAEL;AACE,mCAAyBL,IAAzB,QAAyBA,GAAzB,MAAyBA,OAAI,CAAEV,UAANU,CAAiBR;AAD5C,SAFK;AAFX;AAAAD,yCASML,KAAK,CAACoB,MATZ,qBASMC,0BAAeJ,WAAW,CAACX,KAA3B,CATN;AAAA,mBAU4BZ,KAAK,CAACG,KAVlC;AAAA,kBAU+CgB,MAAM,CAACP;AAVtD,WAUsEN,KAVtE;AAAAsB;AAAA;AADF;AAeD;;AA/CE,CATqC,CAAnC","names":["VExpandTransition","VListChildren","useNestedGroup","makeTagProps","computed","defineComponent","genericComponent","createList","useDepth","useList","VListGroupItems","name","props","open","Boolean","items","Array","setup","slots","_ref","parent","depth","hasPrepend","default","value","VListGroup","collapseIcon","type","String","expandIcon","_ref2","isOpen","list","onClick","e","headerProps","appendIcon","class","header","_slots$header","_"],"sources":["../../../src/components/VList/VListGroup.tsx"],"sourcesContent":["// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { useNestedGroup } from '@/composables/nested/nested'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, genericComponent } from '@/util'\nimport { createList, useDepth, useList } from './VList'\n\n// Types\nimport type { Prop } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { ListItem } from './VList'\n\nexport type ListGroupHeaderSlot = {\n  onClick: (e: Event) => void\n  appendIcon: string\n  class: string\n}\n\nconst VListGroupItems = defineComponent({\n  name: 'VListGroupItems',\n\n  props: {\n    open: Boolean,\n    items: Array as Prop<ListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    const parent = createList()\n    const depth = useDepth(parent.hasPrepend)\n\n    return () => {\n      return (\n        <VExpandTransition>\n          <div class=\"v-list-group__items\" style={{ '--v-list-depth': depth.value }} v-show={props.open}>\n            <VListChildren items={props.items} v-slots={slots} />\n          </div>\n        </VExpandTransition>\n      )\n    }\n  },\n})\n\nexport const VListGroup = genericComponent<new <T extends ListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    header: [ListGroupHeaderSlot]\n    item: [T]\n    default: []\n  }>\n}>()({\n  name: 'VListGroup',\n\n  props: {\n    value: null,\n    collapseIcon: {\n      type: String,\n      default: '$collapse',\n    },\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    items: Array as Prop<ListItem[]>,\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const { isOpen, open } = useNestedGroup(props)\n    const list = useList()\n\n    const onClick = (e: Event) => {\n      open(!isOpen.value, e)\n    }\n\n    const headerProps = computed(() => ({\n      onClick,\n      appendIcon: isOpen.value ? props.collapseIcon : props.expandIcon,\n      class: 'v-list-group__header',\n    }))\n\n    return () => {\n      return (\n        <props.tag\n          class={[\n            'v-list-group',\n            {\n              'v-list-group--prepend': list?.hasPrepend.value,\n            },\n          ]}\n        >\n          { slots.header?.(headerProps.value) }\n          <VListGroupItems items={props.items} open={isOpen.value} v-slots={slots} />\n        </props.tag>\n      )\n    }\n  },\n})\n"]},"metadata":{},"sourceType":"module"}