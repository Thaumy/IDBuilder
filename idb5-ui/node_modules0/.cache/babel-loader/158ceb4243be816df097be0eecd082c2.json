{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst {\n  tokenChars\n} = require('./validation');\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\n\n\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];else dest[name].push(elem);\n}\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\n\n\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (i !== 0 && (code === 0x20\n      /* ' ' */\n      || code === 0x09)\n      /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b\n      /* ';' */\n      || code === 0x2c\n      /* ',' */\n      ) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d\n      /* '=' */\n      && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (start === -1) start = i;else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22\n        /* '\"' */\n        && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c\n        /* '\\' */\n        ) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n\n        push(params, paramName, value);\n\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\n\n\nfunction format(extensions) {\n  return Object.keys(extensions).map(extension => {\n    let configurations = extensions[extension];\n    if (!Array.isArray(configurations)) configurations = [configurations];\n    return configurations.map(params => {\n      return [extension].concat(Object.keys(params).map(k => {\n        let values = params[k];\n        if (!Array.isArray(values)) values = [values];\n        return values.map(v => v === true ? k : `${k}=${v}`).join('; ');\n      })).join('; ');\n    }).join(', ');\n  }).join(', ');\n}\n\nmodule.exports = {\n  format,\n  parse\n};","map":{"version":3,"sources":["/home/thaumy/Desktop/idb5-ui/node_modules/ws/lib/extension.js"],"names":["tokenChars","require","push","dest","name","elem","undefined","parse","header","offers","Object","create","params","mustUnescape","isEscaping","inQuotes","extensionName","paramName","start","code","end","i","length","charCodeAt","SyntaxError","slice","value","replace","token","format","extensions","keys","map","extension","configurations","Array","isArray","concat","k","values","v","join","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n"]},"metadata":{},"sourceType":"script"}