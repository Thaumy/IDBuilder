{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VItemGroup.css\"; // Composables\n\nimport { makeGroupProps, useGroup } from \"../../composables/group.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, useTheme } from \"../../composables/theme.mjs\"; // Utilities\n\nimport { defineComponent } from \"../../util/index.mjs\";\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group');\nexport const VItemGroup = defineComponent({\n  name: 'VItemGroup',\n  props: { ...makeGroupProps({\n      selectedClass: 'v-item--selected'\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps()\n  },\n  emits: {\n    'update:modelValue': value => true\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      themeClasses\n    } = useTheme(props);\n    const {\n      isSelected,\n      select,\n      next,\n      prev,\n      selected\n    } = useGroup(props, VItemGroupSymbol);\n    return () => {\n      var _slots$default;\n\n      return _createVNode(props.tag, {\n        \"class\": ['v-item-group', themeClasses.value]\n      }, {\n        default: () => [(_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, {\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value\n        })]\n      }, 8, [\"class\"]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"mDAAA;;AACA,0B,CAEA;;SACSA,gBAAgBC,gB;SAChBC,oB;SACAC,gBAAgBC,gB,+BAEzB;;SACSC,uB;AAET,OAAO,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,GAAPD,CAAW,sBAAXA,CAAzB;AAEP,OAAO,MAAME,UAAU,GAAGJ,eAAe,CAAC;AACxCK,MAAI,EAAE,YADkC;AAGxCC,OAAK,EAAE,EACL,GAAGX,cAAc,CAAC;AAChBY,mBAAa,EAAE;AADC,KAAD,CADZ;AAIL,OAAGV,YAAY,EAJV;AAKL,OAAGC,cAAc;AALZ,GAHiC;AAWxCU,OAAK,EAAE;AACL,yBAAsBC,KAAD,IAAgB;AADhC,GAXiC;;AAexCC,OAAK,CAAEJ,KAAF,QAAoB;AAAA,QAAX;AAAEK;AAAF,QAAWC;AACvB,UAAM;AAAEC;AAAF,QAAmBd,QAAQ,CAACO,KAAD,CAAjC;AACA,UAAM;AAAEQ,gBAAF;AAAcC,YAAd;AAAsBC,UAAtB;AAA4BC,UAA5B;AAAkCC;AAAlC,QAA+CtB,QAAQ,CAACU,KAAD,EAAQL,gBAAR,CAA7D;AAEA,WAAO;AAAA;;AAAA;AAAA,iBAEI,CACL,cADK,EAELY,YAAY,CAACJ,KAFR;AAFJ;AAAAU,0CAODR,KAAK,CAACQ,OAPL,qBAODC,2BAAgB;AAChBN,oBADgB;AAEhBC,gBAFgB;AAGhBC,cAHgB;AAIhBC,cAJgB;AAKhBC,kBAAQ,EAAEA,QAAQ,CAACT;AALH,SAAhB,CAPC;AAAA;AAAP;AAgBD;;AAnCuC,CAAD,CAAlC","names":["makeGroupProps","useGroup","makeTagProps","makeThemeProps","useTheme","defineComponent","VItemGroupSymbol","Symbol","for","VItemGroup","name","props","selectedClass","emits","value","setup","slots","_ref","themeClasses","isSelected","select","next","prev","selected","default","_slots$default"],"sources":["../../../src/components/VItemGroup/VItemGroup.tsx"],"sourcesContent":["// Styles\nimport './VItemGroup.sass'\n\n// Composables\nimport { makeGroupProps, useGroup } from '@/composables/group'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VItemGroupSymbol = Symbol.for('vuetify:v-item-group')\n\nexport const VItemGroup = defineComponent({\n  name: 'VItemGroup',\n\n  props: {\n    ...makeGroupProps({\n      selectedClass: 'v-item--selected',\n    }),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme(props)\n    const { isSelected, select, next, prev, selected } = useGroup(props, VItemGroupSymbol)\n\n    return () => (\n      <props.tag\n        class={[\n          'v-item-group',\n          themeClasses.value,\n        ]}\n      >\n        { slots.default?.({\n          isSelected,\n          select,\n          next,\n          prev,\n          selected: selected.value,\n        }) }\n      </props.tag>\n    )\n  },\n})\n\nexport type VItemGroup = InstanceType<typeof VItemGroup>\n"]},"metadata":{},"sourceType":"module"}