{"ast":null,"code":"'use strict';\n\nrequire(\"core-js/modules/es.typed-array.at.js\");\n\nrequire(\"core-js/modules/es.typed-array.set.js\");\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nconst {\n  Writable\n} = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\n\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\n\nconst {\n  concat,\n  toArrayBuffer,\n  unmask\n} = require('./buffer-util');\n\nconst {\n  isValidStatusCode,\n  isValidUTF8\n} = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\n\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n    this._bufferedBytes = 0;\n    this._buffers = [];\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n\n\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n    this._bufferedBytes += chunk.length;\n\n    this._buffers.push(chunk);\n\n    this.startLoop(cb);\n  }\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n\n\n  consume(n) {\n    this._bufferedBytes -= n;\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n\n\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n\n        case GET_MASK:\n          this.getMask();\n          break;\n\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n\n\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_2_3');\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002, 'WS_ERR_INVALID_OPCODE');\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002, 'WS_ERR_EXPECTED_FIN');\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002, 'WS_ERR_UNEXPECTED_RSV_1');\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(RangeError, `invalid payload length ${this._payloadLength}`, true, 1002, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002, 'WS_ERR_INVALID_OPCODE');\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(RangeError, 'MASK must be set', true, 1002, 'WS_ERR_EXPECTED_MASK');\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(RangeError, 'MASK must be clear', true, 1002, 'WS_ERR_UNEXPECTED_MASK');\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;else return this.haveLength();\n  }\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n\n\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n\n\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0); //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(RangeError, 'Unsupported WebSocket frame: payload length > 2^53 - 1', false, 1009, 'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH');\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n\n\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH');\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;else this._state = GET_DATA;\n  }\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n\n\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n\n\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (this._masked && (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n\n\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(error(RangeError, 'Max payload size exceeded', false, 1009, 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'));\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n      this.startLoop(cb);\n    });\n  }\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n\n\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n\n\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002, 'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH');\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002, 'WS_ERR_INVALID_CLOSE_CODE');\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007, 'WS_ERR_INVALID_UTF8');\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n\n}\n\nmodule.exports = Receiver;\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\n\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(prefix ? `Invalid WebSocket frame: ${message}` : message);\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}","map":{"version":3,"sources":["/home/thaumy/Desktop/idb5-ui/node_modules/ws/lib/receiver.js"],"names":["Writable","require","PerMessageDeflate","BINARY_TYPES","EMPTY_BUFFER","kStatusCode","kWebSocket","concat","toArrayBuffer","unmask","isValidStatusCode","isValidUTF8","GET_INFO","GET_PAYLOAD_LENGTH_16","GET_PAYLOAD_LENGTH_64","GET_MASK","GET_DATA","INFLATING","Receiver","constructor","options","_binaryType","binaryType","_extensions","extensions","_isServer","isServer","_maxPayload","maxPayload","_skipUTF8Validation","skipUTF8Validation","undefined","_bufferedBytes","_buffers","_compressed","_payloadLength","_mask","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","_write","chunk","encoding","cb","length","push","startLoop","consume","n","shift","buf","slice","dst","Buffer","allocUnsafe","offset","set","Uint8Array","buffer","byteOffset","err","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","error","RangeError","compressed","extensionName","haveLength","readUInt16BE","num","readUInt32BE","Math","pow","data","controlMessage","decompress","dataMessage","perMessageDeflate","er","messageLength","fragments","emit","Error","end","code","module","exports","ErrorCtor","message","prefix","statusCode","errorCode","captureStackTrace"],"mappings":"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","sourcesContent":["'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n"]},"metadata":{},"sourceType":"script"}