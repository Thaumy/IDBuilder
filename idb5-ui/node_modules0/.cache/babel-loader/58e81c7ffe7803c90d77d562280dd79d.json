{"ast":null,"code":"import { withDirectives as _withDirectives, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\"; // Styles\n\nimport \"./VListItem.css\"; // Components\n\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VListItemAvatar } from \"./VListItemAvatar.mjs\";\nimport { VListItemHeader } from \"./VListItemHeader.mjs\";\nimport { VListItemSubtitle } from \"./VListItemSubtitle.mjs\";\nimport { VListItemTitle } from \"./VListItemTitle.mjs\"; // Composables\n\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { makeDensityProps, useDensity } from \"../../composables/density.mjs\";\nimport { makeDimensionProps, useDimension } from \"../../composables/dimensions.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeRouterProps, useLink } from \"../../composables/router.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, useTheme } from \"../../composables/theme.mjs\";\nimport { genOverlays, makeVariantProps, useVariant } from \"../../composables/variant.mjs\"; // Directives\n\nimport { Ripple } from \"../../directives/ripple/index.mjs\"; // Utilities\n\nimport { computed, onMounted } from 'vue';\nimport { genericComponent } from \"../../util/index.mjs\";\nimport { useNestedItem } from \"../../composables/nested/nested.mjs\";\nimport { useList } from \"./VList.mjs\"; // Types\n\nexport const VListItem = genericComponent()({\n  name: 'VListItem',\n  directives: {\n    Ripple\n  },\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({\n      variant: 'text'\n    })\n  },\n\n  setup(props, _ref) {\n    var _props$activeColor;\n\n    let {\n      attrs,\n      slots\n    } = _ref;\n    const link = useLink(props, attrs);\n    const id = computed(() => {\n      var _props$value;\n\n      return (_props$value = props.value) != null ? _props$value : link.href.value;\n    });\n    const {\n      activate,\n      isActive: isNestedActive,\n      select,\n      isSelected,\n      root,\n      parent\n    } = useNestedItem(id);\n    const list = useList();\n    const isActive = computed(() => {\n      var _link$isExactActive;\n\n      return props.active || ((_link$isExactActive = link.isExactActive) == null ? void 0 : _link$isExactActive.value) || isNestedActive.value;\n    });\n    const activeColor = (_props$activeColor = props.activeColor) != null ? _props$activeColor : props.color;\n    const variantProps = computed(() => ({\n      color: isActive.value ? activeColor : props.color,\n      textColor: props.textColor,\n      variant: props.variant\n    }));\n    onMounted(() => {\n      var _link$isExactActive2;\n\n      if ((_link$isExactActive2 = link.isExactActive) != null && _link$isExactActive2.value && parent.value != null) {\n        root.open(parent.value, true);\n      }\n    });\n    const {\n      themeClasses\n    } = useTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props, 'v-list-item');\n    const {\n      colorClasses,\n      colorStyles,\n      variantClasses\n    } = useVariant(variantProps, 'v-list-item');\n    const {\n      densityClasses\n    } = useDensity(props, 'v-list-item');\n    const {\n      dimensionStyles\n    } = useDimension(props);\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      roundedClasses\n    } = useRounded(props, 'v-list-item');\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      activate,\n      select,\n      isSelected: isSelected.value\n    }));\n    return () => {\n      var _slots$default;\n\n      const Tag = link.isLink.value ? 'a' : props.tag;\n      const hasTitle = slots.title || props.title;\n      const hasSubtitle = slots.subtitle || props.subtitle;\n      const hasHeader = !!(hasTitle || hasSubtitle);\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon);\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon);\n      const isClickable = !props.disabled && (link.isClickable.value || props.link || props.value != null);\n      list == null ? void 0 : list.updateHasPrepend(hasPrepend);\n      return _withDirectives(_createVNode(Tag, {\n        \"class\": ['v-list-item', {\n          'v-list-item--active': isActive.value,\n          'v-list-item--disabled': props.disabled,\n          'v-list-item--link': isClickable,\n          'v-list-item--prepend': !hasPrepend && (list == null ? void 0 : list.hasPrepend.value),\n          [`${props.activeClass}`]: isActive.value && props.activeClass\n        }, themeClasses.value, borderClasses.value, colorClasses.value, densityClasses.value, elevationClasses.value, roundedClasses.value, variantClasses.value],\n        \"style\": [colorStyles.value, dimensionStyles.value],\n        \"href\": link.href.value,\n        \"tabindex\": isClickable ? 0 : undefined,\n        \"onClick\": isClickable && (e => {\n          var _link$navigate;\n\n          (_link$navigate = link.navigate) == null ? void 0 : _link$navigate.call(link, e);\n          props.value != null && activate(!isNestedActive.value, e);\n        })\n      }, {\n        default: () => [genOverlays(isClickable || isActive.value, 'v-list-item'), hasPrepend && (slots.prepend ? slots.prepend(slotProps.value) : _createVNode(VListItemAvatar, {\n          \"left\": true\n        }, {\n          default: () => [_createVNode(VAvatar, {\n            \"density\": props.density,\n            \"icon\": props.prependIcon,\n            \"image\": props.prependAvatar\n          }, null, 8, [\"density\", \"icon\", \"image\"])]\n        }, 8, [\"left\"])), hasHeader && _createVNode(VListItemHeader, null, {\n          default: () => [hasTitle && _createVNode(VListItemTitle, null, {\n            default: () => [slots.title ? slots.title() : props.title]\n          }), hasSubtitle && _createVNode(VListItemSubtitle, null, {\n            default: () => [slots.subtitle ? slots.subtitle() : props.subtitle]\n          })],\n          _: 1\n        }), (_slots$default = slots.default) == null ? void 0 : _slots$default.call(slots, slotProps.value), hasAppend && (slots.append ? slots.append(slotProps.value) : _createVNode(VListItemAvatar, {\n          \"right\": true\n        }, {\n          default: () => [_createVNode(VAvatar, {\n            \"density\": props.density,\n            \"icon\": props.appendIcon,\n            \"image\": props.appendAvatar\n          }, null, 8, [\"density\", \"icon\", \"image\"])]\n        }, 8, [\"right\"]))],\n        _: 1\n      }, 8, [\"class\", \"style\", \"href\", \"tabindex\", \"onClick\"]), [[_resolveDirective(\"ripple\"), isClickable]]);\n    };\n  }\n\n});","map":{"version":3,"mappings":"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","names":["VAvatar","VListItemAvatar","VListItemHeader","VListItemSubtitle","VListItemTitle","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeTagProps","makeThemeProps","useTheme","genOverlays","makeVariantProps","useVariant","Ripple","computed","onMounted","genericComponent","useNestedItem","useList","VListItem","name","directives","props","active","Boolean","activeColor","String","activeClass","appendAvatar","appendIcon","disabled","link","prependAvatar","prependIcon","subtitle","title","value","variant","setup","attrs","slots","_ref","id","href","activate","isActive","isNestedActive","select","isSelected","root","parent","list","isExactActive","_link$isExactActive","color","variantProps","textColor","open","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","slotProps","Tag","isLink","tag","hasTitle","hasSubtitle","hasHeader","hasAppend","append","hasPrepend","prepend","isClickable","updateHasPrepend","undefined","e","navigate","default","density","_","_slots$default"],"sources":["../../../src/components/VList/VListItem.tsx"],"sourcesContent":["// Styles\nimport './VListItem.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VListItemAvatar } from './VListItemAvatar'\nimport { VListItemHeader } from './VListItemHeader'\nimport { VListItemSubtitle } from './VListItemSubtitle'\nimport { VListItemTitle } from './VListItemTitle'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { computed, onMounted } from 'vue'\nimport { genericComponent } from '@/util'\nimport { useNestedItem } from '@/composables/nested/nested'\nimport { useList } from './VList'\n\n// Types\nimport type { MakeSlots } from '@/util'\n\ntype ListItemSlot = {\n  isActive: boolean\n  activate: (value: boolean) => void\n  isSelected: boolean\n  select: (value: boolean) => void\n}\n\nexport const VListItem = genericComponent<new () => {\n  $slots: MakeSlots<{\n    prepend: [ListItemSlot]\n    append: [ListItemSlot]\n    default: [ListItemSlot]\n    title: []\n    subtitle: []\n  }>\n}>()({\n  name: 'VListItem',\n\n  directives: { Ripple },\n\n  props: {\n    active: Boolean,\n    activeColor: String,\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    disabled: Boolean,\n    link: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    subtitle: String,\n    title: String,\n    value: null,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'text' } as const),\n  },\n\n  setup (props, { attrs, slots }) {\n    const link = useLink(props, attrs)\n    const id = computed(() => props.value ?? link.href.value)\n    const { activate, isActive: isNestedActive, select, isSelected, root, parent } = useNestedItem(id)\n    const list = useList()\n    const isActive = computed(() => {\n      return props.active || link.isExactActive?.value || isNestedActive.value\n    })\n    const activeColor = props.activeColor ?? props.color\n    const variantProps = computed(() => ({\n      color: isActive.value ? activeColor : props.color,\n      textColor: props.textColor,\n      variant: props.variant,\n    }))\n\n    onMounted(() => {\n      if (link.isExactActive?.value && parent.value != null) {\n        root.open(parent.value, true)\n      }\n    })\n\n    const { themeClasses } = useTheme(props)\n    const { borderClasses } = useBorder(props, 'v-list-item')\n    const { colorClasses, colorStyles, variantClasses } = useVariant(variantProps, 'v-list-item')\n    const { densityClasses } = useDensity(props, 'v-list-item')\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props, 'v-list-item')\n\n    const slotProps = computed(() => ({\n      isActive: isActive.value,\n      activate,\n      select,\n      isSelected: isSelected.value,\n    }))\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasTitle = (slots.title || props.title)\n      const hasSubtitle = (slots.subtitle || props.subtitle)\n      const hasHeader = !!(hasTitle || hasSubtitle)\n      const hasAppend = !!(slots.append || props.appendAvatar || props.appendIcon)\n      const hasPrepend = !!(slots.prepend || props.prependAvatar || props.prependIcon)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link || props.value != null)\n\n      list?.updateHasPrepend(hasPrepend)\n\n      return (\n        <Tag\n          class={[\n            'v-list-item',\n            {\n              'v-list-item--active': isActive.value,\n              'v-list-item--disabled': props.disabled,\n              'v-list-item--link': isClickable,\n              'v-list-item--prepend': !hasPrepend && list?.hasPrepend.value,\n              [`${props.activeClass}`]: isActive.value && props.activeClass,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            variantClasses.value,\n          ]}\n          style={[\n            colorStyles.value,\n            dimensionStyles.value,\n          ]}\n          href={ link.href.value }\n          tabindex={ isClickable ? 0 : undefined }\n          onClick={ isClickable && ((e: MouseEvent) => {\n            link.navigate?.(e)\n            props.value != null && activate(!isNestedActive.value, e)\n          })}\n          v-ripple={ isClickable }\n        >\n          { genOverlays(isClickable || isActive.value, 'v-list-item') }\n\n          { hasPrepend && (\n            slots.prepend\n              ? slots.prepend(slotProps.value)\n              : (\n                <VListItemAvatar left>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n\n          { hasHeader && (\n            <VListItemHeader>\n              { hasTitle && (\n                <VListItemTitle>\n                  { slots.title\n                    ? slots.title()\n                    : props.title\n                  }\n                </VListItemTitle>\n              ) }\n\n              { hasSubtitle && (\n                <VListItemSubtitle>\n                  { slots.subtitle\n                    ? slots.subtitle()\n                    : props.subtitle\n                  }\n                </VListItemSubtitle>\n              ) }\n            </VListItemHeader>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            slots.append\n              ? slots.append(slotProps.value)\n              : (\n                <VListItemAvatar right>\n                  <VAvatar\n                    density={ props.density }\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                  />\n                </VListItemAvatar>\n              )\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VListItem = InstanceType<typeof VListItem>\n"]},"metadata":{},"sourceType":"module"}