{"ast":null,"code":"import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps } from \"vue\"; // Components\n\nimport { VListGroup } from \"./VListGroup.mjs\";\nimport { VListItem } from \"./VListItem.mjs\"; // Utilities\n\nimport { genericComponent } from \"../../util/index.mjs\"; // Types\n\nexport const VListChildren = genericComponent()({\n  name: 'VListChildren',\n  props: {\n    items: Array\n  },\n\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    return () => {\n      var _slots$default, _slots$default2, _props$items;\n\n      return (_slots$default = (_slots$default2 = slots.default) == null ? void 0 : _slots$default2.call(slots)) != null ? _slots$default : (_props$items = props.items) == null ? void 0 : _props$items.map(_ref2 => {\n        let {\n          children,\n          ...item\n        } = _ref2;\n        const {\n          value,\n          ...rest\n        } = item;\n        return children ? _createVNode(VListGroup, {\n          \"value\": value,\n          \"items\": children\n        }, { ...slots,\n          header: headerProps => slots.header ? slots.header({ ...rest,\n            ...headerProps\n          }) : _createVNode(VListItem, _mergeProps(rest, headerProps), null, 16)\n        }, 8, [\"value\", \"items\"]) : slots.item ? slots.item(item) : _createVNode(VListItem, item, slots, 16);\n      });\n    };\n  }\n\n});","map":{"version":3,"mappings":"qHAAA;;SACSA,kB;SACAC,iB,mBAET;;SACSC,wB,wBAET;;AAMA,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,GAQxC;AACHE,MAAI,EAAE,eADH;AAGHC,OAAK,EAAE;AACLC,SAAK,EAAEC;AADF,GAHJ;;AAOHC,OAAK,CAAEH,KAAF,QAAoB;AAAA,QAAX;AAAEI;AAAF,QAAWC;AACvB,WAAO;AAAA;;AAAA,kDAAMD,KAAK,CAACE,OAAZ,qBAAMC,2BAAN,6CAA2BP,KAAK,CAACC,KAAjC,qBAA2BO,aAAaC,GAAb,CAAiBC,SAA2B;AAAA,YAA1B;AAAEC,kBAAF;AAAY,aAAGC;AAAf,YAA0BF;AAC5E,cAAM;AAAEG,eAAF;AAAS,aAAGC;AAAZ,YAAqBF,IAA3B;AACA,eAAOD,QAAQ;AAAA,mBAEJE,KAFI;AAAA,mBAGJF;AAHI,WAIF,EACP,GAAGP,KADI;AAEPW,gBAAM,EAAEC,WAAW,IAAIZ,KAAK,CAACW,MAANX,GACnBA,KAAK,CAACW,MAANX,CAAa,EAAE,GAAGU,IAAL;AAAW,eAAGE;AAAd,WAAbZ,CADmBA,uCAEJU,IAFI,EAEME,WAFN;AAFhB,SAJE,2BAYbZ,KAAK,CAACQ,IAANR,GAAaA,KAAK,CAACQ,IAANR,CAAWQ,IAAXR,CAAbA,2BAA+CQ,IAA/C,EAA8DR,KAA9D,KAZF;AAFgC,QAA3B;AAAP;AAiBD;;AAzBE,CARwC,CAAtC","names":["VListGroup","VListItem","genericComponent","VListChildren","name","props","items","Array","setup","slots","_ref","default","_slots$default2","_props$items","map","_ref2","children","item","value","rest","header","headerProps"],"sources":["../../../src/components/VList/VListChildren.tsx"],"sourcesContent":["// Components\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { ListGroupHeaderSlot } from './VListGroup'\nimport type { ListItem } from './VList'\n\nexport const VListChildren = genericComponent<new <T extends ListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    header: [ListGroupHeaderSlot]\n    item: [T]\n  }>\n}>()({\n  name: 'VListChildren',\n\n  props: {\n    items: Array as Prop<ListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    return () => slots.default?.() ?? props.items?.map(({ children, ...item }) => {\n      const { value, ...rest } = item\n      return children ? (\n        <VListGroup\n          value={value}\n          items={children}\n          v-slots={{\n            ...slots,\n            header: headerProps => slots.header\n              ? slots.header({ ...rest, ...headerProps })\n              : <VListItem {...rest} {...headerProps} />,\n          }}\n        />\n      ) : (\n        slots.item ? slots.item(item) : <VListItem {...item} v-slots={slots} />\n      )\n    })\n  },\n})\n"]},"metadata":{},"sourceType":"module"}