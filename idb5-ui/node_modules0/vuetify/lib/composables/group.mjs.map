{"version":3,"sources":["../../src/composables/group.ts"],"names":["useProxiedModel","computed","inject","onBeforeUnmount","onMounted","provide","reactive","toRef","consoleWarn","deepEqual","findChildren","getCurrentInstance","getUid","propsFactory","wrapInArray","makeGroupProps","modelValue","type","default","undefined","multiple","Boolean","mandatory","String","max","Number","selectedClass","disabled","makeGroupItemProps","value","Object","useGroupItem","props","injectKey","vm","Error","group","description","id","register","unregister","isSelected","toggle","select","useGroup","isUnmounted","items","selected","v","getIds","arr","getValues","groupVm","item","unwrapped","children","vnode","instances","slice","filter","cmp","provides","index","indexOf","splice","push","forceMandatoryValue","findIndex","find","length","internalValue","includes","step","offset","currentId","currentIndex","i","newIndex","newItem","state","prev","next","map","ids","values"],"mappings":"AAAA;SACSA,e,8BAET;;AACA,SAASC,QAAT,EAAmBC,MAAnB,EAA2BC,eAA3B,EAA4CC,SAA5C,EAAuDC,OAAvD,EAAgEC,QAAhE,EAA0EC,KAA1E,QAAuF,KAAvF;SACSC,W,EAAaC,S,EAAWC,Y,EAAcC,kB,EAAoBC,M,EAAQC,Y,EAAcC,W,6BAEzF;;AA2CA,OAAO,MAAMC,cAAc,GAAGF,YAAY,CAAC;AACzCG,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAE,IADI;AAEVC,IAAAA,OAAO,EAAEC;AAFC,GAD6B;AAKzCC,EAAAA,QAAQ,EAAEC,OAL+B;AAMzCC,EAAAA,SAAS,EAAE,CAACD,OAAD,EAAUE,MAAV,CAN8B;AAOzCC,EAAAA,GAAG,EAAEC,MAPoC;AAQzCC,EAAAA,aAAa,EAAEH,MAR0B;AASzCI,EAAAA,QAAQ,EAAEN;AAT+B,CAAD,EAUvC,OAVuC,CAAnC;AAYP,OAAO,MAAMO,kBAAkB,GAAGf,YAAY,CAAC;AAC7CgB,EAAAA,KAAK,EAAE;AACLZ,IAAAA,IAAI,EAAE,CAACQ,MAAD,EAASJ,OAAT,EAAkBE,MAAlB,EAA0BO,MAA1B,CADD;AAELZ,IAAAA,OAAO,EAAEC;AAFJ,GADsC;AAK7CQ,EAAAA,QAAQ,EAAEN,OALmC;AAM7CK,EAAAA,aAAa,EAAEH;AAN8B,CAAD,EAO3C,YAP2C,CAAvC,C,CASP;;AACA,OAAO,SAASQ,YAAT,CACLC,KADK,EAELC,SAFK,EAGa;AAClB,QAAMC,EAAE,GAAGvB,kBAAkB,CAAC,cAAD,CAA7B;;AAEA,MAAI,CAACuB,EAAL,EAAS;AACP,UAAM,IAAIC,KAAJ,CACJ,kFADI,CAAN;AAGD;;AAED,QAAMC,KAAK,GAAGlC,MAAM,CAAC+B,SAAD,EAAY,IAAZ,CAApB;;AAEA,MAAI,CAACG,KAAL,EAAY;AACV,UAAM,IAAID,KAAJ,CAAW,2DAA0DF,SAAS,CAACI,WAAY,EAA3F,CAAN;AACD;;AAED,QAAMC,EAAE,GAAG1B,MAAM,EAAjB;AACA,QAAMiB,KAAK,GAAGtB,KAAK,CAACyB,KAAD,EAAQ,OAAR,CAAnB;AACA,QAAML,QAAQ,GAAG1B,QAAQ,CAAC,MAAMmC,KAAK,CAACT,QAAN,CAAeE,KAAf,IAAwBG,KAAK,CAACL,QAArC,CAAzB;AAEAS,EAAAA,KAAK,CAACG,QAAN,CAAe;AACbD,IAAAA,EADa;AAEbT,IAAAA,KAFa;AAGbF,IAAAA;AAHa,GAAf,EAIGO,EAJH;AAMA/B,EAAAA,eAAe,CAAC,MAAM;AACpBiC,IAAAA,KAAK,CAACI,UAAN,CAAiBF,EAAjB;AACD,GAFc,CAAf;AAIA,QAAMG,UAAU,GAAGxC,QAAQ,CAAC,MAAM;AAChC,WAAOmC,KAAK,CAACK,UAAN,CAAiBH,EAAjB,CAAP;AACD,GAF0B,CAA3B;AAIA,QAAMZ,aAAa,GAAGzB,QAAQ,CAAC;AAAA;;AAAA,WAAMwC,UAAU,CAACZ,KAAX,8BAAqBO,KAAK,CAACV,aAAN,CAAoBG,KAAzC,oCAAkDG,KAAK,CAACN,aAAxD,CAAN;AAAA,GAAD,CAA9B;AAEA,SAAO;AACLY,IAAAA,EADK;AAELG,IAAAA,UAFK;AAGLC,IAAAA,MAAM,EAAE,MAAMN,KAAK,CAACO,MAAN,CAAaL,EAAb,EAAiB,CAACG,UAAU,CAACZ,KAA7B,CAHT;AAILc,IAAAA,MAAM,EAAGd,KAAD,IAAoBO,KAAK,CAACO,MAAN,CAAaL,EAAb,EAAiBT,KAAjB,CAJvB;AAKLH,IAAAA,aALK;AAMLG,IAAAA,KANK;AAOLF,IAAAA,QAPK;AAQLS,IAAAA;AARK,GAAP;AAUD;AAED,OAAO,SAASQ,QAAT,CACLZ,KADK,EAELC,SAFK,EAGL;AACA,MAAIY,WAAW,GAAG,KAAlB;AACA,QAAMC,KAAK,GAAGxC,QAAQ,CAAc,EAAd,CAAtB;AACA,QAAMyC,QAAQ,GAAG/C,eAAe,CAC9BgC,KAD8B,EAE9B,YAF8B,EAG9B,EAH8B,EAI9BgB,CAAC,IAAI;AACH,QAAIA,CAAC,IAAI,IAAT,EAAe,OAAO,EAAP;AAEf,WAAOC,MAAM,CAACH,KAAD,EAAQhC,WAAW,CAACkC,CAAD,CAAnB,CAAb;AACD,GAR6B,EAS9BA,CAAC,IAAI;AACH,UAAME,GAAG,GAAGC,SAAS,CAACL,KAAD,EAAQE,CAAR,CAArB;AAEA,WAAOhB,KAAK,CAACZ,QAAN,GAAiB8B,GAAjB,GAAuBA,GAAG,CAAC,CAAD,CAAjC;AACD,GAb6B,CAAhC;AAgBA,QAAME,OAAO,GAAGzC,kBAAkB,CAAC,UAAD,CAAlC;;AAEA,WAAS4B,QAAT,CAAmBc,IAAnB,EAAoCnB,EAApC,EAAmE;AACjE;AACA,UAAMoB,SAAS,GAAGD,IAAlB;AAEA,UAAME,QAAQ,GAAG7C,YAAY,CAAC0C,OAAD,oBAACA,OAAO,CAAEI,KAAV,CAA7B;AACA,UAAMC,SAAS,GAAGF,QAAQ,CACvBG,KADe,CACT,CADS,EACN;AADM,KAEfC,MAFe,CAERC,GAAG,IAAI,CAAC,CAACA,GAAG,CAACC,QAAJ,CAAa5B,SAAb,CAFD,CAAlB,CALiE,CAOd;;AACnD,UAAM6B,KAAK,GAAGL,SAAS,CAACM,OAAV,CAAkB7B,EAAlB,CAAd;AAEA,QAAI4B,KAAK,GAAG,CAAC,CAAb,EAAgBhB,KAAK,CAACkB,MAAN,CAAaF,KAAb,EAAoB,CAApB,EAAuBR,SAAvB,EAAhB,KACKR,KAAK,CAACmB,IAAN,CAAWX,SAAX;AACN;;AAED,WAASd,UAAT,CAAqBF,EAArB,EAAiC;AAC/B,QAAIO,WAAJ,EAAiB;AAEjBE,IAAAA,QAAQ,CAAClB,KAAT,GAAiBkB,QAAQ,CAAClB,KAAT,CAAe8B,MAAf,CAAsBX,CAAC,IAAIA,CAAC,KAAKV,EAAjC,CAAjB;AAEA4B,IAAAA,mBAAmB;AAEnB,UAAMJ,KAAK,GAAGhB,KAAK,CAACqB,SAAN,CAAgBd,IAAI,IAAIA,IAAI,CAACf,EAAL,KAAYA,EAApC,CAAd;AACAQ,IAAAA,KAAK,CAACkB,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACD,GA5CD,CA8CA;;;AACA,WAASI,mBAAT,GAAgC;AAC9B,UAAMb,IAAI,GAAGP,KAAK,CAACsB,IAAN,CAAWf,IAAI,IAAI,CAACA,IAAI,CAAC1B,QAAzB,CAAb;;AACA,QAAI0B,IAAI,IAAIrB,KAAK,CAACV,SAAN,KAAoB,OAA5B,IAAuC,CAACyB,QAAQ,CAAClB,KAAT,CAAewC,MAA3D,EAAmE;AACjEtB,MAAAA,QAAQ,CAAClB,KAAT,GAAiB,CAACwB,IAAI,CAACf,EAAN,CAAjB;AACD;AACF;;AAEDlC,EAAAA,SAAS,CAAC,MAAM;AACd8D,IAAAA,mBAAmB;AACpB,GAFQ,CAAT;AAIA/D,EAAAA,eAAe,CAAC,MAAM;AACpB0C,IAAAA,WAAW,GAAG,IAAd;AACD,GAFc,CAAf;;AAIA,WAASF,MAAT,CAAiBL,EAAjB,EAA6BG,UAA7B,EAAkD;AAChD,UAAMY,IAAI,GAAGP,KAAK,CAACsB,IAAN,CAAWf,IAAI,IAAIA,IAAI,CAACf,EAAL,KAAYA,EAA/B,CAAb;AACA,QAAIG,UAAU,IAAIY,IAAJ,YAAIA,IAAI,CAAE1B,QAAxB,EAAkC;;AAElC,QAAIK,KAAK,CAACZ,QAAV,EAAoB;AAClB,YAAMkD,aAAa,GAAGvB,QAAQ,CAAClB,KAAT,CAAe6B,KAAf,EAAtB;AACA,YAAMI,KAAK,GAAGQ,aAAa,CAACH,SAAd,CAAwBnB,CAAC,IAAIA,CAAC,KAAKV,EAAnC,CAAd,CAFkB,CAIlB;AACA;AACA;;AACA,UACEN,KAAK,CAACV,SAAN,IACAwC,KAAK,GAAG,CAAC,CADT,IAEAQ,aAAa,CAACD,MAAd,IAAwB,CAH1B,EAIE,OAXgB,CAalB;AACA;;AACA,UACErC,KAAK,CAACR,GAAN,IAAa,IAAb,IACAsC,KAAK,GAAG,CADR,IAEAQ,aAAa,CAACD,MAAd,GAAuB,CAAvB,GAA2BrC,KAAK,CAACR,GAHnC,EAIE;AAEF,UAAIsC,KAAK,GAAG,CAAR,IAAarB,UAAjB,EAA6B6B,aAAa,CAACL,IAAd,CAAmB3B,EAAnB,EAA7B,KACK,IAAIwB,KAAK,IAAI,CAAT,IAAc,CAACrB,UAAnB,EAA+B6B,aAAa,CAACN,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AAEpCf,MAAAA,QAAQ,CAAClB,KAAT,GAAiByC,aAAjB;AACD,KAzBD,MAyBO;AACL,UAAItC,KAAK,CAACV,SAAN,IAAmByB,QAAQ,CAAClB,KAAT,CAAe0C,QAAf,CAAwBjC,EAAxB,CAAvB,EAAoD;AAEpDS,MAAAA,QAAQ,CAAClB,KAAT,GAAiBY,UAAU,GAAG,CAACH,EAAD,CAAH,GAAU,EAArC;AACD;AACF;;AAED,WAASkC,IAAT,CAAeC,MAAf,EAA+B;AAC7B;AACA,QAAIzC,KAAK,CAACZ,QAAV,EAAoBZ,WAAW,CAAC,yDAAD,CAAX;;AAEpB,QAAI,CAACuC,QAAQ,CAAClB,KAAT,CAAewC,MAApB,EAA4B;AAC1B,YAAMhB,IAAI,GAAGP,KAAK,CAACsB,IAAN,CAAWf,IAAI,IAAI,CAACA,IAAI,CAAC1B,QAAzB,CAAb;AACA0B,MAAAA,IAAI,KAAKN,QAAQ,CAAClB,KAAT,GAAiB,CAACwB,IAAI,CAACf,EAAN,CAAtB,CAAJ;AACD,KAHD,MAGO;AACL,YAAMoC,SAAS,GAAG3B,QAAQ,CAAClB,KAAT,CAAe,CAAf,CAAlB;AACA,YAAM8C,YAAY,GAAG7B,KAAK,CAACqB,SAAN,CAAgBS,CAAC,IAAIA,CAAC,CAACtC,EAAF,KAASoC,SAA9B,CAArB;AAEA,UAAIG,QAAQ,GAAG,CAACF,YAAY,GAAGF,MAAhB,IAA0B3B,KAAK,CAACuB,MAA/C;AACA,UAAIS,OAAO,GAAGhC,KAAK,CAAC+B,QAAD,CAAnB;;AAEA,aAAOC,OAAO,CAACnD,QAAR,IAAoBkD,QAAQ,KAAKF,YAAxC,EAAsD;AACpDE,QAAAA,QAAQ,GAAG,CAACA,QAAQ,GAAGJ,MAAZ,IAAsB3B,KAAK,CAACuB,MAAvC;AACAS,QAAAA,OAAO,GAAGhC,KAAK,CAAC+B,QAAD,CAAf;AACD;;AAED,UAAIC,OAAO,CAACnD,QAAZ,EAAsB;AAEtBoB,MAAAA,QAAQ,CAAClB,KAAT,GAAiB,CAACiB,KAAK,CAAC+B,QAAD,CAAL,CAAgBvC,EAAjB,CAAjB;AACD;AACF;;AAED,QAAMyC,KAAK,GAAG;AACZxC,IAAAA,QADY;AAEZC,IAAAA,UAFY;AAGZO,IAAAA,QAHY;AAIZJ,IAAAA,MAJY;AAKZhB,IAAAA,QAAQ,EAAEpB,KAAK,CAACyB,KAAD,EAAQ,UAAR,CALH;AAMZgD,IAAAA,IAAI,EAAE,MAAMR,IAAI,CAAC1B,KAAK,CAACuB,MAAN,GAAe,CAAhB,CANJ;AAOZY,IAAAA,IAAI,EAAE,MAAMT,IAAI,CAAC,CAAD,CAPJ;AAQZ/B,IAAAA,UAAU,EAAGH,EAAD,IAAgBS,QAAQ,CAAClB,KAAT,CAAe0C,QAAf,CAAwBjC,EAAxB,CARhB;AASZZ,IAAAA,aAAa,EAAEzB,QAAQ,CAAC,MAAM+B,KAAK,CAACN,aAAb,CATX;AAUZoB,IAAAA,KAAK,EAAE7C,QAAQ,CAAC,MAAM6C,KAAK,CAACoC,GAAN,CAAU;AAAA,UAAC;AAAE5C,QAAAA;AAAF,OAAD;AAAA,aAAYA,EAAZ;AAAA,KAAV,CAAP;AAVH,GAAd;AAaAjC,EAAAA,OAAO,CAAC4B,SAAD,EAAY8C,KAAZ,CAAP;AAEA,SAAOA,KAAP;AACD;;AAED,SAAS9B,MAAT,CAAiBH,KAAjB,EAAgD9B,UAAhD,EAAmE;AACjE,QAAMmE,GAAG,GAAG,EAAZ;;AACA,OAAK,MAAM9B,IAAX,IAAmBP,KAAnB,EAA0B;AACxB,QAAIO,IAAI,CAACxB,KAAL,IAAc,IAAlB,EAAwB;AACtB,UAAIb,UAAU,CAACoD,IAAX,CAAgBvC,KAAK,IAAIpB,SAAS,CAACoB,KAAD,EAAQwB,IAAI,CAACxB,KAAb,CAAlC,CAAJ,EAA4D;AAC1DsD,QAAAA,GAAG,CAAClB,IAAJ,CAASZ,IAAI,CAACf,EAAd;AACD;AACF,KAJD,MAIO,IAAItB,UAAU,CAACuD,QAAX,CAAoBlB,IAAI,CAACf,EAAzB,CAAJ,EAAkC;AACvC6C,MAAAA,GAAG,CAAClB,IAAJ,CAASZ,IAAI,CAACf,EAAd;AACD;AACF;;AAED,SAAO6C,GAAP;AACD;;AAED,SAAShC,SAAT,CAAoBL,KAApB,EAAmDqC,GAAnD,EAA+D;AAC7D,QAAMC,MAAM,GAAG,EAAf;;AAEA,OAAK,MAAM/B,IAAX,IAAmBP,KAAnB,EAA0B;AACxB,QAAIqC,GAAG,CAACZ,QAAJ,CAAalB,IAAI,CAACf,EAAlB,CAAJ,EAA2B;AACzB8C,MAAAA,MAAM,CAACnB,IAAP,CAAYZ,IAAI,CAACxB,KAAL,IAAc,IAAd,GAAqBwB,IAAI,CAACxB,KAA1B,GAAkCwB,IAAI,CAACf,EAAnD;AACD;AACF;;AAED,SAAO8C,MAAP;AACD","sourcesContent":["// Composables\nimport { useProxiedModel } from './proxiedModel'\n\n// Utilities\nimport { computed, inject, onBeforeUnmount, onMounted, provide, reactive, toRef } from 'vue'\nimport { consoleWarn, deepEqual, findChildren, getCurrentInstance, getUid, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, InjectionKey, PropType, Ref, UnwrapRef } from 'vue'\n\ninterface GroupItem {\n  id: number\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n}\n\ninterface GroupProps {\n  disabled: boolean\n  modelValue: unknown\n  multiple: boolean\n  mandatory: boolean | 'force' | undefined\n  max: number | undefined\n  selectedClass: string | undefined\n  'onUpdate:modelValue': ((val: unknown) => void) | undefined\n}\n\ninterface GroupProvide {\n  register: (item: GroupItem, cmp: ComponentInternalInstance) => void\n  unregister: (id: number) => void\n  select: (id: number, value: boolean) => void\n  selected: Ref<any[]>\n  isSelected: (id: number) => boolean\n  prev: () => void\n  next: () => void\n  selectedClass: Ref<string | undefined>\n  items: Ref<number[]>\n  disabled: Ref<boolean | undefined>\n}\n\nexport interface GroupItemProvide {\n  id: number\n  isSelected: Ref<boolean>\n  toggle: () => void\n  select: (value: boolean) => void\n  selectedClass: Ref<string | false | undefined>\n  value: Ref<unknown>\n  disabled: Ref<boolean | undefined>\n  group: GroupProvide\n}\n\nexport const makeGroupProps = propsFactory({\n  modelValue: {\n    type: null,\n    default: undefined,\n  },\n  multiple: Boolean,\n  mandatory: [Boolean, String] as PropType<boolean | 'force'>,\n  max: Number,\n  selectedClass: String,\n  disabled: Boolean,\n}, 'group')\n\nexport const makeGroupItemProps = propsFactory({\n  value: {\n    type: [Number, Boolean, String, Object],\n    default: undefined,\n  },\n  disabled: Boolean,\n  selectedClass: String,\n}, 'group-item')\n\n// Composables\nexport function useGroupItem (\n  props: { value?: unknown, disabled?: boolean, selectedClass?: string },\n  injectKey: InjectionKey<GroupProvide>,\n): GroupItemProvide {\n  const vm = getCurrentInstance('useGroupItem')\n\n  if (!vm) {\n    throw new Error(\n      '[Vuetify] useGroupItem composable must be used inside a component setup function'\n    )\n  }\n\n  const group = inject(injectKey, null)\n\n  if (!group) {\n    throw new Error(`[Vuetify] Could not find useGroup injection with symbol ${injectKey.description}`)\n  }\n\n  const id = getUid()\n  const value = toRef(props, 'value')\n  const disabled = computed(() => group.disabled.value || props.disabled)\n\n  group.register({\n    id,\n    value,\n    disabled,\n  }, vm)\n\n  onBeforeUnmount(() => {\n    group.unregister(id)\n  })\n\n  const isSelected = computed(() => {\n    return group.isSelected(id)\n  })\n\n  const selectedClass = computed(() => isSelected.value && (group.selectedClass.value ?? props.selectedClass))\n\n  return {\n    id,\n    isSelected,\n    toggle: () => group.select(id, !isSelected.value),\n    select: (value: boolean) => group.select(id, value),\n    selectedClass,\n    value,\n    disabled,\n    group,\n  }\n}\n\nexport function useGroup (\n  props: GroupProps,\n  injectKey: InjectionKey<GroupProvide>\n) {\n  let isUnmounted = false\n  const items = reactive<GroupItem[]>([])\n  const selected = useProxiedModel(\n    props,\n    'modelValue',\n    [],\n    v => {\n      if (v == null) return []\n\n      return getIds(items, wrapInArray(v))\n    },\n    v => {\n      const arr = getValues(items, v)\n\n      return props.multiple ? arr : arr[0]\n    }\n  )\n\n  const groupVm = getCurrentInstance('useGroup')\n\n  function register (item: GroupItem, vm: ComponentInternalInstance) {\n    // Is there a better way to fix this typing?\n    const unwrapped = item as unknown as UnwrapRef<GroupItem>\n\n    const children = findChildren(groupVm?.vnode)\n    const instances = children\n      .slice(1) // First one is group component itself\n      .filter(cmp => !!cmp.provides[injectKey as any]) // TODO: Fix in TS 4.4\n    const index = instances.indexOf(vm)\n\n    if (index > -1) items.splice(index, 0, unwrapped)\n    else items.push(unwrapped)\n  }\n\n  function unregister (id: number) {\n    if (isUnmounted) return\n\n    selected.value = selected.value.filter(v => v !== id)\n\n    forceMandatoryValue()\n\n    const index = items.findIndex(item => item.id === id)\n    items.splice(index, 1)\n  }\n\n  // If mandatory and nothing is selected, then select first non-disabled item\n  function forceMandatoryValue () {\n    const item = items.find(item => !item.disabled)\n    if (item && props.mandatory === 'force' && !selected.value.length) {\n      selected.value = [item.id]\n    }\n  }\n\n  onMounted(() => {\n    forceMandatoryValue()\n  })\n\n  onBeforeUnmount(() => {\n    isUnmounted = true\n  })\n\n  function select (id: number, isSelected: boolean) {\n    const item = items.find(item => item.id === id)\n    if (isSelected && item?.disabled) return\n\n    if (props.multiple) {\n      const internalValue = selected.value.slice()\n      const index = internalValue.findIndex(v => v === id)\n\n      // We can't remove value if group is\n      // mandatory, value already exists,\n      // and it is the only value\n      if (\n        props.mandatory &&\n        index > -1 &&\n        internalValue.length <= 1\n      ) return\n\n      // We can't add value if it would\n      // cause max limit to be exceeded\n      if (\n        props.max != null &&\n        index < 0 &&\n        internalValue.length + 1 > props.max\n      ) return\n\n      if (index < 0 && isSelected) internalValue.push(id)\n      else if (index >= 0 && !isSelected) internalValue.splice(index, 1)\n\n      selected.value = internalValue\n    } else {\n      if (props.mandatory && selected.value.includes(id)) return\n\n      selected.value = isSelected ? [id] : []\n    }\n  }\n\n  function step (offset: number) {\n    // getting an offset from selected value obviously won't work with multiple values\n    if (props.multiple) consoleWarn('This method is not supported when using \"multiple\" prop')\n\n    if (!selected.value.length) {\n      const item = items.find(item => !item.disabled)\n      item && (selected.value = [item.id])\n    } else {\n      const currentId = selected.value[0]\n      const currentIndex = items.findIndex(i => i.id === currentId)\n\n      let newIndex = (currentIndex + offset) % items.length\n      let newItem = items[newIndex]\n\n      while (newItem.disabled && newIndex !== currentIndex) {\n        newIndex = (newIndex + offset) % items.length\n        newItem = items[newIndex]\n      }\n\n      if (newItem.disabled) return\n\n      selected.value = [items[newIndex].id]\n    }\n  }\n\n  const state = {\n    register,\n    unregister,\n    selected,\n    select,\n    disabled: toRef(props, 'disabled'),\n    prev: () => step(items.length - 1),\n    next: () => step(1),\n    isSelected: (id: number) => selected.value.includes(id),\n    selectedClass: computed(() => props.selectedClass),\n    items: computed(() => items.map(({ id }) => id)),\n  }\n\n  provide(injectKey, state)\n\n  return state\n}\n\nfunction getIds (items: UnwrapRef<GroupItem[]>, modelValue: any[]) {\n  const ids = []\n  for (const item of items) {\n    if (item.value != null) {\n      if (modelValue.find(value => deepEqual(value, item.value))) {\n        ids.push(item.id)\n      }\n    } else if (modelValue.includes(item.id)) {\n      ids.push(item.id)\n    }\n  }\n\n  return ids\n}\n\nfunction getValues (items: UnwrapRef<GroupItem[]>, ids: any[]) {\n  const values = []\n\n  for (const item of items) {\n    if (ids.includes(item.id)) {\n      values.push(item.value != null ? item.value : item.id)\n    }\n  }\n\n  return values\n}\n"],"file":"group.mjs"}