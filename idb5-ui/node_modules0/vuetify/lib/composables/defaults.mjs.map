{"version":3,"sources":["../../src/composables/defaults.ts"],"names":["computed","inject","provide","ref","mergeDeep","DefaultsSymbol","Symbol","for","createDefaults","options","useDefaults","defaults","Error","provideDefaults","props","newDefaults","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoCC,GAApC,QAA+C,KAA/C;SACSC,S;AAWT,OAAO,MAAMC,cAAmD,GAAGC,MAAM,CAACC,GAAP,CAAW,kBAAX,CAA5D;AAEP,OAAO,SAASC,cAAT,CAAyBC,OAAzB,EAA4E;AACjF,SAAON,GAAG,CAACM,OAAD,WAACA,OAAD,GAAY,EAAZ,CAAV;AACD;AAED,OAAO,SAASC,WAAT,GAAwB;AAC7B,QAAMC,QAAQ,GAAGV,MAAM,CAACI,cAAD,CAAvB;AAEA,MAAI,CAACM,QAAL,EAAe,MAAM,IAAIC,KAAJ,CAAU,4CAAV,CAAN;AAEf,SAAOD,QAAP;AACD;AAED,OAAO,SAASE,eAAT,CAA0BC,KAA1B,EAAmE;AACxE,QAAMH,QAAQ,GAAGD,WAAW,EAA5B;AAEA,QAAMK,WAAW,GAAGf,QAAQ,CAAC,MAAMI,SAAS,CAACO,QAAQ,CAACK,KAAV,EAAiBF,KAAjB,oBAAiBA,KAAK,CAAEH,QAAxB,CAAhB,CAA5B;AAEAT,EAAAA,OAAO,CAACG,cAAD,EAAiBU,WAAjB,CAAP;AAEA,SAAOA,WAAP;AACD","sourcesContent":["import { computed, inject, provide, ref } from 'vue'\nimport { mergeDeep } from '@/util/helpers'\n\nimport type { InjectionKey, Ref } from 'vue'\n\nexport interface DefaultsInstance {\n  [key: string]: undefined | Record<string, unknown>\n  global?: Record<string, unknown>\n}\n\nexport type DefaultsOptions = Partial<DefaultsInstance>\n\nexport const DefaultsSymbol: InjectionKey<Ref<DefaultsInstance>> = Symbol.for('vuetify:defaults')\n\nexport function createDefaults (options?: DefaultsInstance): Ref<DefaultsInstance> {\n  return ref(options ?? {})\n}\n\nexport function useDefaults () {\n  const defaults = inject(DefaultsSymbol)\n\n  if (!defaults) throw new Error('[Vuetify] Could not find defaults instance')\n\n  return defaults\n}\n\nexport function provideDefaults (props?: { defaults?: DefaultsInstance }) {\n  const defaults = useDefaults()\n\n  const newDefaults = computed(() => mergeDeep(defaults.value, props?.defaults) as any as DefaultsInstance)\n\n  provide(DefaultsSymbol, newDefaults)\n\n  return newDefaults\n}\n"],"file":"defaults.mjs"}