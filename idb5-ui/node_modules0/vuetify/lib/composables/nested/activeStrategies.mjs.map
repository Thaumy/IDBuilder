{"version":3,"sources":["../../../src/composables/nested/activeStrategies.ts"],"names":["classicActiveStrategy","single","id","value","active","newActive","Set","add","delete"],"mappings":"AASA,OAAO,MAAMA,qBAAqB,GAAIC,MAAD,IAAwC;AAC3E,SAAO,QAA2B;AAAA,QAA1B;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,KAAN;AAAaC,MAAAA;AAAb,KAA0B;AAChC,UAAMC,SAAsB,GAAGJ,MAAM,GAAG,IAAIK,GAAJ,EAAH,GAAeF,MAApD;;AAEA,QAAID,KAAJ,EAAW;AACTE,MAAAA,SAAS,CAACE,GAAV,CAAcL,EAAd;AACD,KAFD,MAEO;AACLG,MAAAA,SAAS,CAACG,MAAV,CAAiBN,EAAjB;AACD;;AAED,WAAOG,SAAP;AACD,GAVD;AAWD,CAZM","sourcesContent":["export type ActiveStrategyFn = (data: {\n  id: string\n  value: boolean\n  active: Set<string>\n  children: Map<string, string[]>\n  parents: Map<string, string>\n  event?: Event\n}) => Set<string>\n\nexport const classicActiveStrategy = (single?: boolean): ActiveStrategyFn => {\n  return ({ id, value, active }) => {\n    const newActive: Set<string> = single ? new Set() : active\n\n    if (value) {\n      newActive.add(id)\n    } else {\n      newActive.delete(id)\n    }\n\n    return newActive\n  }\n}\n"],"file":"activeStrategies.mjs"}