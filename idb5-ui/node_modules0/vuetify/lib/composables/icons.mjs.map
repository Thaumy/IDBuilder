{"version":3,"sources":["../../src/composables/icons.tsx"],"names":["computed","inject","isRef","defineComponent","propsFactory","IconSymbol","Symbol","for","makeIconProps","icon","type","String","Object","required","tag","VComponentIcon","name","props","setup","VSvgIcon","inheritAttrs","attrs","VLigatureIcon","VClassIcon","defaultSets","svg","component","class","useIcon","icons","Error","iconData","iconAlias","value","includes","aliases","slice","indexOf","iconSetName","keys","sets","find","setName","startsWith","iconName","length","iconSet","defaultSet"],"mappings":"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","sourcesContent":["// Utilities\nimport { computed, inject, isRef } from 'vue'\nimport { defineComponent, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, JSXComponent, PropType, Ref } from 'vue'\n\nexport type IconValue = string | JSXComponent\n\nexport interface IconAliases {\n  [name: string]: IconValue\n  complete: IconValue\n  cancel: IconValue\n  close: IconValue\n  delete: IconValue\n  clear: IconValue\n  success: IconValue\n  info: IconValue\n  warning: IconValue\n  error: IconValue\n  prev: IconValue\n  next: IconValue\n  checkboxOn: IconValue\n  checkboxOff: IconValue\n  checkboxIndeterminate: IconValue\n  delimiter: IconValue\n  sort: IconValue\n  expand: IconValue\n  menu: IconValue\n  subgroup: IconValue\n  dropdown: IconValue\n  radioOn: IconValue\n  radioOff: IconValue\n  edit: IconValue\n  ratingEmpty: IconValue\n  ratingFull: IconValue\n  ratingHalf: IconValue\n  loading: IconValue\n  first: IconValue\n  last: IconValue\n  unfold: IconValue\n  file: IconValue\n  plus: IconValue\n  minus: IconValue\n}\n\nexport interface IconProps {\n  tag: string\n  icon: IconValue\n  disabled?: Boolean\n}\n\ntype IconComponent = JSXComponent<IconProps>\n\nexport interface IconSet {\n  component: IconComponent\n}\n\nexport type IconOptions = {\n  defaultSet: string\n  aliases?: Partial<IconAliases>\n  sets: Record<string, IconSet>\n}\n\ntype IconInstance = {\n  component: IconComponent\n  icon: IconValue\n}\n\nexport const IconSymbol: InjectionKey<IconOptions> = Symbol.for('vuetify:icons')\n\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: [String, Object] as PropType<IconValue>,\n    required: true,\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: String,\n    required: true,\n  },\n}, 'icon')\n\nexport const VComponentIcon = defineComponent({\n  name: 'VComponentIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return (\n        <props.tag>\n          <props.icon />\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n\n  inheritAttrs: false,\n\n  props: makeIconProps(),\n\n  setup (props, { attrs }) {\n    return () => {\n      return (\n        <props.tag { ...attrs } style={ null }>\n          <svg\n            class=\"v-icon__svg\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            role=\"img\"\n            aria-hidden=\"true\"\n          >\n            <path d={ props.icon as string }></path>\n          </svg>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag>{ props.icon }</props.tag>\n    }\n  },\n})\n\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag class={ props.icon }></props.tag>\n    }\n  },\n})\n\nexport const defaultSets: Record<string, IconSet> = {\n  svg: {\n    component: VSvgIcon,\n  },\n  class: {\n    component: VClassIcon,\n  },\n}\n\n// Composables\nexport const useIcon = (props: Ref<string | undefined> | { icon?: IconValue }) => {\n  const icons = inject(IconSymbol)\n\n  if (!icons) throw new Error('Missing Vuetify Icons provide!')\n\n  const iconData: Ref<IconInstance> = computed(() => {\n    const iconAlias = isRef(props) ? props.value : props.icon\n\n    if (!iconAlias) throw new Error('Icon value is undefined or null')\n\n    let icon: IconValue | undefined = iconAlias\n\n    if (typeof iconAlias === 'string' && iconAlias.includes('$')) {\n      icon = icons.aliases?.[iconAlias.slice(iconAlias.indexOf('$') + 1)]\n    }\n\n    if (!icon) throw new Error(`Could not find aliased icon \"${iconAlias}\"`)\n\n    if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon,\n      }\n    }\n\n    const iconSetName = Object.keys(icons.sets).find(\n      setName => typeof icon === 'string' && icon.startsWith(`${setName}:`)\n    )\n\n    const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon\n    const iconSet = icons.sets[iconSetName ?? icons.defaultSet]\n\n    return {\n      component: iconSet.component,\n      icon: iconName,\n    }\n  })\n\n  return { iconData }\n}\n"],"file":"icons.mjs"}