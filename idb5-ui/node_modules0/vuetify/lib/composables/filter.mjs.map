{"version":3,"sources":["../../src/composables/filter.ts"],"names":["getPropertyFromItem","propsFactory","wrapInArray","wrapInRef","computed","defaultFilter","value","query","item","toString","toLocaleLowerCase","indexOf","makeFilterProps","customFilter","Function","customKeyFilter","Object","filterKeys","Array","String","filterMode","type","default","filterItems","items","options","array","filter","keys","customFiltersLength","length","loop","customMatches","defaultMatches","match","key","keyFilter","defaultMatchesLength","customMatchesLength","push","matches","useFilter","props","strQuery","filteredItems"],"mappings":"AAAA;;AACA;AAEA;SACSA,mB,EAAqBC,Y,EAAcC,W,EAAaC,S;AACzD,SAASC,QAAT,QAAyB,KAAzB,C,CAEA;;AAgBA;AACA,OAAO,MAAMC,aAA6B,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,KAAwB;AACnE,MAAIF,KAAK,IAAI,IAAT,IAAiBC,KAAK,IAAI,IAA9B,EAAoC,OAAO,CAAC,CAAR;AAEpC,SAAOD,KAAK,CAACG,QAAN,GAAiBC,iBAAjB,GAAqCC,OAArC,CAA6CJ,KAAK,CAACE,QAAN,GAAiBC,iBAAjB,EAA7C,CAAP;AACD,CAJM;AAMP,OAAO,MAAME,eAAe,GAAGX,YAAY,CAAC;AAC1CY,EAAAA,YAAY,EAAEC,QAD4B;AAE1CC,EAAAA,eAAe,EAAEC,MAFyB;AAG1CC,EAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,CAH8B;AAI1CC,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEF,MADI;AAEVG,IAAAA,OAAO,EAAE;AAFC;AAJ8B,CAAD,EAQxC,QARwC,CAApC;AAUP,OAAO,SAASC,WAAT,CACLC,KADK,EAELjB,KAFK,EAGLkB,OAHK,EASL;AAAA;;AACA,QAAMC,KAAqB,GAAG,EAA9B,CADA,CAEA;AACA;;AACA,QAAMC,MAAM,uBAAGF,OAAH,oBAAGA,OAAO,CAAEH,OAAZ,+BAAuBjB,aAAnC;AACA,QAAMuB,IAAI,GAAGH,OAAO,QAAP,IAAAA,OAAO,CAAER,UAAT,GAAsBf,WAAW,CAACuB,OAAO,CAACR,UAAT,CAAjC,GAAwD,KAArE;AACA,QAAMY,mBAAmB,GAAGb,MAAM,CAACY,IAAP,0BAAYH,OAAZ,oBAAYA,OAAO,CAAEV,eAArB,oCAAwC,EAAxC,EAA4Ce,MAAxE;AAEA,MAAI,EAACN,KAAD,YAACA,KAAK,CAAEM,MAAR,CAAJ,EAAoB,OAAOJ,KAAP;;AAEpBK,EAAAA,IAAI,EACJ,KAAK,MAAMvB,IAAX,IAAmBgB,KAAnB,EAA0B;AACxB,UAAMQ,aAA0C,GAAG,EAAnD;AACA,QAAIC,cAA2D,GAAG,EAAlE;AACA,QAAIC,KAAkB,GAAG,CAAC,CAA1B;;AAEA,QAAI,OAAO1B,IAAP,KAAgB,QAApB,EAA8B;AAC5B,YAAMS,UAAU,GAAGW,IAAI,IAAIZ,MAAM,CAACY,IAAP,CAAYpB,IAAZ,CAA3B;;AAEA,WAAK,MAAM2B,GAAX,IAAkBlB,UAAlB,EAA8B;AAAA;;AAC5B,cAAMX,KAAK,GAAGN,mBAAmB,CAACQ,IAAD,EAAO2B,GAAP,EAAY3B,IAAZ,CAAjC;AACA,cAAM4B,SAAS,GAAGX,OAAH,8CAAGA,OAAO,CAAEV,eAAZ,qBAAG,uBAA2BoB,GAA3B,CAAlB;AAEAD,QAAAA,KAAK,GAAGE,SAAS,GACbA,SAAS,CAAC9B,KAAD,EAAQC,KAAR,EAAeC,IAAf,CADI,GAEbmB,MAAM,CAACrB,KAAD,EAAQC,KAAR,EAAeC,IAAf,CAFV;;AAIA,YAAI0B,KAAK,KAAK,CAAC,CAAX,IAAgBA,KAAK,KAAK,KAA9B,EAAqC;AACnC,cAAIE,SAAJ,EAAeJ,aAAa,CAACG,GAAD,CAAb,GAAqBD,KAArB,CAAf,KACKD,cAAc,CAACE,GAAD,CAAd,GAAsBD,KAAtB;AACN,SAHD,MAGO,IAAI,CAAAT,OAAO,QAAP,YAAAA,OAAO,CAAEL,UAAT,MAAwB,OAA5B,EAAqC;AAC1C,mBAASW,IAAT;AACD;AACF;;AAED,YAAMM,oBAAoB,GAAGrB,MAAM,CAACY,IAAP,CAAYK,cAAZ,EAA4BH,MAAzD;AACA,YAAMQ,mBAAmB,GAAGtB,MAAM,CAACY,IAAP,CAAYI,aAAZ,EAA2BF,MAAvD;AAEA,UAAI,CAACO,oBAAD,IAAyB,CAACC,mBAA9B,EAAmD;AAEnD,UACE,CAAAb,OAAO,QAAP,YAAAA,OAAO,CAAEL,UAAT,MAAwB,OAAxB,IACAkB,mBAAmB,KAAKT,mBADxB,IAEA,CAACQ,oBAHH,EAIE;AAEF,UACE,CAAAZ,OAAO,QAAP,YAAAA,OAAO,CAAEL,UAAT,MAAwB,cAAxB,KAEEkB,mBAAmB,KAAKT,mBAAxB,IACA,CAACQ,oBAHH,CADF,EAME;AACH,KArCD,MAqCO,IAAI,OAAO7B,IAAP,KAAgB,QAApB,EAA8B;AACnC0B,MAAAA,KAAK,GAAGP,MAAM,CAACnB,IAAD,EAAOD,KAAP,EAAcC,IAAd,CAAd;AAEA,UAAI0B,KAAK,KAAK,CAAC,CAAX,IAAgBA,KAAK,KAAK,KAA9B,EAAqC;AAErCD,MAAAA,cAAc,GAAG/B,WAAW,CAACgC,KAAD,CAA5B;AACD;;AAEDR,IAAAA,KAAK,CAACa,IAAN,CAAW;AAAE/B,MAAAA,IAAF;AAAQgC,MAAAA,OAAO,EAAE,EAAE,GAAGP,cAAL;AAAqB,WAAGD;AAAxB;AAAjB,KAAX;AACD;;AAED,SAAON,KAAP;AACD;AAED,OAAO,SAASe,SAAT,CACLC,KADK,EAELlB,KAFK,EAGLjB,KAHK,EAIL;AACA,QAAMoC,QAAQ,GAAGvC,QAAQ,CAAC,MACxB,QAAOG,KAAP,oBAAOA,KAAK,CAAED,KAAd,MAAwB,QAAxB,IACA,QAAOC,KAAP,oBAAOA,KAAK,CAAED,KAAd,MAAwB,QAFM,GAG5B,EAH4B,GAGvBa,MAAM,CAACZ,KAAK,CAACD,KAAP,CAHU,CAAzB;AAKA,QAAMsC,aAAa,GAAGxC,QAAQ,CAAC,MAAM;AACnC,WAAOmB,WAAW,CAChBpB,SAAS,CAACqB,KAAD,CAAT,CAAiBlB,KADD,EAEhBqC,QAAQ,CAACrC,KAFO,EAGhB;AACES,MAAAA,eAAe,EAAE2B,KAAK,CAAC3B,eADzB;AAEEO,MAAAA,OAAO,EAAEoB,KAAK,CAAC7B,YAFjB;AAGEI,MAAAA,UAAU,EAAEyB,KAAK,CAACzB,UAHpB;AAIEG,MAAAA,UAAU,EAAEsB,KAAK,CAACtB;AAJpB,KAHgB,CAAlB;AAUD,GAX6B,CAA9B;AAaA,SAAO;AAAEwB,IAAAA;AAAF,GAAP;AACD","sourcesContent":["/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { getPropertyFromItem, propsFactory, wrapInArray, wrapInRef } from '@/util'\nimport { computed } from 'vue'\n\n// Types\nimport type { PropType, Ref } from 'vue'\n\nexport type FilterFunction = (value: string, query: string, item?: any) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMatch = number | [number, number] | [number, number][] | boolean\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n}, 'filter')\n\nexport function filterItems (\n  items: (Record<string, any> | string)[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n  },\n) {\n  const array: (typeof items) = []\n  // always ensure we fallback\n  // to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (const item of items) {\n    const customMatches: Record<string, FilterMatch> = {}\n    let defaultMatches: Record<string, FilterMatch> | FilterMatch[] = {}\n    let match: FilterMatch = -1\n\n    if (typeof item === 'object') {\n      const filterKeys = keys || Object.keys(item)\n\n      for (const key of filterKeys) {\n        const value = getPropertyFromItem(item, key, item)\n        const keyFilter = options?.customKeyFilter?.[key]\n\n        match = keyFilter\n          ? keyFilter(value, query, item)\n          : filter(value, query, item)\n\n        if (match !== -1 && match !== false) {\n          if (keyFilter) customMatches[key] = match\n          else defaultMatches[key] = match\n        } else if (options?.filterMode === 'every') {\n          continue loop\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    } else if (typeof item === 'string') {\n      match = filter(item, query, item)\n\n      if (match === -1 || match === false) continue\n\n      defaultMatches = wrapInArray(match)\n    }\n\n    array.push({ item, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter (\n  props: FilterProps,\n  items: Ref<any[]> | any[],\n  query?: Ref<string>,\n) {\n  const strQuery = computed(() => (\n    typeof query?.value !== 'string' &&\n    typeof query?.value !== 'number'\n  ) ? '' : String(query.value))\n\n  const filteredItems = computed(() => {\n    return filterItems(\n      wrapInRef(items).value,\n      strQuery.value,\n      {\n        customKeyFilter: props.customKeyFilter,\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n      },\n    )\n  })\n\n  return { filteredItems }\n}\n"],"file":"filter.mjs"}