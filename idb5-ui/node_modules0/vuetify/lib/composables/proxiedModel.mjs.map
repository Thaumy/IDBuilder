{"version":3,"sources":["../../src/composables/proxiedModel.ts"],"names":["computed","ref","getCurrentInstance","toKebabCase","useProxiedModel","props","prop","defaultValue","transformIn","v","transformOut","vm","propIsDefined","vnode","hasOwnProperty","internal","get","value","set","newValue","emit"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,GAAnB,QAA8B,KAA9B;SACSC,kB,EAAoBC,W,6BAE7B;;AAGA;AACA,OAAO,SAASC,eAAT,CAKLC,KALK,EAMLC,IANK,EAOLC,YAPK,EAUL;AAAA,MAFAC,WAEA,uEAF+CC,CAAD,IAAYA,CAE1D;AAAA,MADAC,YACA,uEAD+CD,CAAD,IAAYA,CAC1D;AACA,QAAME,EAAE,GAAGT,kBAAkB,CAAC,iBAAD,CAA7B;AAEA,QAAMU,aAAa,GAAGZ,QAAQ,CAAC,MAAM;AAAA;;AACnC,WAAO,CAAC,EACN,OAAOK,KAAK,CAACC,IAAD,CAAZ,KAAuB,WAAvB,KACCK,EAAE,QAAF,uBAAAA,EAAE,CAAEE,KAAJ,CAAUR,KAAV,6BAAiBS,cAAjB,CAAgCR,IAAhC,KAAyCK,EAAzC,gCAAyCA,EAAE,CAAEE,KAAJ,CAAUR,KAAnD,aAAyC,iBAAiBS,cAAjB,CAAgCX,WAAW,CAACG,IAAD,CAA3C,CAD1C,CADM,CAAR;AAID,GAL6B,CAA9B;AAOA,QAAMS,QAAQ,GAAGd,GAAG,CAACO,WAAW,CAACH,KAAK,CAACC,IAAD,CAAN,CAAZ,CAApB;AAEA,SAAON,QAAQ,CAAQ;AACrBgB,IAAAA,GAAG,GAAI;AACL,UAAIJ,aAAa,CAACK,KAAlB,EAAyB,OAAOT,WAAW,CAACH,KAAK,CAACC,IAAD,CAAN,CAAlB,CAAzB,KACK,OAAOS,QAAQ,CAACE,KAAhB;AACN,KAJoB;;AAKrBC,IAAAA,GAAG,CAAEC,QAAF,EAAY;AACbJ,MAAAA,QAAQ,CAACE,KAAT,GAAiBE,QAAjB;AACAR,MAAAA,EAAE,QAAF,YAAAA,EAAE,CAAES,IAAJ,CAAU,UAASd,IAAK,EAAxB,EAA2BI,YAAY,CAACS,QAAD,CAAvC;AACD;;AARoB,GAAR,CAAf;AAUD","sourcesContent":["// Utilities\nimport { computed, ref } from 'vue'\nimport { getCurrentInstance, toKebabCase } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\n// Composables\nexport function useProxiedModel<\n  Props extends object & { [key in Prop as `onUpdate:${Prop}`]: ((val: any) => void) | undefined },\n  Prop extends Extract<keyof Props, string>,\n  Inner = Props[Prop],\n> (\n  props: Props,\n  prop: Prop,\n  defaultValue?: Props[Prop],\n  transformIn: (value?: Props[Prop]) => Inner = (v: any) => v,\n  transformOut: (value: Inner) => Props[Prop] = (v: any) => v,\n) {\n  const vm = getCurrentInstance('useProxiedModel')\n\n  const propIsDefined = computed(() => {\n    return !!(\n      typeof props[prop] !== 'undefined' &&\n      (vm?.vnode.props?.hasOwnProperty(prop) || vm?.vnode.props?.hasOwnProperty(toKebabCase(prop)))\n    )\n  })\n\n  const internal = ref(transformIn(props[prop])) as Ref<Inner>\n\n  return computed<Inner>({\n    get () {\n      if (propIsDefined.value) return transformIn(props[prop])\n      else return internal.value\n    },\n    set (newValue) {\n      internal.value = newValue\n      vm?.emit(`update:${prop}`, transformOut(newValue))\n    },\n  })\n}\n"],"file":"proxiedModel.mjs"}