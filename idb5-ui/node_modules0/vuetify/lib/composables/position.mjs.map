{"version":3,"sources":["../../src/composables/position.ts"],"names":["computed","convertToUnit","propsFactory","positionValues","makePositionProps","absolute","Boolean","bottom","Number","String","fixed","left","position","type","validator","v","includes","right","top","usePosition","props","name","targets","positionClasses","undefined","positionStyles","styles","target","prop"],"mappings":"AAAA;AACA,SAASA,QAAT,QAAyB,KAAzB;SACSC,a,EAAeC,Y,6BAExB;;AAGA,MAAMC,cAAc,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,OAAvB,EAAgC,UAAhC,EAA4C,QAA5C,CAAvB;AAcA;AACA,OAAO,MAAMC,iBAAiB,GAAGF,YAAY,CAAC;AAC5CG,EAAAA,QAAQ,EAAEC,OADkC;AAE5CC,EAAAA,MAAM,EAAE,CAACD,OAAD,EAAUE,MAAV,EAAkBC,MAAlB,CAFoC;AAG5CC,EAAAA,KAAK,EAAEJ,OAHqC;AAI5CK,EAAAA,IAAI,EAAE,CAACL,OAAD,EAAUE,MAAV,EAAkBC,MAAlB,CAJsC;AAK5CG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,IAAI,EAAEJ,MADE;AAERK,IAAAA,SAAS;AAAE;AAA4BC,IAAAA,CAAD,IAAYZ,cAAc,CAACa,QAAf,CAAwBD,CAAxB;AAF1C,GALkC;AAS5CE,EAAAA,KAAK,EAAE,CAACX,OAAD,EAAUE,MAAV,EAAkBC,MAAlB,CATqC;AAU5CS,EAAAA,GAAG,EAAE,CAACZ,OAAD,EAAUE,MAAV,EAAkBC,MAAlB;AAVuC,CAAD,EAW1C,UAX0C,CAAtC;AAaP,OAAO,SAASU,WAAT,CAAsBC,KAAtB,EAA4CC,IAA5C,EAA0D;AAC/D,QAAMC,OAAO,GAAG,CAAC,KAAD,EAAQ,OAAR,EAAiB,QAAjB,EAA2B,MAA3B,CAAhB;AAEA,QAAMC,eAAe,GAAGvB,QAAQ,CAAC,MAAM;AACrC,QAAIoB,KAAK,CAACV,KAAV,EAAiB,OAAQ,GAAEW,IAAK,SAAf;AACjB,QAAID,KAAK,CAACf,QAAV,EAAoB,OAAQ,GAAEgB,IAAK,YAAf;AAEpB,WAAOD,KAAK,CAACR,QAAN,GAAkB,YAAWQ,KAAK,CAACR,QAAS,EAA5C,GAAgDY,SAAvD;AACD,GAL+B,CAAhC;AAOA,QAAMC,cAAc,GAAGzB,QAAQ,CAAC,MAAM;AACpC,UAAM0B,MAAuD,GAAG,EAAhE;;AAEA,SAAK,MAAMC,MAAX,IAAqBL,OAArB,EAA8B;AAC5B,YAAMM,IAAI,GAAGR,KAAK,CAACO,MAAD,CAAlB;AAEA,UAAIC,IAAI,IAAI,IAAR,IAAgBA,IAAI,KAAK,KAA7B,EAAoC;AAEpCF,MAAAA,MAAM,CAACC,MAAD,CAAN,GAAiB1B,aAAa,CAAC2B,IAAI,KAAK,IAAT,GAAgB,GAAhB,GAAsBnB,MAAM,CAACmB,IAAD,CAA7B,CAA9B;AACD;;AAED,WAAOF,MAAP;AACD,GAZ8B,CAA/B;AAcA,SAAO;AAAEH,IAAAA,eAAF;AAAmBE,IAAAA;AAAnB,GAAP;AACD","sourcesContent":["// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst positionValues = ['static', 'relative', 'fixed', 'absolute', 'sticky'] as const\n\ntype Position = typeof positionValues[number]\n\nexport interface PositionProps {\n  absolute?: boolean\n  bottom?: boolean | number | string\n  fixed?: boolean\n  left?: boolean | number | string\n  position?: Position\n  right?: boolean | number | string\n  top?: boolean | number | string\n}\n\n// Composables\nexport const makePositionProps = propsFactory({\n  absolute: Boolean,\n  bottom: [Boolean, Number, String],\n  fixed: Boolean,\n  left: [Boolean, Number, String],\n  position: {\n    type: String as PropType<Position>,\n    validator: /* istanbul ignore next */ (v: any) => positionValues.includes(v),\n  },\n  right: [Boolean, Number, String],\n  top: [Boolean, Number, String],\n}, 'position')\n\nexport function usePosition (props: PositionProps, name: string) {\n  const targets = ['top', 'right', 'bottom', 'left'] as const\n\n  const positionClasses = computed(() => {\n    if (props.fixed) return `${name}--fixed`\n    if (props.absolute) return `${name}--absolute`\n\n    return props.position ? `position-${props.position}` : undefined\n  })\n\n  const positionStyles = computed(() => {\n    const styles: Partial<Record<typeof targets[number], string>> = {}\n\n    for (const target of targets) {\n      const prop = props[target]\n\n      if (prop == null || prop === false) continue\n\n      styles[target] = convertToUnit(prop === true ? '0' : String(prop))\n    }\n\n    return styles\n  })\n\n  return { positionClasses, positionStyles }\n}\n"],"file":"position.mjs"}