{"version":3,"sources":["../../src/composables/stack.ts"],"names":["computed","effectScope","onScopeDispose","ref","toRaw","watch","getCurrentInstance","stack","useStack","isActive","vm","scope","val","run","value","push","idx","indexOf","splice","stop","immediate","isTop","length"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,cAAhC,EAAgDC,GAAhD,EAAqDC,KAArD,EAA4DC,KAA5D,QAAyE,KAAzE;SACSC,kB,6BAET;;AAGA,MAAMC,KAAK,GAAGJ,GAAG,CAA8B,EAA9B,CAAjB;AAEA,OAAO,SAASK,QAAT,CAAmBC,QAAnB,EAA2C;AAChD,QAAMC,EAAE,GAAGJ,kBAAkB,CAAC,UAAD,CAA7B;AACA,MAAIK,KAAJ;AACAN,EAAAA,KAAK,CAACI,QAAD,EAAWG,GAAG,IAAI;AACrB,QAAIA,GAAJ,EAAS;AACPD,MAAAA,KAAK,GAAGV,WAAW,EAAnB;AACAU,MAAAA,KAAK,CAACE,GAAN,CAAU,MAAM;AACdN,QAAAA,KAAK,CAACO,KAAN,CAAYC,IAAZ,CAAiBL,EAAjB;AAEAR,QAAAA,cAAc,CAAC,MAAM;AACnB,gBAAMc,GAAG,GAAGT,KAAK,CAACO,KAAN,CAAYG,OAAZ,CAAoBP,EAApB,CAAZ;AACAH,UAAAA,KAAK,CAACO,KAAN,CAAYI,MAAZ,CAAmBF,GAAnB,EAAwB,CAAxB;AACD,SAHa,CAAd;AAID,OAPD;AAQD,KAVD,MAUO;AAAA;;AACL,gBAAAL,KAAK,SAAL,mBAAOQ,IAAP;AACD;AACF,GAdI,EAcF;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAdE,CAAL;AAgBA,QAAMC,KAAK,GAAGrB,QAAQ,CAAC,MAAM;AAC3B,WAAOI,KAAK,CAACG,KAAK,CAACO,KAAN,CAAYP,KAAK,CAACO,KAAN,CAAYQ,MAAZ,GAAqB,CAAjC,CAAD,CAAL,KAA+CZ,EAAtD;AACD,GAFqB,CAAtB;AAIA,SAAO;AACLW,IAAAA;AADK,GAAP;AAGD","sourcesContent":["import { computed, effectScope, onScopeDispose, ref, toRaw, watch } from 'vue'\nimport { getCurrentInstance } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, EffectScope, Ref } from 'vue'\n\nconst stack = ref<ComponentInternalInstance[]>([])\n\nexport function useStack (isActive: Ref<boolean>) {\n  const vm = getCurrentInstance('useStack')\n  let scope: EffectScope | undefined\n  watch(isActive, val => {\n    if (val) {\n      scope = effectScope()\n      scope.run(() => {\n        stack.value.push(vm)\n\n        onScopeDispose(() => {\n          const idx = stack.value.indexOf(vm)\n          stack.value.splice(idx, 1)\n        })\n      })\n    } else {\n      scope?.stop()\n    }\n  }, { immediate: true })\n\n  const isTop = computed(() => {\n    return toRaw(stack.value[stack.value.length - 1]) === vm\n  })\n\n  return {\n    isTop,\n  }\n}\n"],"file":"stack.mjs"}