{"version":3,"sources":["../../src/composables/validation.ts"],"names":["useForm","computed","onBeforeMount","onBeforeUnmount","ref","getCurrentInstance","getUid","propsFactory","makeValidationProps","disabled","Boolean","error","errorMessages","type","Array","String","default","maxErrors","Number","name","readonly","rules","modelValue","undefined","useValidation","props","form","isPristine","isDisabled","value","isReadonly","isValid","length","isValidating","validationClasses","vm","uid","register","validate","reset","resetValidation","unregister","emit","results","rule","handler","result","console","warn","push"],"mappings":"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","sourcesContent":["// Composables\nimport { useForm } from '@/composables/form'\n\n// Utilities\nimport { computed, onBeforeMount, onBeforeUnmount, ref } from 'vue'\nimport { getCurrentInstance, getUid, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport type ValidationResult = string | true\nexport type ValidationRule =\n  | ValidationResult\n  | PromiseLike<ValidationResult>\n  | ((value: any) => ValidationResult)\n  | ((value: any) => PromiseLike<ValidationResult>)\n\nexport interface ValidationProps {\n  disabled?: boolean\n  error?: boolean\n  errorMessages?: string | string[]\n  maxErrors?: string | number\n  name?: string\n  readonly?: boolean\n  rules: ValidationRule[]\n  modelValue?: any\n}\n\nexport const makeValidationProps = propsFactory({\n  disabled: Boolean,\n  error: Boolean,\n  errorMessages: {\n    type: [Array, String] as PropType<string | string[]>,\n    default: () => ([]),\n  },\n  maxErrors: {\n    type: [Number, String],\n    default: 1,\n  },\n  name: String,\n  readonly: Boolean,\n  rules: {\n    type: Array as PropType<ValidationRule[]>,\n    default: () => ([]),\n  },\n  modelValue: {\n    type: null,\n    default: undefined as any,\n  },\n})\n\nexport function useValidation (\n  props: ValidationProps,\n  name: string,\n) {\n  const form = useForm()\n  const errorMessages = ref<string[]>([])\n  const isPristine = ref(true)\n  const isDisabled = computed(() => !!(props.disabled || form?.isDisabled.value))\n  const isReadonly = computed(() => !!(props.readonly || form?.isReadonly.value))\n  const isValid = computed(() => {\n    if (\n      props.error ||\n      props.errorMessages?.length ||\n      errorMessages.value.length\n    ) return false\n\n    return isPristine.value ? null : true\n  })\n  const isValidating = ref(false)\n  const validationClasses = computed(() => {\n    return {\n      [`${name}--error`]: isValid.value === false,\n      [`${name}--disabled`]: isDisabled.value,\n      [`${name}--readonly`]: isReadonly.value,\n    }\n  })\n\n  const vm = getCurrentInstance('useValidation')\n  const uid = computed(() => props.name ?? getUid())\n\n  onBeforeMount(() => {\n    form?.register(uid.value, validate, reset, resetValidation)\n  })\n\n  onBeforeUnmount(() => {\n    form?.unregister(uid.value)\n  })\n\n  function reset () {\n    resetValidation()\n\n    vm?.emit('update:modelValue', null)\n  }\n\n  function resetValidation () {\n    isPristine.value = true\n    errorMessages.value = []\n  }\n\n  async function validate () {\n    const results = []\n\n    errorMessages.value = []\n    isValidating.value = true\n\n    for (const rule of props.rules) {\n      if (results.length >= (props.maxErrors || 1)) {\n        break\n      }\n\n      const handler = typeof rule === 'function' ? rule : () => rule\n      const result = await handler(props?.modelValue?.value ?? props.modelValue)\n\n      if (result === true) continue\n\n      if (typeof result !== 'string') {\n        // eslint-disable-next-line no-console\n        console.warn(`${result} is not a valid value. Rule functions must return boolean true or a string.`)\n\n        continue\n      }\n\n      results.push(result)\n    }\n\n    errorMessages.value = results\n    isValidating.value = false\n    isPristine.value = false\n\n    return errorMessages.value\n  }\n\n  return {\n    errorMessages,\n    isDisabled,\n    isReadonly,\n    isPristine,\n    isValid,\n    isValidating,\n    reset,\n    resetValidation,\n    validate,\n    validationClasses,\n  }\n}\n"],"file":"validation.mjs"}