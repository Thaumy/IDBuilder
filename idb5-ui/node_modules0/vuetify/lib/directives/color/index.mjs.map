{"version":3,"sources":["../../../src/directives/color/index.ts"],"names":["classToHex","isCssColor","parseGradient","colors","setTextColor","el","color","currentTheme","cssColor","style","caretColor","setBackgroundColor","backgroundColor","borderColor","setBorderColor","modifiers","Object","keys","length","top","borderTopColor","right","borderRightColor","bottom","borderBottomColor","left","borderLeftColor","setGradientColor","gradient","backgroundImage","updateColor","binding","node","context","$vuetify","theme","arg","undefined","value","update","oldValue","Color","bind"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Utilities\nimport {\n  classToHex,\n  isCssColor,\n  parseGradient,\n} from '../../util/colorUtils'\nimport colors from '../../util/colors'\n\n// Types\nimport { VuetifyThemeVariant } from 'types/services/theme'\nimport { VNode, VNodeDirective } from 'vue'\n\ninterface BorderModifiers {\n  top?: Boolean\n  right?: Boolean\n  bottom?: Boolean\n  left?: Boolean\n}\n\nfunction setTextColor (\n  el: HTMLElement,\n  color: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  const cssColor = !isCssColor(color) ? classToHex(color, colors, currentTheme) : color\n\n  el.style.color = cssColor\n  el.style.caretColor = cssColor\n}\n\nfunction setBackgroundColor (\n  el: HTMLElement,\n  color: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  const cssColor = !isCssColor(color) ? classToHex(color, colors, currentTheme) : color\n\n  el.style.backgroundColor = cssColor\n  el.style.borderColor = cssColor\n}\n\nfunction setBorderColor (\n  el: HTMLElement,\n  color: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n  modifiers?: BorderModifiers,\n) {\n  const cssColor = !isCssColor(color) ? classToHex(color, colors, currentTheme) : color\n\n  if (!modifiers || !Object.keys(modifiers).length) {\n    el.style.borderColor = cssColor\n    return\n  }\n\n  if (modifiers.top) el.style.borderTopColor = cssColor\n  if (modifiers.right) el.style.borderRightColor = cssColor\n  if (modifiers.bottom) el.style.borderBottomColor = cssColor\n  if (modifiers.left) el.style.borderLeftColor = cssColor\n}\n\nfunction setGradientColor (\n  el: HTMLElement,\n  gradient: string,\n  currentTheme: Partial<VuetifyThemeVariant>,\n) {\n  el.style.backgroundImage = `linear-gradient(${\n    parseGradient(gradient, colors, currentTheme)\n  })`\n}\n\nfunction updateColor (\n  el: HTMLElement,\n  binding: VNodeDirective,\n  node: VNode\n) {\n  const currentTheme = node.context!.$vuetify.theme.currentTheme\n\n  if (binding.arg === undefined) {\n    setBackgroundColor(el, binding.value, currentTheme)\n  } else if (binding.arg === 'text') {\n    setTextColor(el, binding.value, currentTheme)\n  } else if (binding.arg === 'border') {\n    setBorderColor(el, binding.value, currentTheme, binding.modifiers)\n  } else if (binding.arg === 'gradient') {\n    setGradientColor(el, binding.value, currentTheme)\n  }\n}\n\nfunction update (\n  el: HTMLElement,\n  binding: VNodeDirective,\n  node: VNode\n) {\n  if (binding.value === binding.oldValue) return\n\n  updateColor(el, binding, node)\n}\n\nexport const Color = {\n  bind: updateColor,\n  update,\n}\n\nexport default Color\n"],"file":"index.mjs"}