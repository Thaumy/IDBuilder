{"version":3,"sources":["../../../src/directives/touch/index.ts"],"names":["keys","handleGesture","wrapper","touchstartX","touchendX","touchstartY","touchendY","dirRatio","minDistance","offsetX","offsetY","Math","abs","left","right","up","down","touchstart","event","touch","changedTouches","clientX","clientY","start","touchend","end","touchmove","touchmoveX","touchmoveY","move","createHandlers","value","e","mounted","el","binding","target","parent","parentElement","options","passive","uid","instance","$","handlers","_touchHandlers","Object","create","forEach","eventName","addEventListener","unmounted","removeEventListener","Touch"],"mappings":"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","sourcesContent":["// Types\nimport type {\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\n// Utilities\nimport { keys } from '@/util'\n\nexport interface TouchHandlers {\n  start?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  end?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  move?: (wrapperEvent: TouchEvent & TouchWrapper) => void\n  left?: (wrapper: TouchWrapper) => void\n  right?: (wrapper: TouchWrapper) => void\n  up?: (wrapper: TouchWrapper) => void\n  down?: (wrapper: TouchWrapper) => void\n}\n\nexport interface TouchWrapper extends TouchHandlers {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  touchendX: number\n  touchendY: number\n  offsetX: number\n  offsetY: number\n}\n\nexport interface TouchValue extends TouchHandlers {\n  parent?: boolean\n  options?: AddEventListenerOptions\n}\n\nexport interface TouchStoredHandlers {\n  touchstart: (e: TouchEvent) => void\n  touchend: (e: TouchEvent) => void\n  touchmove: (e: TouchEvent) => void\n}\n\ninterface TouchDirectiveBinding extends Omit<DirectiveBinding, 'value'> {\n  value?: TouchValue\n}\n\nconst handleGesture = (wrapper: TouchWrapper) => {\n  const { touchstartX, touchendX, touchstartY, touchendY } = wrapper\n  const dirRatio = 0.5\n  const minDistance = 16\n  wrapper.offsetX = touchendX - touchstartX\n  wrapper.offsetY = touchendY - touchstartY\n\n  if (Math.abs(wrapper.offsetY) < dirRatio * Math.abs(wrapper.offsetX)) {\n    wrapper.left && (touchendX < touchstartX - minDistance) && wrapper.left(wrapper)\n    wrapper.right && (touchendX > touchstartX + minDistance) && wrapper.right(wrapper)\n  }\n\n  if (Math.abs(wrapper.offsetX) < dirRatio * Math.abs(wrapper.offsetY)) {\n    wrapper.up && (touchendY < touchstartY - minDistance) && wrapper.up(wrapper)\n    wrapper.down && (touchendY > touchstartY + minDistance) && wrapper.down(wrapper)\n  }\n}\n\nfunction touchstart (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchstartX = touch.clientX\n  wrapper.touchstartY = touch.clientY\n\n  wrapper.start?.({ ...event, ...wrapper })\n}\n\nfunction touchend (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchendX = touch.clientX\n  wrapper.touchendY = touch.clientY\n\n  wrapper.end?.({ ...event, ...wrapper })\n\n  handleGesture(wrapper)\n}\n\nfunction touchmove (event: TouchEvent, wrapper: TouchWrapper) {\n  const touch = event.changedTouches[0]\n  wrapper.touchmoveX = touch.clientX\n  wrapper.touchmoveY = touch.clientY\n\n  wrapper.move?.({ ...event, ...wrapper })\n}\n\nfunction createHandlers (value: TouchHandlers = {}): TouchStoredHandlers {\n  const wrapper = {\n    touchstartX: 0,\n    touchstartY: 0,\n    touchendX: 0,\n    touchendY: 0,\n    touchmoveX: 0,\n    touchmoveY: 0,\n    offsetX: 0,\n    offsetY: 0,\n    left: value.left,\n    right: value.right,\n    up: value.up,\n    down: value.down,\n    start: value.start,\n    move: value.move,\n    end: value.end,\n  }\n\n  return {\n    touchstart: (e: TouchEvent) => touchstart(e, wrapper),\n    touchend: (e: TouchEvent) => touchend(e, wrapper),\n    touchmove: (e: TouchEvent) => touchmove(e, wrapper),\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const value = binding.value\n  const target = value?.parent ? el.parentElement : el\n  const options = value?.options ?? { passive: true }\n  const uid = binding.instance?.$.uid // TODO: use custom uid generator\n\n  if (!target || !uid) return\n\n  const handlers = createHandlers(binding.value)\n\n  target._touchHandlers = target._touchHandlers ?? Object.create(null)\n  target._touchHandlers![uid] = handlers\n\n  keys(handlers).forEach(eventName => {\n    target.addEventListener(eventName, handlers[eventName], options)\n  })\n}\n\nfunction unmounted (el: HTMLElement, binding: TouchDirectiveBinding) {\n  const target = binding.value?.parent ? el.parentElement : el\n  const uid = binding.instance?.$.uid\n\n  if (!target?._touchHandlers || !uid) return\n\n  const handlers = target._touchHandlers[uid]\n\n  keys(handlers).forEach(eventName => {\n    target.removeEventListener(eventName, handlers[eventName])\n  })\n\n  delete target._touchHandlers[uid]\n}\n\nexport const Touch: ObjectDirective = {\n  mounted,\n  unmounted,\n}\n\nexport default Touch\n"],"file":"index.mjs"}