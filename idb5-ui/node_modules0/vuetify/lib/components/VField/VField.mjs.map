{"version":3,"sources":["../../../src/components/VField/VField.tsx"],"names":["filterInputProps","makeVInputProps","VInput","VExpandXTransition","VFieldLabel","VIcon","LoaderSlot","makeLoaderProps","useLoader","makeThemeProps","useTheme","useBackgroundColor","useTextColor","useProxiedModel","computed","ref","toRef","watch","watchEffect","convertToUnit","genericComponent","getUid","nullifyTransforms","pick","propsFactory","standardEasing","useRender","allowedVariants","makeVFieldProps","appendInnerIcon","String","bgColor","clearable","Boolean","clearIcon","type","default","color","id","label","persistentClear","prependInnerIcon","reverse","singleLine","variant","validator","v","includes","VField","name","inheritAttrs","props","active","dirty","emits","e","val","setup","attrs","emit","slots","themeClasses","loaderClasses","isActive","uid","labelRef","floatingLabelRef","controlRef","inputRef","isFocused","value","backgroundColorClasses","backgroundColorStyles","textColorClasses","textColorStyles","error","disabled","undefined","el","$el","targetEl","rect","targetRect","getBoundingClientRect","x","y","height","targetWidth","width","Math","abs","maxWidth","duration","parseFloat","getComputedStyle","transitionDuration","scale","getPropertyValue","style","visibility","animate","transform","easing","direction","finished","then","removeProperty","flush","focus","blur","slotProps","isDirty","onClick","target","document","activeElement","preventDefault","isOutlined","hasPrepend","prependInner","hasClear","clear","hasAppend","appendInner","for","inputProps","_","prepend","append","details","defaultProps","loading","isValid","loader","class","onFocus","onBlur","filterFieldProps","Object","keys"],"mappings":"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","sourcesContent":["// Styles\nimport './VField.sass'\n\n// Components\nimport { filterInputProps, makeVInputProps, VInput } from '@/components/VInput/VInput'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VFieldLabel } from './VFieldLabel'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref, toRef, watch, watchEffect } from 'vue'\nimport {\n  convertToUnit,\n  genericComponent,\n  getUid,\n  nullifyTransforms,\n  pick,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { MakeSlots } from '@/util'\nimport type { PropType, Ref } from 'vue'\nimport type { VInputSlot } from '@/components/VInput/VInput'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'contained', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: boolean\n  isDirty: boolean\n  isFocused: boolean\n  inputRef: Ref<HTMLInputElement | undefined>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot, VInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: String,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: String,\n    default: '$clear',\n  },\n  color: String,\n  id: String,\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: String,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  ...makeThemeProps(),\n  ...makeLoaderProps(),\n  ...makeVInputProps(),\n}, 'v-field')\n\nexport const VField = genericComponent<new <T>() => {\n  $props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (val: T) => any\n  }\n  $slots: MakeSlots<{\n    prependInner: [DefaultInputSlot & VInputSlot]\n    clear: []\n    appendInner: [DefaultInputSlot & VInputSlot]\n    label: [DefaultInputSlot & VInputSlot]\n    prepend: [DefaultInputSlot & VInputSlot]\n    append: [DefaultInputSlot & VInputSlot]\n    details: [DefaultInputSlot & VInputSlot]\n    loader: [{\n      color: string | undefined\n      isActive: boolean\n    }]\n    default: [VFieldSlot]\n  }>\n}>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    active: Boolean,\n    dirty: Boolean,\n\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'click:clear': (e: Event) => true,\n    'click:prepend-inner': (e: MouseEvent) => true,\n    'click:append-inner': (e: MouseEvent) => true,\n    'click:control': (props: DefaultInputSlot) => true,\n    'update:active': (active: boolean) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = useTheme(props)\n    const { loaderClasses } = useLoader(props, 'v-field')\n    const isActive = useProxiedModel(props, 'active')\n    const uid = getUid()\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n    const inputRef = ref<HTMLInputElement>()\n    const isFocused = ref(false)\n    const id = computed(() => props.id || `input-${uid}`)\n\n    watchEffect(() => isActive.value = isFocused.value || props.dirty)\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => {\n      return (\n        isActive.value &&\n        isFocused.value &&\n        !props.error &&\n        !props.disabled\n      ) ? props.color : undefined\n    }))\n\n    watch(isActive, val => {\n      if (!props.singleLine) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n        const rect = nullifyTransforms(el)\n        const targetRect = targetEl.getBoundingClientRect()\n\n        const x = targetRect.x - rect.x\n        const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n        const targetWidth = targetRect.width / 0.75\n        const width = Math.abs(targetWidth - rect.width) > 1\n          ? { maxWidth: convertToUnit(targetWidth) }\n          : undefined\n\n        const duration = parseFloat(getComputedStyle(el).transitionDuration) * 1000\n        const scale = parseFloat(getComputedStyle(targetEl).getPropertyValue('--v-field-label-scale'))\n\n        el.style.visibility = 'visible'\n        targetEl.style.visibility = 'hidden'\n\n        el.animate([\n          { transform: 'translate(0)' },\n          { transform: `translate(${x}px, ${y}px) scale(${scale})`, ...width },\n        ], {\n          duration,\n          easing: standardEasing,\n          direction: val ? 'normal' : 'reverse',\n        }).finished.then(() => {\n          el.style.removeProperty('visibility')\n          targetEl.style.removeProperty('visibility')\n        })\n      }\n    }, { flush: 'post' })\n\n    function focus () {\n      isFocused.value = true\n    }\n\n    function blur () {\n      isFocused.value = false\n    }\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive: isActive.value,\n      isDirty: props.dirty,\n      isFocused: isFocused.value,\n      inputRef,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n\n      emit('click:control', slotProps.value)\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = (slots.prependInner || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear)\n      const hasAppend = !!(slots.appendInner || props.appendInnerIcon || hasClear)\n      const label = slots.label\n        ? slots.label({\n          label: props.label,\n          props: { for: id.value },\n        })\n        : props.label\n      const [inputProps, _] = filterInputProps(props)\n\n      return (\n        <VInput\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--dirty': props.dirty,\n              'v-field--focused': isFocused.value,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            loaderClasses.value,\n            textColorClasses.value,\n          ]}\n          style={[\n            textColorStyles.value,\n          ]}\n          focused={ isFocused.value }\n          { ...inputProps }\n          { ...attrs }\n          v-slots={{\n            prepend: slots.prepend ? props => slots.prepend?.({ ...props, ...slotProps.value }) : undefined,\n            append: slots.append ? props => slots.append?.({ ...props, ...slotProps.value }) : undefined,\n            details: slots.details ? props => slots.details?.({ ...props, ...slotProps.value }) : undefined,\n            default: defaultProps => (\n              <div\n                class={[\n                  'v-field__control',\n                  backgroundColorClasses.value,\n                ]}\n                style={ backgroundColorStyles.value }\n                onClick={ onClick }\n              >\n                <div class=\"v-field__overlay\" />\n\n                <LoaderSlot\n                  name=\"v-field\"\n                  active={ props.loading }\n                  color={ !defaultProps.isValid.value ? undefined : props.color }\n                  v-slots={{ default: slots.loader }}\n                />\n\n                { hasPrepend && (\n                  <div\n                    class=\"v-field__prepend-inner\"\n                    onClick={ e => emit('click:prepend-inner', e) }\n                  >\n                    { props.prependInnerIcon && (\n                      <VIcon icon={ props.prependInnerIcon } />\n                    ) }\n\n                    { slots?.prependInner?.(defaultProps) }\n                  </div>\n                ) }\n\n                <div class=\"v-field__field\">\n                  { ['contained', 'filled'].includes(props.variant) && !props.singleLine && (\n                    <VFieldLabel ref={ floatingLabelRef } floating>\n                      { label }\n                    </VFieldLabel>\n                  ) }\n\n                  <VFieldLabel ref={ labelRef } for={ id.value }>\n                    { label }\n                  </VFieldLabel>\n\n                  { slots.default?.({\n                    ...slotProps.value,\n                    ...defaultProps,\n                    props: {\n                      id: id.value,\n                      class: 'v-field__input',\n                      onFocus: () => (isFocused.value = true),\n                      onBlur: () => (isFocused.value = false),\n                    },\n                    focus,\n                    blur,\n                  } as VFieldSlot) }\n                </div>\n\n                { hasClear && (\n                  <VExpandXTransition>\n                    <div\n                      class=\"v-field__clearable\"\n                      onClick={ (e: Event) => emit('click:clear', e) }\n                      v-show={ props.dirty }\n                    >\n                      { slots.clear\n                        ? slots.clear()\n                        : <VIcon icon={ props.clearIcon } />\n                      }\n                    </div>\n                  </VExpandXTransition>\n                ) }\n\n                { hasAppend && (\n                  <div\n                    class=\"v-field__append-inner\"\n                    onClick={ e => emit('click:append-inner', e) }\n                  >\n                    { slots?.appendInner?.(defaultProps) }\n\n                    { props.appendInnerIcon && (\n                      <VIcon icon={ props.appendInnerIcon } />\n                    ) }\n                  </div>\n                ) }\n\n                <div class=\"v-field__outline\">\n                  { isOutlined && (\n                    <>\n                      <div class=\"v-field__outline__start\" />\n\n                      <div class=\"v-field__outline__notch\">\n                        { !props.singleLine && (\n                          <VFieldLabel ref={ floatingLabelRef } floating>\n                            { label }\n                          </VFieldLabel>\n                        ) }\n                      </div>\n\n                      <div class=\"v-field__outline__end\" />\n                    </>\n                  ) }\n\n                  { ['plain', 'underlined'].includes(props.variant) && !props.singleLine && (\n                    <VFieldLabel ref={ floatingLabelRef } floating>\n                      { label }\n                    </VFieldLabel>\n                  ) }\n                </div>\n              </div>\n            ),\n          }}\n        />\n      )\n    })\n\n    return {\n      inputRef,\n      controlRef,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n\n// TODO: this is kinda slow, might be better to implicitly inherit props instead\nexport function filterFieldProps (attrs: Record<string, unknown>) {\n  return pick(attrs, Object.keys(VField.props))\n}\n"],"file":"VField.mjs"}