{"version":3,"sources":["../../../src/components/VTextField/VTextField.tsx"],"names":["filterFieldProps","makeVFieldProps","VCounter","VField","filterInputAttrs","useProxiedModel","Intersect","computed","ref","defineComponent","useRender","dirtyTypes","VTextField","name","directives","inheritAttrs","props","autofocus","Boolean","counter","Number","String","counterValue","Function","prefix","placeholder","persistentPlaceholder","persistentCounter","suffix","type","default","emits","val","setup","attrs","slots","model","internalDirty","isDirty","value","includes","toString","length","max","maxlength","undefined","onIntersect","isIntersecting","entries","target","focus","fieldRef","inputRef","blur","hasCounter","rootAttrs","inputAttrs","fieldProps","_","e","stopPropagation","isActive","isDisabled","isReadonly","class","fieldClass","slotProps","showPlaceholder","opacity","handler","details","isFocused"],"mappings":"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","sourcesContent":["// Styles\nimport './VTextField.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\nimport { filterInputAttrs } from '@/components/VInput/VInput'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { defineComponent, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst dirtyTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\nexport const VTextField = defineComponent({\n  name: 'VTextField',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: {\n    autofocus: Boolean,\n    counter: [Boolean, Number, String] as PropType<true | number | string>,\n    counterValue: Function as PropType<(value: any) => number>,\n    prefix: String,\n    placeholder: String,\n    persistentPlaceholder: Boolean,\n    persistentCounter: Boolean,\n    suffix: String,\n    type: {\n      type: String,\n      default: 'text',\n    },\n\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n\n    const internalDirty = ref(false)\n    const isDirty = computed(() => {\n      return internalDirty.value || !!model.value || dirtyTypes.includes(props.type)\n    })\n\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function'\n        ? props.counterValue(model.value)\n        : (model.value || '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as undefined\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const fieldRef = ref<VField>()\n    function focus () {\n      fieldRef.value?.inputRef?.focus()\n    }\n    function blur () {\n      fieldRef.value?.inputRef?.blur()\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || props.counterValue)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [fieldProps, _] = filterFieldProps(props)\n\n      return (\n        <VField\n          ref={ fieldRef }\n          class={[\n            'v-text-field',\n            {\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n            },\n          ]}\n          active={ isDirty.value }\n          onUpdate:active={ val => internalDirty.value = val }\n          onClick:control={ focus }\n          onClick:clear={ e => {\n            e.stopPropagation()\n\n            model.value = ''\n          }}\n          role=\"textbox\"\n          { ...rootAttrs }\n          { ...fieldProps }\n          v-slots={{\n            ...slots,\n            default: ({\n              isActive,\n              isDisabled,\n              isReadonly,\n              inputRef,\n              props: { class: fieldClass, ...slotProps },\n            }) => {\n              const showPlaceholder = isActive || props.persistentPlaceholder\n              return (\n                <>\n                  { props.prefix && (\n                    <span class=\"v-text-field__prefix\" style={{ opacity: showPlaceholder ? undefined : '0' }}>\n                      { props.prefix }\n                    </span>\n                  ) }\n\n                  <input\n                    class={ fieldClass }\n                    style={{ opacity: showPlaceholder ? undefined : '0' }} // can't this just be a class?\n                    v-model={ model.value }\n                    v-intersect={[{\n                      handler: onIntersect,\n                    }, null, ['once']]}\n                    ref={ inputRef }\n                    autofocus={ props.autofocus }\n                    readonly={ isReadonly.value }\n                    disabled={ isDisabled.value }\n                    placeholder={ props.placeholder }\n                    size={ 1 }\n                    type={ props.type }\n                    { ...slotProps }\n                    { ...inputAttrs }\n                  />\n\n                  { props.suffix && (\n                    <span class=\"v-text-field__suffix\" style={{ opacity: showPlaceholder ? undefined : '0' }}>\n                      { props.suffix }\n                    </span>\n                  ) }\n                </>\n              )\n            },\n            details: hasCounter ? ({ isFocused }) => (\n              <>\n                <span />\n\n                <VCounter\n                  active={ props.persistentCounter || isFocused }\n                  value={ counterValue.value }\n                  max={ max.value }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        />\n      )\n    })\n\n    return {\n      fieldRef,\n      focus,\n      blur,\n    }\n  },\n})\n\nexport type VTextField = InstanceType<typeof VTextField>\n"],"file":"VTextField.mjs"}