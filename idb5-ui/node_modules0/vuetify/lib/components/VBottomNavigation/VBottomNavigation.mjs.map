{"version":3,"sources":["../../../src/components/VBottomNavigation/VBottomNavigation.tsx"],"names":["makeBorderProps","useBorder","makeDensityProps","useDensity","makeElevationProps","useElevation","makeLayoutItemProps","useLayoutItem","makeRoundedProps","useRounded","makeTagProps","useBackgroundColor","useTextColor","useProxiedModel","makeThemeProps","useTheme","computed","convertToUnit","defineComponent","VBottomNavigation","name","props","bgColor","String","color","grow","Boolean","modelValue","type","default","mode","validator","v","includes","height","Number","tag","emits","value","setup","slots","themeClasses","borderClasses","backgroundColorClasses","backgroundColorStyles","textColorClasses","textColorStyles","densityClasses","elevationClasses","roundedClasses","density","isActive","layoutStyles","priority","absolute","transform"],"mappings":"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","sourcesContent":["// Styles\nimport './VBottomNavigation.sass'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeLayoutItemProps, useLayoutItem } from '@/composables/layout'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, defineComponent } from '@/util'\n\nexport const VBottomNavigation = defineComponent({\n  name: 'VBottomNavigation',\n\n  props: {\n    bgColor: String,\n    color: String,\n    grow: Boolean,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    mode: {\n      type: String,\n      validator: (v: any) => !v || ['horizontal', 'shift'].includes(v),\n    },\n    height: {\n      type: [Number, String],\n      default: 56,\n    },\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeLayoutItemProps({\n      name: 'bottom-navigation',\n    }),\n    ...makeTagProps({ tag: 'header' }),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme(props)\n    const { borderClasses } = useBorder(props, 'v-bottom-navigation')\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(computed(() => props.bgColor))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => props.color))\n    const { densityClasses } = useDensity(props, 'v-bottom-navigation')\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props, 'v-bottom-navigation')\n    const height = computed(() => (\n      Number(props.height) -\n      (props.density === 'comfortable' ? 8 : 0) -\n      (props.density === 'compact' ? 16 : 0)\n    ))\n    const isActive = useProxiedModel(props, 'modelValue', props.modelValue)\n    const layoutStyles = useLayoutItem(\n      props.name,\n      computed(() => props.priority),\n      computed(() => 'bottom'),\n      computed(() => isActive.value ? height.value : 0),\n      height,\n      isActive\n    )\n\n    return () => {\n      return (\n        <props.tag\n          class={[\n            'v-bottom-navigation',\n            {\n              'v-bottom-navigation--grow': props.grow,\n              'v-bottom-navigation--horizontal': props.mode === 'horizontal',\n              'v-bottom-navigation--is-active': isActive.value,\n              'v-bottom-navigation--shift': props.mode === 'shift',\n              'v-bottom-navigation--absolute': props.absolute,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            textColorClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            layoutStyles.value,\n            textColorStyles.value,\n            {\n              height: convertToUnit(height.value),\n              transform: `translateY(${convertToUnit(!isActive.value ? 100 : 0, '%')})`,\n            },\n          ]}\n        >\n          { slots.default && (\n            <div class=\"v-bottom-navigation__content\">\n              { slots.default() }\n            </div>\n          ) }\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VBottomNavigation = InstanceType<typeof VBottomNavigation>\n"],"file":"VBottomNavigation.mjs"}