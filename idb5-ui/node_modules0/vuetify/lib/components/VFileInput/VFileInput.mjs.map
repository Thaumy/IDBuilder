{"version":3,"sources":["../../../src/components/VFileInput/VFileInput.tsx"],"names":["filterFieldProps","makeVFieldProps","VChip","VCounter","VField","useLocale","useProxiedModel","computed","ref","defineComponent","humanReadableFileSize","useRender","wrapInArray","filterInputAttrs","VFileInput","name","inheritAttrs","props","chips","Boolean","counter","counterSizeString","type","String","default","counterString","multiple","showSize","Number","validator","v","includes","clearable","prependIcon","modelValue","Array","val","every","emits","files","setup","attrs","slots","t","model","internalDirty","isDirty","value","length","base","undefined","totalBytes","reduce","bytes","size","totalBytesReadable","fileNames","map","file","counterValue","fileCount","fieldRef","focus","inputRef","blur","click","hasCounter","rootAttrs","inputAttrs","fieldProps","_","e","stopPropagation","isActive","class","fieldClass","slotProps","disabled","target","selection","text","color","join","details"],"mappings":"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","sourcesContent":["// Styles\nimport './VFileInput.sass'\n\n// Components\nimport { filterFieldProps, makeVFieldProps } from '@/components/VField/VField'\nimport { VChip } from '@/components/VChip'\nimport { VCounter } from '@/components/VCounter'\nimport { VField } from '@/components/VField'\n\n// Composables\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, ref } from 'vue'\nimport { defineComponent, humanReadableFileSize, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport { filterInputAttrs } from '@/components/VInput/VInput'\n\nexport const VFileInput = defineComponent({\n  name: 'VFileInput',\n\n  inheritAttrs: false,\n\n  props: {\n    chips: Boolean,\n    counter: Boolean,\n    counterSizeString: {\n      type: String,\n      default: '$vuetify.fileInput.counterSize',\n    },\n    counterString: {\n      type: String,\n      default: '$vuetify.fileInput.counter',\n    },\n    multiple: Boolean,\n    showSize: {\n      type: [Boolean, Number] as PropType<boolean | 1000 | 1024>,\n      default: false,\n      validator: (v: boolean | number) => {\n        return (\n          typeof v === 'boolean' ||\n          [1000, 1024].includes(v)\n        )\n      },\n    },\n\n    ...makeVFieldProps({ clearable: true }),\n\n    prependIcon: {\n      type: String,\n      default: '$file',\n    },\n    modelValue: {\n      type: Array as PropType<File[] | undefined>,\n      default: () => ([]),\n      validator: (val: any) => {\n        return wrapInArray(val).every(v => v != null && typeof v === 'object')\n      },\n    },\n  },\n\n  emits: {\n    'update:modelValue': (files: File[]) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const { t } = useLocale()\n    const model = useProxiedModel(props, 'modelValue')\n\n    const internalDirty = ref(false)\n    const isDirty = computed(() => {\n      return internalDirty.value || !!model.value?.length\n    })\n\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined)\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, { size = 0 }) => bytes + size, 0))\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value))\n\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const { name = '', size = 0 } = file\n\n      return !props.showSize\n        ? name\n        : `${name} (${humanReadableFileSize(size, base.value)})`\n    }))\n\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value)\n      else return t(props.counterString, fileCount)\n    })\n\n    const fieldRef = ref<VField>()\n    function focus () {\n      fieldRef.value?.inputRef?.focus()\n    }\n    function blur () {\n      fieldRef.value?.inputRef?.blur()\n    }\n    function click () {\n      fieldRef.value?.inputRef?.click()\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter || counterValue.value)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [fieldProps, _] = filterFieldProps(props)\n\n      return (\n        <VField\n          ref={ fieldRef }\n          class=\"v-file-input\"\n          active={ isDirty.value }\n          dirty={ isDirty.value }\n          prepend-icon={ props.prependIcon }\n          onUpdate:active={ val => internalDirty.value = val }\n          onClick:control={ click }\n          onClick:prepend={ click }\n          onClick:clear={ e => {\n            e.stopPropagation()\n\n            model.value = []\n\n            if (!fieldRef.value?.inputRef?.value) return\n\n            fieldRef.value.inputRef.value = ''\n          } }\n          { ...rootAttrs }\n          { ...fieldProps }\n          v-slots={{\n            ...slots,\n            default: ({\n              isActive,\n              inputRef,\n              props: { class: fieldClass, ...slotProps },\n            }) => (\n              <>\n                <input\n                  ref={ inputRef }\n                  type=\"file\"\n                  disabled={ props.disabled }\n                  multiple={ props.multiple }\n                  onClick={ e => e.stopPropagation() }\n                  onChange={ e => {\n                    if (!e.target) return\n\n                    const target = e.target as HTMLInputElement\n                    model.value = [...target.files ?? []]\n\n                    if (!isActive) inputRef.value?.focus()\n                  } }\n                  { ...slotProps }\n                  { ...inputAttrs }\n                />\n\n                { isDirty.value && (\n                  <div class={ fieldClass }>\n                    { slots.selection ? slots.selection({\n                      fileNames: fileNames.value,\n                      totalBytes: totalBytes.value,\n                      totalBytesReadable: totalBytesReadable.value,\n                    })\n                    : props.chips ? fileNames.value.map(text => (\n                      <VChip\n                        key={ text }\n                        size=\"small\"\n                        color={ props.color }\n                      >{ text }</VChip>\n                    ))\n                    : fileNames.value.join(', ') }\n                  </div>\n                ) }\n              </>\n            ),\n\n            details: hasCounter ? () => (\n              <>\n                <span />\n\n                <VCounter\n                  value={ counterValue.value }\n                  v-slots={ slots.counter }\n                />\n              </>\n            ) : undefined,\n          }}\n        />\n      )\n    })\n\n    return {\n      fieldRef,\n      focus,\n      blur,\n      click,\n    }\n  },\n})\n\nexport type VFileInput = InstanceType<typeof VFileInput>\n"],"file":"VFileInput.mjs"}