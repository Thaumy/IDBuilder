{"version":3,"sources":["../../../src/components/VChip/VChip.tsx"],"names":["VAvatar","VIcon","genOverlays","makeVariantProps","useVariant","makeBorderProps","useBorder","makeDensityProps","useDensity","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeRouterProps","useLink","makeSizeProps","useSize","makeTagProps","makeThemeProps","useTheme","useProxiedModel","Ripple","defineComponent","VChip","name","directives","props","activeClass","String","appendAvatar","appendIcon","closable","Boolean","closeIcon","type","default","closeLabel","disabled","draggable","filter","filterIcon","label","link","pill","prependAvatar","prependIcon","ripple","text","modelValue","tag","variant","emits","e","value","setup","attrs","emit","slots","isActive","themeClasses","borderClasses","colorClasses","colorStyles","variantClasses","elevationClasses","roundedClasses","sizeClasses","densityClasses","onCloseClick","Tag","isLink","hasAppend","append","hasClose","close","hasPrepend","prepend","isClickable","undefined","href","navigate","size","onClick"],"mappings":";AAAA;AACA,qB,CAEA;;SACSA,O;SACAC,K,8BAET;;SACSC,W,EAAaC,gB,EAAkBC,U;SAC/BC,e,EAAiBC,S;SACjBC,gB,EAAkBC,U;SAClBC,kB,EAAoBC,Y;SACpBC,gB,EAAkBC,U;SAClBC,e,EAAiBC,O;SACjBC,a,EAAeC,O;SACfC,Y;SACAC,c,EAAgBC,Q;SAChBC,e,8CAET;;SACSC,M,6CAET;;SACSC,e;AAET,OAAO,MAAMC,KAAK,GAAGD,eAAe,CAAC;AACnCE,EAAAA,IAAI,EAAE,OAD6B;AAGnCC,EAAAA,UAAU,EAAE;AAAEJ,IAAAA;AAAF,GAHuB;AAKnCK,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAEC,MADR;AAELC,IAAAA,YAAY,EAAED,MAFT;AAGLE,IAAAA,UAAU,EAAEF,MAHP;AAILG,IAAAA,QAAQ,EAAEC,OAJL;AAKLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAEN,MADG;AAETO,MAAAA,OAAO,EAAE;AAFA,KALN;AASLC,IAAAA,UAAU,EAAE;AACVF,MAAAA,IAAI,EAAEN,MADI;AAEVO,MAAAA,OAAO,EAAE;AAFC,KATP;AAaLE,IAAAA,QAAQ,EAAEL,OAbL;AAcLM,IAAAA,SAAS,EAAEN,OAdN;AAeLO,IAAAA,MAAM,EAAEP,OAfH;AAgBLQ,IAAAA,UAAU,EAAE;AACVN,MAAAA,IAAI,EAAEN,MADI;AAEVO,MAAAA,OAAO,EAAE;AAFC,KAhBP;AAoBLM,IAAAA,KAAK,EAAET,OApBF;AAqBLU,IAAAA,IAAI,EAAEV,OArBD;AAsBLW,IAAAA,IAAI,EAAEX,OAtBD;AAuBLY,IAAAA,aAAa,EAAEhB,MAvBV;AAwBLiB,IAAAA,WAAW,EAAEjB,MAxBR;AAyBLkB,IAAAA,MAAM,EAAE;AACNZ,MAAAA,IAAI,EAAEF,OADA;AAENG,MAAAA,OAAO,EAAE;AAFH,KAzBH;AA6BLY,IAAAA,IAAI,EAAEnB,MA7BD;AA8BLoB,IAAAA,UAAU,EAAE;AACVd,MAAAA,IAAI,EAAEF,OADI;AAEVG,MAAAA,OAAO,EAAE;AAFC,KA9BP;AAmCL,OAAG9B,eAAe,EAnCb;AAoCL,OAAGE,gBAAgB,EApCd;AAqCL,OAAGE,kBAAkB,EArChB;AAsCL,OAAGE,gBAAgB,EAtCd;AAuCL,OAAGE,eAAe,EAvCb;AAwCL,OAAGE,aAAa,EAxCX;AAyCL,OAAGE,YAAY,CAAC;AAAEgC,MAAAA,GAAG,EAAE;AAAP,KAAD,CAzCV;AA0CL,OAAG/B,cAAc,EA1CZ;AA2CL,OAAGf,gBAAgB,CAAC;AAAE+C,MAAAA,OAAO,EAAE;AAAX,KAAD;AA3Cd,GAL4B;AAmDnCC,EAAAA,KAAK,EAAE;AACL,mBAAgBC,CAAD,IAAc,IADxB;AAEL,qBAAkBC,KAAD,IAAoB,IAFhC;AAGL,yBAAsBA,KAAD,IAAoB;AAHpC,GAnD4B;;AAyDnCC,EAAAA,KAAK,CAAE5B,KAAF,QAAiC;AAAA,QAAxB;AAAE6B,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA;AAAf,KAAwB;AACpC,UAAMC,QAAQ,GAAGtC,eAAe,CAACM,KAAD,EAAQ,YAAR,CAAhC;AAEA,UAAM;AAAEiC,MAAAA;AAAF,QAAmBxC,QAAQ,CAACO,KAAD,CAAjC;AACA,UAAM;AAAEkC,MAAAA;AAAF,QAAoBtD,SAAS,CAACoB,KAAD,EAAQ,QAAR,CAAnC;AACA,UAAM;AAAEmC,MAAAA,YAAF;AAAgBC,MAAAA,WAAhB;AAA6BC,MAAAA;AAA7B,QAAgD3D,UAAU,CAACsB,KAAD,EAAQ,QAAR,CAAhE;AACA,UAAM;AAAEsC,MAAAA;AAAF,QAAuBtD,YAAY,CAACgB,KAAD,CAAzC;AACA,UAAM;AAAEuC,MAAAA;AAAF,QAAqBrD,UAAU,CAACc,KAAD,EAAQ,QAAR,CAArC;AACA,UAAM;AAAEwC,MAAAA;AAAF,QAAkBlD,OAAO,CAACU,KAAD,EAAQ,QAAR,CAA/B;AACA,UAAM;AAAEyC,MAAAA;AAAF,QAAqB3D,UAAU,CAACkB,KAAD,EAAQ,QAAR,CAArC;AACA,UAAMgB,IAAI,GAAG5B,OAAO,CAACY,KAAD,EAAQ6B,KAAR,CAApB;;AAEA,aAASa,YAAT,CAAuBhB,CAAvB,EAAiC;AAC/BM,MAAAA,QAAQ,CAACL,KAAT,GAAiB,KAAjB;AAEAG,MAAAA,IAAI,CAAC,aAAD,EAAgBJ,CAAhB,CAAJ;AACD;;AAED,WAAO,MAAM;AAAA;;AACX,YAAMiB,GAAG,GAAI3B,IAAI,CAAC4B,MAAL,CAAYjB,KAAb,GAAsB,GAAtB,GAA4B3B,KAAK,CAACuB,GAA9C;AACA,YAAMsB,SAAS,GAAG,CAAC,EAAEd,KAAK,CAACe,MAAN,IAAgB9C,KAAK,CAACI,UAAtB,IAAoCJ,KAAK,CAACG,YAA5C,CAAnB;AACA,YAAM4C,QAAQ,GAAG,CAAC,EAAEhB,KAAK,CAACiB,KAAN,IAAehD,KAAK,CAACK,QAAvB,CAAlB;AACA,YAAM4C,UAAU,GAAG,CAAC,EAAElB,KAAK,CAACmB,OAAN,IAAiBlD,KAAK,CAACmB,WAAvB,IAAsCnB,KAAK,CAACkB,aAA9C,CAApB;AACA,YAAMiC,WAAW,GAAG,CAACnD,KAAK,CAACW,QAAP,KAAoBK,IAAI,CAACmC,WAAL,CAAiBxB,KAAjB,IAA0B3B,KAAK,CAACgB,IAApD,CAApB;AAEA,aAAOgB,QAAQ,CAACL,KAAT;AAAA,iBAEI,CACL,QADK,EAEL;AACE,8BAAoB3B,KAAK,CAACW,QAD5B;AAEE,2BAAiBX,KAAK,CAACe,KAFzB;AAGE,0BAAgBoC,WAHlB;AAIE,0BAAgBnD,KAAK,CAACiB;AAJxB,SAFK,EAQLgB,YAAY,CAACN,KARR,EASLO,aAAa,CAACP,KATT,EAULQ,YAAY,CAACR,KAVR,EAWLc,cAAc,CAACd,KAXV,EAYLW,gBAAgB,CAACX,KAZZ,EAaLY,cAAc,CAACZ,KAbV,EAcLa,WAAW,CAACb,KAdP,EAeLU,cAAc,CAACV,KAfV,CAFJ;AAAA,iBAmBK,CAACS,WAAW,CAACT,KAAb,CAnBL;AAAA,oBAoBQ3B,KAAK,CAACW,QAAN,IAAkByC,SApB1B;AAAA,qBAqBSpD,KAAK,CAACY,SArBf;AAAA,gBAsBII,IAAI,CAACqC,IAAL,CAAU1B,KAtBd;AAAA,mBAwBOwB,WAAW,IAAInC,IAAI,CAACsC;AAxB3B;AAAA,wBA0BD9E,WAAW,CAAC2E,WAAD,EAAc,QAAd,CA1BV,EA4BDF,UAAU;AAAA,mBACC;AADD,YAENlB,KAAK,CAACmB,OAAN,GACEnB,KAAK,CAACmB,OAAN,EADF;AAAA,kBAIWlD,KAAK,CAACmB,WAJjB;AAAA,mBAKYnB,KAAK,CAACkB,aALlB;AAAA,kBAMWlB,KAAK,CAACuD;AANjB,8CAFM,EA5BT,uCA2CDxB,KAAK,CAACtB,OA3CL,qBA2CD,qBAAAsB,KAAK,CA3CJ,6BA2CoB/B,KAAK,CAACqB,IA3C1B,EA6CDwB,SAAS;AAAA,mBACE;AADF,YAELd,KAAK,CAACe,MAAN,GACEf,KAAK,CAACe,MAAN,EADF;AAAA,kBAIW9C,KAAK,CAACI,UAJjB;AAAA,mBAKYJ,KAAK,CAACG,YALlB;AAAA,kBAMWH,KAAK,CAACuD;AANjB,8CAFK,EA7CR,EA4DDR,QAAQ;AAAA,mBAEA,eAFA;AAAA,qBAGIL;AAHJ,YAKJX,KAAK,CAACiB,KAAN,GACEjB,KAAK,CAACiB,KAAN,CAAY;AAAEhD,UAAAA,KAAK,EAAE;AAAEwD,YAAAA,OAAO,EAAEd;AAAX;AAAT,SAAZ,CADF;AAAA,kBAIW1C,KAAK,CAACO,SAJjB;AAAA,kBAKS;AALT,6BALI,kBA5DP;AAAA;AAAA,4GAuBS4C,WAAW,IAAInD,KAAK,CAACoB,MAvB9B,EAuBsC,IAvBtC,GAAP;AA8ED,KArFD;AAsFD;;AAjKkC,CAAD,CAA7B","sourcesContent":["// Styles\nimport './VChip.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { genOverlays, makeVariantProps, useVariant } from '@/composables/variant'\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeRouterProps, useLink } from '@/composables/router'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport { Ripple } from '@/directives/ripple'\n\n// Utilities\nimport { defineComponent } from '@/util'\n\nexport const VChip = defineComponent({\n  name: 'VChip',\n\n  directives: { Ripple },\n\n  props: {\n    activeClass: String,\n    appendAvatar: String,\n    appendIcon: String,\n    closable: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    closeLabel: {\n      type: String,\n      default: '$vuetify.close',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    pill: Boolean,\n    prependAvatar: String,\n    prependIcon: String,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    text: String,\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeRouterProps(),\n    ...makeSizeProps(),\n    ...makeTagProps({ tag: 'span' }),\n    ...makeThemeProps(),\n    ...makeVariantProps({ variant: 'contained' } as const),\n  },\n\n  emits: {\n    'click:close': (e: Event) => true,\n    'update:active': (value: Boolean) => true,\n    'update:modelValue': (value: Boolean) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    const { themeClasses } = useTheme(props)\n    const { borderClasses } = useBorder(props, 'v-chip')\n    const { colorClasses, colorStyles, variantClasses } = useVariant(props, 'v-chip')\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props, 'v-chip')\n    const { sizeClasses } = useSize(props, 'v-chip')\n    const { densityClasses } = useDensity(props, 'v-chip')\n    const link = useLink(props, attrs)\n\n    function onCloseClick (e: Event) {\n      isActive.value = false\n\n      emit('click:close', e)\n    }\n\n    return () => {\n      const Tag = (link.isLink.value) ? 'a' : props.tag\n      const hasAppend = !!(slots.append || props.appendIcon || props.appendAvatar)\n      const hasClose = !!(slots.close || props.closable)\n      const hasPrepend = !!(slots.prepend || props.prependIcon || props.prependAvatar)\n      const isClickable = !props.disabled && (link.isClickable.value || props.link)\n\n      return isActive.value && (\n        <Tag\n          class={[\n            'v-chip',\n            {\n              'v-chip--disabled': props.disabled,\n              'v-chip--label': props.label,\n              'v-chip--link': isClickable,\n              'v-chip--pill': props.pill,\n            },\n            themeClasses.value,\n            borderClasses.value,\n            colorClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n            sizeClasses.value,\n            variantClasses.value,\n          ]}\n          style={ [colorStyles.value] }\n          disabled={ props.disabled || undefined }\n          draggable={ props.draggable }\n          href={ link.href.value }\n          v-ripple={ [isClickable && props.ripple, null] }\n          onClick={ isClickable && link.navigate }\n        >\n          { genOverlays(isClickable, 'v-chip') }\n\n          { hasPrepend && (\n            <div class=\"v-chip__prepend\">\n              { slots.prepend\n                ? slots.prepend()\n                : (\n                  <VAvatar\n                    icon={ props.prependIcon }\n                    image={ props.prependAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { slots.default?.() ?? props.text }\n\n          { hasAppend && (\n            <div class=\"v-chip__append\">\n              { slots.append\n                ? slots.append()\n                : (\n                  <VAvatar\n                    icon={ props.appendIcon }\n                    image={ props.appendAvatar }\n                    size={ props.size }\n                  />\n                )\n              }\n            </div>\n          ) }\n\n          { hasClose && (\n            <div\n              class=\"v-chip__close\"\n              onClick={ onCloseClick }\n            >\n              { slots.close\n                ? slots.close({ props: { onClick: onCloseClick } })\n                : (\n                  <VIcon\n                    icon={ props.closeIcon }\n                    size=\"x-small\"\n                  />\n                )\n              }\n            </div>\n          ) }\n        </Tag>\n      )\n    }\n  },\n})\n\nexport type VChip = InstanceType<typeof VChip>\n"],"file":"VChip.mjs"}