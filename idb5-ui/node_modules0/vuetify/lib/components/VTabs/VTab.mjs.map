{"version":3,"sources":["../../../src/components/VTabs/VTab.ts"],"names":["factory","GroupableFactory","Routable","Themeable","keyCodes","mixins","baseMixins","extend","name","props","ripple","type","Boolean","Object","default","data","proxyClass","computed","classes","options","call","disabled","groupClasses","value","to","href","$router","resolve","$route","append","replace","methods","click","e","preventDefault","indexOf","detail","$el","blur","$emit","toggle","isActive","render","h","tag","generateRouteLink","attrs","String","role","tabindex","on","keydown","keyCode","enter","$slots"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Routable from '../../mixins/routable'\nimport Themeable from '../../mixins/themeable'\n\n// Utilities\nimport { keyCodes } from './../../util/helpers'\nimport mixins from '../../util/mixins'\nimport { ExtractVue } from './../../util/mixins'\n\n// Types\nimport { VNode } from 'vue/types'\n\nconst baseMixins = mixins(\n  Routable,\n  // Must be after routable\n  // to overwrite activeClass\n  GroupableFactory('tabsBar'),\n  Themeable\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n}\n\nexport default baseMixins.extend<options>().extend(\n  /* @vue/component */\n).extend({\n  name: 'v-tab',\n\n  props: {\n    ripple: {\n      type: [Boolean, Object],\n      default: true,\n    },\n  },\n\n  data: () => ({\n    proxyClass: 'v-tab--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-tab': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-tab--disabled': this.disabled,\n        ...this.groupClasses,\n      }\n    },\n    value (): any {\n      let to = this.to || this.href || ''\n\n      if (this.$router &&\n        this.to === Object(this.to)\n      ) {\n        const resolve = this.$router.resolve(\n          this.to,\n          this.$route,\n          this.append\n        )\n\n        to = resolve.href\n      }\n\n      return to.replace('#', '')\n    },\n  },\n\n  methods: {\n    click (e: KeyboardEvent | MouseEvent): void {\n      // Prevent keyboard actions\n      // from children elements\n      // within disabled tabs\n      if (this.disabled) {\n        e.preventDefault()\n        return\n      }\n\n      // If user provides an\n      // actual link, do not\n      // prevent default\n      if (this.href &&\n        this.href.indexOf('#') > -1\n      ) e.preventDefault()\n\n      if (e.detail) this.$el.blur()\n\n      this.$emit('click', e)\n\n      this.to || this.toggle()\n    },\n    toggle () {\n      // VItemGroup treats a change event as a click\n      if (!this.isActive) {\n        this.$emit('change')\n      }\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      'aria-selected': String(this.isActive),\n      role: 'tab',\n      tabindex: 0,\n    }\n    data.on = {\n      ...data.on,\n      keydown: (e: KeyboardEvent) => {\n        if (e.keyCode === keyCodes.enter) this.click(e)\n\n        this.$emit('keydown', e)\n      },\n    }\n\n    return h(tag, data, this.$slots.default)\n  },\n})\n"],"file":"VTab.mjs"}