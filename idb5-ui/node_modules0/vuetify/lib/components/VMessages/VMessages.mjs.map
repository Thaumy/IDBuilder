{"version":3,"sources":["../../../src/components/VMessages/VMessages.tsx"],"names":["VSlideYTransition","makeTransitionProps","MaybeTransition","defineComponent","wrapInArray","computed","VMessages","name","props","active","Boolean","value","type","Array","String","default","transition","component","group","setup","slots","messages","length","map","message","i"],"mappings":";AAAA;AACA,yB,CAEA;;SACSA,iB,oCAET;;SACSC,mB,EAAqBC,e,4CAE9B;;SACSC,e,EAAiBC,W;AAC1B,SAASC,QAAT,QAAyB,KAAzB;AAEA,OAAO,MAAMC,SAAS,GAAGH,eAAe,CAAC;AACvCI,EAAAA,IAAI,EAAE,WADiC;AAGvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC,OADH;AAELC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CAACC,KAAD,EAAQC,MAAR,CADD;AAELC,MAAAA,OAAO,EAAE,MAAO;AAFX,KAFF;AAOL,OAAGd,mBAAmB,CAAC;AACrBe,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAEjB,iBADD;AAEVkB,QAAAA,KAAK,EAAE;AAFG;AADS,KAAD;AAPjB,GAHgC;;AAkBvCC,EAAAA,KAAK,CAAEX,KAAF,QAAoB;AAAA,QAAX;AAAEY,MAAAA;AAAF,KAAW;AACvB,UAAMC,QAAQ,GAAGhB,QAAQ,CAAC,MAAMD,WAAW,CAACI,KAAK,CAACG,KAAP,CAAlB,CAAzB;AAEA,WAAO;AAAA;;AAAA;AAAA,sBAEUH,KAAK,CAACQ,UAFhB;AAAA,eAGC,KAHD;AAAA,iBAIG;AAJH;AAAA,wBAMAK,QAAQ,CAACV,KAAT,CAAeW,MAAf,GAAwB,CAAxB,IAA6Bd,KAAK,CAACC,MAApC,IACAY,QAAQ,CAACV,KAAT,CAAeY,GAAf,CAAmB,CAACC,OAAD,EAAUC,CAAV;AAAA,mBACN,qBADM;AAAA,iBACsBA;AADtB,YAEbD,OAFa,EAAnB,CAPC,EAcDJ,KAdC,sCAcDA,KAAK,CAAEL,OAdN,qBAcD,oBAAAK,KAAK,CAdJ;AAAA;AAAA;AAAA,KAAP;AAiBD;;AAtCsC,CAAD,CAAjC","sourcesContent":["// Styles\nimport './VMessages.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { defineComponent, wrapInArray } from '@/util'\nimport { computed } from 'vue'\n\nexport const VMessages = defineComponent({\n  name: 'VMessages',\n\n  props: {\n    active: Boolean,\n    value: {\n      type: [Array, String],\n      default: () => ([]),\n    },\n\n    ...makeTransitionProps({\n      transition: {\n        component: VSlideYTransition,\n        group: true,\n      },\n    }),\n  },\n\n  setup (props, { slots }) {\n    const messages = computed(() => wrapInArray(props.value))\n\n    return () => (\n      <MaybeTransition\n        transition={ props.transition }\n        tag=\"div\"\n        class=\"v-messages\"\n      >\n        { (messages.value.length > 0 && props.active) && (\n          messages.value.map((message, i) => (\n            <div class=\"v-messages__message\" key={ i }>\n              { message }\n            </div>\n          ))\n        ) }\n\n        { slots?.default?.() }\n      </MaybeTransition>\n    )\n  },\n})\n"],"file":"VMessages.mjs"}