{"version":3,"sources":["../../../src/components/VTooltip/VTooltip.tsx"],"names":["VOverlay","useProxiedModel","makeTransitionProps","computed","genericComponent","getUid","VTooltip","name","inheritAttrs","props","id","String","modelValue","Boolean","text","anchor","type","default","origin","transition","emits","value","setup","attrs","slots","isActive","uid","split","length","activator"],"mappings":";AAAA;AACA,wB,CAEA;;SACSA,Q,iCAET;;SACSC,e;SACAC,mB,4CAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,gB,EAAkBC,M,gCAE3B;;AAKA,OAAO,MAAMC,QAAQ,GAAGF,gBAAgB,GAEnC;AACHG,EAAAA,IAAI,EAAE,UADH;AAGHC,EAAAA,YAAY,EAAE,KAHX;AAKHC,EAAAA,KAAK,EAAE;AACLC,IAAAA,EAAE,EAAEC,MADC;AAELC,IAAAA,UAAU,EAAEC,OAFP;AAGLC,IAAAA,IAAI,EAAEH,MAHD;AAKLI,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEL,MADA;AAENM,MAAAA,OAAO,EAAE;AAFH,KALH;AASLC,IAAAA,MAAM,EAAE;AACNF,MAAAA,IAAI,EAAEL,MADA;AAENM,MAAAA,OAAO,EAAE;AAFH,KATH;AAcL,OAAGf,mBAAmB,CAAC;AACrBiB,MAAAA,UAAU,EAAE;AADS,KAAD;AAdjB,GALJ;AAwBHC,EAAAA,KAAK,EAAE;AACL,yBAAsBC,KAAD,IAAoB;AADpC,GAxBJ;;AA4BHC,EAAAA,KAAK,CAAEb,KAAF,QAA2B;AAAA,QAAlB;AAAEc,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAkB;AAC9B,UAAMC,QAAQ,GAAGxB,eAAe,CAACQ,KAAD,EAAQ,YAAR,CAAhC;AAEA,UAAMiB,GAAG,GAAGrB,MAAM,EAAlB;AACA,UAAMK,EAAE,GAAGP,QAAQ,CAAC,MAAMM,KAAK,CAACC,EAAN,IAAa,aAAYgB,GAAI,EAApC,CAAnB;AAEA,UAAMX,MAAM,GAAGZ,QAAQ,CAAC,MAAM;AAC5B,aAAOM,KAAK,CAACM,MAAN,CAAaY,KAAb,CAAmB,GAAnB,EAAwBC,MAAxB,GAAiC,CAAjC,GACHnB,KAAK,CAACM,MADH,GAEHN,KAAK,CAACM,MAAN,GAAe,SAFnB;AAGD,KAJsB,CAAvB;AAMA,UAAMG,MAAM,GAAGf,QAAQ,CAAC,MAAM;AAC5B,aACEM,KAAK,CAACS,MAAN,KAAiB,MAAjB,IACAT,KAAK,CAACS,MAAN,KAAiB,SADjB,IAEAT,KAAK,CAACS,MAAN,CAAaS,KAAb,CAAmB,GAAnB,EAAwBC,MAAxB,GAAiC,CAFjC,IAGAnB,KAAK,CAACM,MAAN,CAAaY,KAAb,CAAmB,GAAnB,EAAwBC,MAAxB,GAAiC,CAJ5B,GAKHnB,KAAK,CAACS,MALH,GAMHT,KAAK,CAACS,MAAN,GAAe,SANnB;AAOD,KARsB,CAAvB;AAUA,UAAMC,UAAU,GAAGhB,QAAQ,CAAC,MAAM;AAChC,UAAIM,KAAK,CAACU,UAAV,EAAsB,OAAOV,KAAK,CAACU,UAAb;AACtB,aAAOM,QAAQ,CAACJ,KAAT,GAAiB,kBAAjB,GAAsC,iBAA7C;AACD,KAH0B,CAA3B;AAKA,WAAO,MAAM;AAAA;;AACX;AAAA,sBAEcI,QAAQ,CAACJ,KAFvB;AAAA,yCAEcI,QAAQ,CAACJ,KAFvB;AAAA,iBAGW,CACL,WADK,CAHX;AAAA,cAMSX,EAAE,CAACW,KANZ;AAAA,sBAOiBF,UAAU,CAACE,KAP5B;AAAA;AAAA,4BASqB,WATrB;AAAA,0BAUmB,YAVnB;AAAA,kBAWaN,MAAM,CAACM,KAXpB;AAAA,kBAYaH,MAAM,CAACG,KAZpB;AAAA,qBAagB,CAbhB;AAAA,kBAca,EAdb;AAAA,iBAeY,KAfZ;AAAA;AAAA,yBAiBoB,KAjBpB;AAAA;AAAA,gBAmBS,SAnBT;AAAA;AAAA,0BAqBoB;AACd,8BAAoBX,EAAE,CAACW;AADT;AArBpB,SAwBSE,KAxBT;AAAA,6DA6BMC,KAAK,CAACP,OA7BZ,qBA6BM,qBAAAO,KAAK,CA7BX,6BA6B2Bf,KAAK,CAACK,IA7BjC;AA0BMe,QAAAA,SAAS,EAAEL,KAAK,CAACK,SA1BvB;AAAA;AAAA;AAgCD,KAjCD;AAkCD;;AAzFE,CAFmC,CAAjC","sourcesContent":["// Styles\nimport './VTooltip.sass'\n\n// Components\nimport { VOverlay } from '@/components/VOverlay'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, getUid } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { OverlaySlots } from '@/components/VOverlay/VOverlay'\nimport type { StrategyProps } from '@/components/VOverlay/positionStrategies'\n\nexport const VTooltip = genericComponent<new () => {\n  $slots: OverlaySlots\n}>()({\n  name: 'VTooltip',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n    modelValue: Boolean,\n    text: String,\n\n    anchor: {\n      type: String as PropType<StrategyProps['anchor']>,\n      default: 'end',\n    },\n    origin: {\n      type: String as PropType<StrategyProps['origin']>,\n      default: 'auto',\n    },\n\n    ...makeTransitionProps({\n      transition: false,\n    } as const),\n  },\n\n  emits: {\n    'update:modelValue': (value: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const isActive = useProxiedModel(props, 'modelValue')\n\n    const uid = getUid()\n    const id = computed(() => props.id || `v-tooltip-${uid}`)\n\n    const anchor = computed(() => {\n      return props.anchor.split(' ').length > 1\n        ? props.anchor\n        : props.anchor + ' center' as StrategyProps['anchor']\n    })\n\n    const origin = computed(() => {\n      return (\n        props.origin === 'auto' ||\n        props.origin === 'overlap' ||\n        props.origin.split(' ').length > 1 ||\n        props.anchor.split(' ').length > 1\n      ) ? props.origin\n        : props.origin + ' center' as StrategyProps['origin']\n    })\n\n    const transition = computed(() => {\n      if (props.transition) return props.transition\n      return isActive.value ? 'scale-transition' : 'fade-transition'\n    })\n\n    return () => {\n      return (\n        <VOverlay\n          v-model={ isActive.value }\n          class={[\n            'v-tooltip',\n          ]}\n          id={ id.value }\n          transition={ transition.value }\n          absolute\n          positionStrategy=\"connected\"\n          scrollStrategy=\"reposition\"\n          anchor={ anchor.value }\n          origin={ origin.value }\n          min-width={ 0 }\n          offset={ 10 }\n          scrim={ false }\n          persistent\n          open-on-click={ false }\n          open-on-hover\n          role=\"tooltip\"\n          eager\n          activatorProps={{\n            'aria-describedby': id.value,\n          }}\n          { ...attrs }\n          v-slots={{\n            activator: slots.activator,\n          }}\n        >\n          { slots.default?.() ?? props.text }\n        </VOverlay>\n      )\n    }\n  },\n})\n\nexport type VTooltip = InstanceType<typeof VTooltip>\n"],"file":"VTooltip.mjs"}