{"version":3,"sources":["../../../src/components/VCheckbox/VCheckbox.tsx"],"names":["filterInputAttrs","filterInputProps","VInput","VSelectionControl","useProxiedModel","computed","defineComponent","useRender","VCheckbox","name","inheritAttrs","props","indeterminate","Boolean","indeterminateIcon","type","String","default","offIcon","onIcon","modelValue","emits","val","setup","attrs","slots","model","value","onChange","rootAttrs","inputAttrs","rootProps","inputProps","isDisabled","isReadonly","undefined"],"mappings":";AAAA;AACA,yB,CAEA;;SACSA,gB,EAAkBC,gB;SAClBC,M;SACAC,iB,0CAET;;SACSC,e,8CAET;;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,KAA1C;SACSC,S;AAET,OAAO,MAAMC,SAAS,GAAGF,eAAe,CAAC;AACvCG,EAAAA,IAAI,EAAE,WADiC;AAGvCC,EAAAA,YAAY,EAAE,KAHyB;AAKvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAEC,OADV;AAELC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,IAAI,EAAEC,MADW;AAEjBC,MAAAA,OAAO,EAAE;AAFQ,KAFd;AAMLC,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAEC,MADC;AAEPC,MAAAA,OAAO,EAAE;AAFF,KANJ;AAULE,IAAAA,MAAM,EAAE;AACNJ,MAAAA,IAAI,EAAEC,MADA;AAENC,MAAAA,OAAO,EAAE;AAFH,KAVH;AAcLG,IAAAA,UAAU,EAAE;AAdP,GALgC;AAsBvCC,EAAAA,KAAK,EAAE;AACL,4BAAyBC,GAAD,IAAkB,IADrC;AAEL,yBAAsBA,GAAD,IAAc;AAF9B,GAtBgC;;AA2BvCC,EAAAA,KAAK,CAAEZ,KAAF,QAA2B;AAAA,QAAlB;AAAEa,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAkB;AAC9B,UAAMC,KAAK,GAAGtB,eAAe,CAACO,KAAD,EAAQ,YAAR,CAA7B;AACA,UAAMC,aAAa,GAAGR,eAAe,CAACO,KAAD,EAAQ,eAAR,CAArC;AACA,UAAMO,OAAO,GAAGb,QAAQ,CAAC,MAAM;AAC7B,aAAOO,aAAa,CAACe,KAAd,GACHhB,KAAK,CAACG,iBADH,GAEHH,KAAK,CAACO,OAFV;AAGD,KAJuB,CAAxB;AAKA,UAAMC,MAAM,GAAGd,QAAQ,CAAC,MAAM;AAC5B,aAAOO,aAAa,CAACe,KAAd,GACHhB,KAAK,CAACG,iBADH,GAEHH,KAAK,CAACQ,MAFV;AAGD,KAJsB,CAAvB;;AAMA,aAASS,QAAT,GAAqB;AACnB,UAAIhB,aAAa,CAACe,KAAlB,EAAyB;AACvBf,QAAAA,aAAa,CAACe,KAAd,GAAsB,KAAtB;AACD;AACF;;AAEDpB,IAAAA,SAAS,CAAC,MAAM;AACd,YAAM,CAACsB,SAAD,EAAYC,UAAZ,IAA0B9B,gBAAgB,CAACwB,KAAD,CAAhD;AACA,YAAM,CAACO,SAAD,EAAYC,UAAZ,IAA0B/B,gBAAgB,CAAC6B,UAAD,CAAhD;AAEA;AAAA,iBAEU;AAFV,SAGSD,SAHT,EAISE,SAJT,GAKa,EACP,GAAGN,KADI;AAEPR,QAAAA,OAAO,EAAE;AAAA,cAAC;AACRgB,YAAAA,UADQ;AAERC,YAAAA;AAFQ,WAAD;AAAA;AAAA,oBAKA,UALA;AAAA,0BAMKR,KAAK,CAACC,KANX;AAAA,8CAMKD,KAAK,CAACC,KANX,WASiBC,QATjB;AAAA,wBAOMK,UAAU,CAACN,KAPjB;AAAA,wBAQMO,UAAU,CAACP,KARjB;AAAA,uBAUKT,OAAO,CAACS,KAVb;AAAA,sBAWIR,MAAM,CAACQ,KAXX;AAAA,4BAYUf,aAAa,CAACe,KAAd,GAAsB,OAAtB,GAAgCQ;AAZ1C,aAaAH,UAbA;AAAA;AAFF,OALb;AA0BD,KA9BQ,CAAT;AAgCA,WAAO,EAAP;AACD;;AAhFsC,CAAD,CAAjC","sourcesContent":["// Styles\nimport './VCheckbox.sass'\n\n// Components\nimport { filterInputAttrs, filterInputProps } from '@/components/VInput/VInput'\nimport { VInput } from '@/components/VInput'\nimport { VSelectionControl } from '@/components/VSelectionControl'\n\n// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utility\nimport { computed, defineComponent } from 'vue'\nimport { useRender } from '@/util'\n\nexport const VCheckbox = defineComponent({\n  name: 'VCheckbox',\n\n  inheritAttrs: false,\n\n  props: {\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    modelValue: null,\n  },\n\n  emits: {\n    'update:indeterminate': (val: boolean) => true,\n    'update:modelValue': (val: any) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    const offIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.offIcon\n    })\n    const onIcon = computed(() => {\n      return indeterminate.value\n        ? props.indeterminateIcon\n        : props.onIcon\n    })\n\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    useRender(() => {\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [rootProps, inputProps] = filterInputProps(inputAttrs)\n\n      return (\n        <VInput\n          class=\"v-checkbox\"\n          { ...rootAttrs }\n          { ...rootProps }\n          v-slots={{\n            ...slots,\n            default: ({\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VSelectionControl\n                type=\"checkbox\"\n                v-model={ model.value }\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                onUpdate:modelValue={ onChange }\n                offIcon={ offIcon.value }\n                onIcon={ onIcon.value }\n                aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                { ...inputProps }\n              />\n            ),\n          }}\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VCheckbox = InstanceType<typeof VCheckbox>\n"],"file":"VCheckbox.mjs"}