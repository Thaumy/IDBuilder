{"version":3,"sources":["../../../src/components/VSwitch/VSwitch.tsx"],"names":["VSelectionControl","VInput","filterInputAttrs","filterInputProps","defineComponent","ref","useRender","useProxiedModel","VSwitch","name","inheritAttrs","props","indeterminate","Boolean","inset","loading","String","flat","emits","val","setup","attrs","slots","onChange","value","rootAttrs","inputAttrs","rootProps","inputProps","control","onClick","input","click","default","isDisabled","isReadonly","undefined","textColorClasses"],"mappings":";AAAA;AACA,uB,CAEA;;SACSA,iB;SACAC,M;SACAC,gB,EAAkBC,gB,gCAE3B;;AACA,SAASC,eAAT,EAA0BC,GAA1B,QAAqC,KAArC;SACSC,S;SACAC,e;AAET,OAAO,MAAMC,OAAO,GAAGJ,eAAe,CAAC;AACrCK,EAAAA,IAAI,EAAE,SAD+B;AAGrCC,EAAAA,YAAY,EAAE,KAHuB;AAKrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,aAAa,EAAEC,OADV;AAELC,IAAAA,KAAK,EAAED,OAFF;AAGLE,IAAAA,OAAO,EAAE,CAACF,OAAD,EAAUG,MAAV,CAHJ;AAILC,IAAAA,IAAI,EAAEJ;AAJD,GAL8B;AAWrCK,EAAAA,KAAK,EAAE;AACL,4BAAyBC,GAAD,IAAkB;AADrC,GAX8B;;AAerCC,EAAAA,KAAK,CAAET,KAAF,QAA2B;AAAA,QAAlB;AAAEU,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAkB;AAC9B,UAAMV,aAAa,GAAGL,eAAe,CAACI,KAAD,EAAQ,eAAR,CAArC;;AACA,aAASY,QAAT,GAAqB;AACnB,UAAIX,aAAa,CAACY,KAAlB,EAAyB;AACvBZ,QAAAA,aAAa,CAACY,KAAd,GAAsB,KAAtB;AACD;AACF;;AAEDlB,IAAAA,SAAS,CAAC,MAAM;AACd,YAAM,CAACmB,SAAD,EAAYC,UAAZ,IAA0BxB,gBAAgB,CAACmB,KAAD,CAAhD;AACA,YAAM,CAACM,SAAD,EAAYC,UAAZ,IAA0BzB,gBAAgB,CAACuB,UAAD,CAAhD;AACA,YAAMG,OAAO,GAAGxB,GAAG,EAAnB;;AAEA,eAASyB,OAAT,GAAoB;AAAA;;AAClB,0BAAAD,OAAO,CAACL,KAAR,4DAAeO,KAAf,0CAAsBC,KAAtB;AACD;;AAED;AAAA,iBAEW,CACL,UADK,EAEL;AAAE,qCAA2BpB,aAAa,CAACY;AAA3C,SAFK;AAFX,SAMSC,SANT,EAOSE,SAPT,GAQa,EACP,GAAGL,KADI;AAEPW,QAAAA,OAAO,EAAE;AAAA,cAAC;AACRC,YAAAA,UADQ;AAERC,YAAAA;AAFQ,WAAD;AAAA;AAAA,oBAKA,UALA;AAAA,wBAMMD,UAAU,CAACV,KANjB;AAAA,wBAOMW,UAAU,CAACX,KAPjB;AAAA,mCAQiBD,QARjB;AAAA,4BASUX,aAAa,CAACY,KAAd,GAAsB,OAAtB,GAAgCY,SAT1C;AAAA,mBAUCP;AAVD,aAWAD,UAXA,GAYI;AACPK,YAAAA,OAAO,EAAE;AAAA,uBAAkB,iBAAlB;AAAA,yBAA8CH;AAA9C,oCADF;AAEPC,YAAAA,KAAK,EAAE;AAAA,kBAAC;AAAEM,gBAAAA;AAAF,eAAD;AAAA;AAAA,yBAEI,CACL,iBADK,EAELA,gBAAgB,CAACb,KAFZ;AAFJ;AAAA;AAFA,WAZJ;AAAA;AAFF,OARb;AAsCD,KA/CQ,CAAT;AAiDA,WAAO,EAAP;AACD;;AAzEoC,CAAD,CAA/B","sourcesContent":["// Styles\nimport './VSwitch.sass'\n\n// Components\nimport { VSelectionControl } from '@/components/VSelectionControl'\nimport { VInput } from '@/components/VInput'\nimport { filterInputAttrs, filterInputProps } from '@/components/VInput/VInput'\n\n// Utility\nimport { defineComponent, ref } from 'vue'\nimport { useRender } from '@/util'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\nexport const VSwitch = defineComponent({\n  name: 'VSwitch',\n\n  inheritAttrs: false,\n\n  props: {\n    indeterminate: Boolean,\n    inset: Boolean,\n    loading: [Boolean, String],\n    flat: Boolean,\n  },\n  emits: {\n    'update:indeterminate': (val: boolean) => true,\n  },\n\n  setup (props, { attrs, slots }) {\n    const indeterminate = useProxiedModel(props, 'indeterminate')\n    function onChange () {\n      if (indeterminate.value) {\n        indeterminate.value = false\n      }\n    }\n\n    useRender(() => {\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const [rootProps, inputProps] = filterInputProps(inputAttrs)\n      const control = ref<VSelectionControl>()\n\n      function onClick () {\n        control.value?.input?.click()\n      }\n\n      return (\n        <VInput\n          class={[\n            'v-switch',\n            { 'v-switch--indeterminate': indeterminate.value },\n          ]}\n          { ...rootAttrs }\n          { ...rootProps }\n          v-slots={{\n            ...slots,\n            default: ({\n              isDisabled,\n              isReadonly,\n            }) => (\n              <VSelectionControl\n                type=\"checkbox\"\n                disabled={ isDisabled.value }\n                readonly={ isReadonly.value }\n                onUpdate:modelValue={ onChange }\n                aria-checked={ indeterminate.value ? 'mixed' : undefined }\n                ref={ control }\n                { ...inputProps }\n                v-slots={{\n                  default: () => (<div class=\"v-switch__track\" onClick={ onClick }></div>),\n                  input: ({ textColorClasses }) => (\n                    <div\n                      class={[\n                        'v-switch__thumb',\n                        textColorClasses.value,\n                      ]}\n                    />\n                  ),\n                }}\n              />\n            ),\n          }}\n        />\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VSwitch = InstanceType<typeof VSwitch>\n"],"file":"VSwitch.mjs"}