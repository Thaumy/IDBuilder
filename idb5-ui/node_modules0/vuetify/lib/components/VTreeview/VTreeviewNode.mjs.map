{"version":3,"sources":["../../../src/components/VTreeview/VTreeviewNode.ts"],"names":["VExpandTransition","VIcon","inject","RegistrableInject","Colorable","mixins","getObjectValueByPath","createRange","baseMixins","VTreeviewNodeProps","activatable","Boolean","activeClass","type","String","default","color","disablePerNode","expandIcon","indeterminateIcon","itemChildren","itemDisabled","itemKey","itemText","loadChildren","Function","loadingIcon","offIcon","onIcon","openOnClick","rounded","selectable","selectedColor","shaped","transition","selectionType","validator","v","includes","VTreeviewNode","extend","name","treeview","props","level","Number","item","Object","parentIsDisabled","data","hasLoaded","isActive","isIndeterminate","isLoading","isOpen","isSelected","computed","disabled","key","children","filter","child","isExcluded","text","scopedProps","leaf","selected","indeterminate","active","open","computedIcon","hasChildren","length","created","register","beforeDestroy","unregister","methods","checkChildren","Promise","resolve","then","updateOpen","emitOpen","genLabel","$scopedSlots","label","push","$createElement","slot","staticClass","genPrependSlot","prepend","genAppendSlot","append","genContent","genToggle","class","on","click","e","stopPropagation","genCheckbox","undefined","$nextTick","updateSelected","emitSelected","genLevel","map","genNode","unshift","setTextColor","updateActive","emitActive","genChild","scopedSlots","genChildrenWrapper","c","genTransition","render","h","attrs"],"mappings":"AAAA;;AACA;AAEA;SACSA,iB;SACAC,K;AAGT;SACSC,MAAM,IAAIC,iB;OACZC,S,0CAEP;;OACOC,M;SACEC,oB,EAAsBC,W,kCAE/B;;AAMA,MAAMC,UAAU,GAAGH,MAAM,CACvBD,SADuB,EAEvBD,iBAAiB,CAAC,UAAD,CAFM,CAAzB;AASA,OAAO,MAAMM,kBAAkB,GAAG;AAChCC,EAAAA,WAAW,EAAEC,OADmB;AAEhCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,IAAI,EAAEC,MADK;AAEXC,IAAAA,OAAO,EAAE;AAFE,GAFmB;AAMhCC,EAAAA,KAAK,EAAE;AACLH,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,OAAO,EAAE;AAFJ,GANyB;AAUhCE,EAAAA,cAAc,EAAEN,OAVgB;AAWhCO,EAAAA,UAAU,EAAE;AACVL,IAAAA,IAAI,EAAEC,MADI;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAXoB;AAehCI,EAAAA,iBAAiB,EAAE;AACjBN,IAAAA,IAAI,EAAEC,MADW;AAEjBC,IAAAA,OAAO,EAAE;AAFQ,GAfa;AAmBhCK,EAAAA,YAAY,EAAE;AACZP,IAAAA,IAAI,EAAEC,MADM;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAnBkB;AAuBhCM,EAAAA,YAAY,EAAE;AACZR,IAAAA,IAAI,EAAEC,MADM;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAvBkB;AA2BhCO,EAAAA,OAAO,EAAE;AACPT,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GA3BuB;AA+BhCQ,EAAAA,QAAQ,EAAE;AACRV,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,OAAO,EAAE;AAFD,GA/BsB;AAmChCS,EAAAA,YAAY,EAAEC,QAnCkB;AAoChCC,EAAAA,WAAW,EAAE;AACXb,IAAAA,IAAI,EAAEC,MADK;AAEXC,IAAAA,OAAO,EAAE;AAFE,GApCmB;AAwChCY,EAAAA,OAAO,EAAE;AACPd,IAAAA,IAAI,EAAEC,MADC;AAEPC,IAAAA,OAAO,EAAE;AAFF,GAxCuB;AA4ChCa,EAAAA,MAAM,EAAE;AACNf,IAAAA,IAAI,EAAEC,MADA;AAENC,IAAAA,OAAO,EAAE;AAFH,GA5CwB;AAgDhCc,EAAAA,WAAW,EAAElB,OAhDmB;AAiDhCmB,EAAAA,OAAO,EAAEnB,OAjDuB;AAkDhCoB,EAAAA,UAAU,EAAEpB,OAlDoB;AAmDhCqB,EAAAA,aAAa,EAAE;AACbnB,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,OAAO,EAAE;AAFI,GAnDiB;AAuDhCkB,EAAAA,MAAM,EAAEtB,OAvDwB;AAwDhCuB,EAAAA,UAAU,EAAEvB,OAxDoB;AAyDhCwB,EAAAA,aAAa,EAAE;AACbtB,IAAAA,IAAI,EAAEC,MADO;AAEbC,IAAAA,OAAO,EAAE,MAFI;AAGbqB,IAAAA,SAAS,EAAGC,CAAD,IAAe,CAAC,MAAD,EAAS,aAAT,EAAwBC,QAAxB,CAAiCD,CAAjC;AAHb;AAzDiB,CAA3B;AAgEP;;AACA,MAAME,aAAa,GAAG/B,UAAU,CAACgC,MAAX,GAA6BA,MAA7B,CAAoC;AACxDC,EAAAA,IAAI,EAAE,iBADkD;AAGxDvC,EAAAA,MAAM,EAAE;AACNwC,IAAAA,QAAQ,EAAE;AACR3B,MAAAA,OAAO,EAAE;AADD;AADJ,GAHgD;AASxD4B,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC,MADF;AAELC,IAAAA,IAAI,EAAE;AACJjC,MAAAA,IAAI,EAAEkC,MADF;AAEJhC,MAAAA,OAAO,EAAE,MAAM;AAFX,KAFD;AAMLiC,IAAAA,gBAAgB,EAAErC,OANb;AAOL,OAAGF;AAPE,GATiD;AAmBxDwC,EAAAA,IAAI,EAAE,OAAO;AACXC,IAAAA,SAAS,EAAE,KADA;AAEXC,IAAAA,QAAQ,EAAE,KAFC;AAEM;AACjBC,IAAAA,eAAe,EAAE,KAHN;AAGa;AACxBC,IAAAA,SAAS,EAAE,KAJA;AAKXC,IAAAA,MAAM,EAAE,KALG;AAKI;AACfC,IAAAA,UAAU,EAAE,KAND,CAMQ;;AANR,GAAP,CAnBkD;AA4BxDC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,GAAa;AACnB,aACEnD,oBAAoB,CAAC,KAAKwC,IAAN,EAAY,KAAKzB,YAAjB,CAApB,IACC,CAAC,KAAKJ,cAAN,IAAyB,KAAK+B,gBAAL,IAAyB,KAAKb,aAAL,KAAuB,MAF5E;AAID,KANO;;AAORuB,IAAAA,GAAG,GAAY;AACb,aAAOpD,oBAAoB,CAAC,KAAKwC,IAAN,EAAY,KAAKxB,OAAjB,CAA3B;AACD,KATO;;AAURqC,IAAAA,QAAQ,GAAkB;AACxB,YAAMA,QAAQ,GAAGrD,oBAAoB,CAAC,KAAKwC,IAAN,EAAY,KAAK1B,YAAjB,CAArC;AACA,aAAOuC,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAiBC,KAAD,IAAgB,CAAC,KAAKnB,QAAL,CAAcoB,UAAd,CAAyBxD,oBAAoB,CAACuD,KAAD,EAAQ,KAAKvC,OAAb,CAA7C,CAAjC,CAAnB;AACD,KAbO;;AAcRyC,IAAAA,IAAI,GAAY;AACd,aAAOzD,oBAAoB,CAAC,KAAKwC,IAAN,EAAY,KAAKvB,QAAjB,CAA3B;AACD,KAhBO;;AAiBRyC,IAAAA,WAAW,GAAY;AACrB,aAAO;AACLlB,QAAAA,IAAI,EAAE,KAAKA,IADN;AAELmB,QAAAA,IAAI,EAAE,CAAC,KAAKN,QAFP;AAGLO,QAAAA,QAAQ,EAAE,KAAKX,UAHV;AAILY,QAAAA,aAAa,EAAE,KAAKf,eAJf;AAKLgB,QAAAA,MAAM,EAAE,KAAKjB,QALR;AAMLkB,QAAAA,IAAI,EAAE,KAAKf;AANN,OAAP;AAQD,KA1BO;;AA2BRgB,IAAAA,YAAY,GAAY;AACtB,UAAI,KAAKlB,eAAT,EAA0B,OAAO,KAAKjC,iBAAZ,CAA1B,KACK,IAAI,KAAKoC,UAAT,EAAqB,OAAO,KAAK3B,MAAZ,CAArB,KACA,OAAO,KAAKD,OAAZ;AACN,KA/BO;;AAgCR4C,IAAAA,WAAW,GAAa;AACtB,aAAO,CAAC,CAAC,KAAKZ,QAAP,KAAoB,CAAC,CAAC,KAAKA,QAAL,CAAca,MAAhB,IAA0B,CAAC,CAAC,KAAKhD,YAArD,CAAP;AACD;;AAlCO,GA5B8C;;AAiExDiD,EAAAA,OAAO,GAAI;AACT,SAAK/B,QAAL,CAAcgC,QAAd,CAAuB,IAAvB;AACD,GAnEuD;;AAqExDC,EAAAA,aAAa,GAAI;AACf,SAAKjC,QAAL,CAAckC,UAAd,CAAyB,IAAzB;AACD,GAvEuD;;AAyExDC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,GAAmB;AAC9B,aAAO,IAAIC,OAAJ,CAAkBC,OAAO,IAAI;AAClC;AACA;AACA,YAAI,CAAC,KAAKrB,QAAN,IAAkB,KAAKA,QAAL,CAAca,MAAhC,IAA0C,CAAC,KAAKhD,YAAhD,IAAgE,KAAK0B,SAAzE,EAAoF,OAAO8B,OAAO,EAAd;AAEpF,aAAK3B,SAAL,GAAiB,IAAjB;AACA2B,QAAAA,OAAO,CAAC,KAAKxD,YAAL,CAAkB,KAAKsB,IAAvB,CAAD,CAAP;AACD,OAPM,EAOJmC,IAPI,CAOC,MAAM;AACZ,aAAK5B,SAAL,GAAiB,KAAjB;AACA,aAAKH,SAAL,GAAiB,IAAjB;AACD,OAVM,CAAP;AAWD,KAbM;;AAcPmB,IAAAA,IAAI,GAAI;AACN,WAAKf,MAAL,GAAc,CAAC,KAAKA,MAApB;AACA,WAAKZ,QAAL,CAAcwC,UAAd,CAAyB,KAAKxB,GAA9B,EAAmC,KAAKJ,MAAxC;AACA,WAAKZ,QAAL,CAAcyC,QAAd;AACD,KAlBM;;AAmBPC,IAAAA,QAAQ,GAAI;AACV,YAAMzB,QAAQ,GAAG,EAAjB;AAEA,UAAI,KAAK0B,YAAL,CAAkBC,KAAtB,EAA6B3B,QAAQ,CAAC4B,IAAT,CAAc,KAAKF,YAAL,CAAkBC,KAAlB,CAAwB,KAAKtB,WAA7B,CAAd,EAA7B,KACKL,QAAQ,CAAC4B,IAAT,CAAc,KAAKxB,IAAnB;AAEL,aAAO,KAAKyB,cAAL,CAAoB,KAApB,EAA2B;AAChCC,QAAAA,IAAI,EAAE,OAD0B;AAEhCC,QAAAA,WAAW,EAAE;AAFmB,OAA3B,EAGJ/B,QAHI,CAAP;AAID,KA7BM;;AA8BPgC,IAAAA,cAAc,GAAI;AAChB,UAAI,CAAC,KAAKN,YAAL,CAAkBO,OAAvB,EAAgC,OAAO,IAAP;AAEhC,aAAO,KAAKJ,cAAL,CAAoB,KAApB,EAA2B;AAChCE,QAAAA,WAAW,EAAE;AADmB,OAA3B,EAEJ,KAAKL,YAAL,CAAkBO,OAAlB,CAA0B,KAAK5B,WAA/B,CAFI,CAAP;AAGD,KApCM;;AAqCP6B,IAAAA,aAAa,GAAI;AACf,UAAI,CAAC,KAAKR,YAAL,CAAkBS,MAAvB,EAA+B,OAAO,IAAP;AAE/B,aAAO,KAAKN,cAAL,CAAoB,KAApB,EAA2B;AAChCE,QAAAA,WAAW,EAAE;AADmB,OAA3B,EAEJ,KAAKL,YAAL,CAAkBS,MAAlB,CAAyB,KAAK9B,WAA9B,CAFI,CAAP;AAGD,KA3CM;;AA4CP+B,IAAAA,UAAU,GAAI;AACZ,YAAMpC,QAAQ,GAAG,CACf,KAAKgC,cAAL,EADe,EAEf,KAAKP,QAAL,EAFe,EAGf,KAAKS,aAAL,EAHe,CAAjB;AAMA,aAAO,KAAKL,cAAL,CAAoB,KAApB,EAA2B;AAChCE,QAAAA,WAAW,EAAE;AADmB,OAA3B,EAEJ/B,QAFI,CAAP;AAGD,KAtDM;;AAuDPqC,IAAAA,SAAS,GAAI;AACX,aAAO,KAAKR,cAAL,CAAoBvF,KAApB,EAA2B;AAChCyF,QAAAA,WAAW,EAAE,yBADmB;AAEhCO,QAAAA,KAAK,EAAE;AACL,2CAAiC,KAAK3C,MADjC;AAEL,8CAAoC,KAAKD;AAFpC,SAFyB;AAMhCoC,QAAAA,IAAI,EAAE,SAN0B;AAOhCS,QAAAA,EAAE,EAAE;AACFC,UAAAA,KAAK,EAAGC,CAAD,IAAmB;AACxBA,YAAAA,CAAC,CAACC,eAAF;AAEA,gBAAI,KAAKhD,SAAT,EAAoB;AAEpB,iBAAKyB,aAAL,GAAqBG,IAArB,CAA0B,MAAM,KAAKZ,IAAL,EAAhC;AACD;AAPC;AAP4B,OAA3B,EAgBJ,CAAC,KAAKhB,SAAL,GAAiB,KAAK3B,WAAtB,GAAoC,KAAKR,UAA1C,CAhBI,CAAP;AAiBD,KAzEM;;AA0EPoF,IAAAA,WAAW,GAAI;AACb,aAAO,KAAKd,cAAL,CAAoBvF,KAApB,EAA2B;AAChCyF,QAAAA,WAAW,EAAE,2BADmB;AAEhC/C,QAAAA,KAAK,EAAE;AACL3B,UAAAA,KAAK,EAAE,KAAKuC,UAAL,IAAmB,KAAKH,eAAxB,GAA0C,KAAKpB,aAA/C,GAA+DuE,SADjE;AAEL9C,UAAAA,QAAQ,EAAE,KAAKA;AAFV,SAFyB;AAMhCyC,QAAAA,EAAE,EAAE;AACFC,UAAAA,KAAK,EAAGC,CAAD,IAAmB;AACxBA,YAAAA,CAAC,CAACC,eAAF;AAEA,gBAAI,KAAKhD,SAAT,EAAoB;AAEpB,iBAAKyB,aAAL,GAAqBG,IAArB,CAA0B,MAAM;AAC9B;AACA,mBAAKuB,SAAL,CAAe,MAAM;AACnB,qBAAKjD,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACA,qBAAKH,eAAL,GAAuB,KAAvB;AAEA,qBAAKV,QAAL,CAAc+D,cAAd,CAA6B,KAAK/C,GAAlC,EAAuC,KAAKH,UAA5C;AACA,qBAAKb,QAAL,CAAcgE,YAAd;AACD,eAND;AAOD,aATD;AAUD;AAhBC;AAN4B,OAA3B,EAwBJ,CAAC,KAAKpC,YAAN,CAxBI,CAAP;AAyBD,KApGM;;AAqGPqC,IAAAA,QAAQ,CAAE/D,KAAF,EAAiB;AACvB,aAAOrC,WAAW,CAACqC,KAAD,CAAX,CAAmBgE,GAAnB,CAAuB,MAAM,KAAKpB,cAAL,CAAoB,KAApB,EAA2B;AAC7DE,QAAAA,WAAW,EAAE;AADgD,OAA3B,CAA7B,CAAP;AAGD,KAzGM;;AA0GPmB,IAAAA,OAAO,GAAI;AACT,YAAMlD,QAAQ,GAAG,CAAC,KAAKoC,UAAL,EAAD,CAAjB;AAEA,UAAI,KAAKhE,UAAT,EAAqB4B,QAAQ,CAACmD,OAAT,CAAiB,KAAKR,WAAL,EAAjB;;AAErB,UAAI,KAAK/B,WAAT,EAAsB;AACpBZ,QAAAA,QAAQ,CAACmD,OAAT,CAAiB,KAAKd,SAAL,EAAjB;AACD,OAFD,MAEO;AACLrC,QAAAA,QAAQ,CAACmD,OAAT,CAAiB,GAAG,KAAKH,QAAL,CAAc,CAAd,CAApB;AACD;;AAEDhD,MAAAA,QAAQ,CAACmD,OAAT,CAAiB,GAAG,KAAKH,QAAL,CAAc,KAAK/D,KAAnB,CAApB;AAEA,aAAO,KAAK4C,cAAL,CAAoB,KAApB,EAA2B,KAAKuB,YAAL,CAAkB,KAAK5D,QAAL,IAAiB,KAAKnC,KAAxC,EAA+C;AAC/E0E,QAAAA,WAAW,EAAE,uBADkE;AAE/EO,QAAAA,KAAK,EAAE;AACL,WAAC,KAAKrF,WAAN,GAAoB,KAAKuC;AADpB,SAFwE;AAK/E+C,QAAAA,EAAE,EAAE;AACFC,UAAAA,KAAK,EAAE,MAAM;AACX,gBAAI,KAAKtE,WAAL,IAAoB,KAAK0C,WAA7B,EAA0C;AACxC,mBAAKO,aAAL,GAAqBG,IAArB,CAA0B,KAAKZ,IAA/B;AACD,aAFD,MAEO,IAAI,KAAK3D,WAAL,IAAoB,CAAC,KAAK+C,QAA9B,EAAwC;AAC7C,mBAAKN,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA,mBAAKT,QAAL,CAAcsE,YAAd,CAA2B,KAAKtD,GAAhC,EAAqC,KAAKP,QAA1C;AACA,mBAAKT,QAAL,CAAcuE,UAAd;AACD;AACF;AATC;AAL2E,OAA/C,CAA3B,EAgBHtD,QAhBG,CAAP;AAiBD,KAxIM;;AAyIPuD,IAAAA,QAAQ,CAAEpE,IAAF,EAAaE,gBAAb,EAAwC;AAC9C,aAAO,KAAKwC,cAAL,CAAoBjD,aAApB,EAAmC;AACxCmB,QAAAA,GAAG,EAAEpD,oBAAoB,CAACwC,IAAD,EAAO,KAAKxB,OAAZ,CADe;AAExCqB,QAAAA,KAAK,EAAE;AACLjC,UAAAA,WAAW,EAAE,KAAKA,WADb;AAELE,UAAAA,WAAW,EAAE,KAAKA,WAFb;AAGLkC,UAAAA,IAHK;AAILf,UAAAA,UAAU,EAAE,KAAKA,UAJZ;AAKLC,UAAAA,aAAa,EAAE,KAAKA,aALf;AAMLhB,UAAAA,KAAK,EAAE,KAAKA,KANP;AAOLC,UAAAA,cAAc,EAAE,KAAKA,cAPhB;AAQLC,UAAAA,UAAU,EAAE,KAAKA,UARZ;AASLC,UAAAA,iBAAiB,EAAE,KAAKA,iBATnB;AAULQ,UAAAA,OAAO,EAAE,KAAKA,OAVT;AAWLC,UAAAA,MAAM,EAAE,KAAKA,MAXR;AAYLF,UAAAA,WAAW,EAAE,KAAKA,WAZb;AAaLJ,UAAAA,OAAO,EAAE,KAAKA,OAbT;AAcLC,UAAAA,QAAQ,EAAE,KAAKA,QAdV;AAeLF,UAAAA,YAAY,EAAE,KAAKA,YAfd;AAgBLD,UAAAA,YAAY,EAAE,KAAKA,YAhBd;AAiBLI,UAAAA,YAAY,EAAE,KAAKA,YAjBd;AAkBLU,UAAAA,UAAU,EAAE,KAAKA,UAlBZ;AAmBLL,UAAAA,WAAW,EAAE,KAAKA,WAnBb;AAoBLC,UAAAA,OAAO,EAAE,KAAKA,OApBT;AAqBLG,UAAAA,MAAM,EAAE,KAAKA,MArBR;AAsBLW,UAAAA,KAAK,EAAE,KAAKA,KAAL,GAAa,CAtBf;AAuBLT,UAAAA,aAAa,EAAE,KAAKA,aAvBf;AAwBLa,UAAAA;AAxBK,SAFiC;AA4BxCmE,QAAAA,WAAW,EAAE,KAAK9B;AA5BsB,OAAnC,CAAP;AA8BD,KAxKM;;AAyKP+B,IAAAA,kBAAkB,GAAI;AACpB,UAAI,CAAC,KAAK9D,MAAN,IAAgB,CAAC,KAAKK,QAA1B,EAAoC,OAAO,IAAP;AAEpC,YAAMA,QAAQ,GAAG,CAAC,KAAKA,QAAL,CAAciD,GAAd,CAAkBS,CAAC,IAAI,KAAKH,QAAL,CAAcG,CAAd,EAAiB,KAAK5D,QAAtB,CAAvB,CAAD,CAAjB;AAEA,aAAO,KAAK+B,cAAL,CAAoB,KAApB,EAA2B;AAChCE,QAAAA,WAAW,EAAE;AADmB,OAA3B,EAEJ/B,QAFI,CAAP;AAGD,KAjLM;;AAkLP2D,IAAAA,aAAa,GAAI;AACf,aAAO,KAAK9B,cAAL,CAAoBxF,iBAApB,EAAuC,CAAC,KAAKoH,kBAAL,EAAD,CAAvC,CAAP;AACD;;AApLM,GAzE+C;;AAgQxDG,EAAAA,MAAM,CAAEC,CAAF,EAAY;AAChB,UAAM7D,QAAuB,GAAG,CAAC,KAAKkD,OAAL,EAAD,CAAhC;AAEA,QAAI,KAAK3E,UAAT,EAAqByB,QAAQ,CAAC4B,IAAT,CAAc,KAAK+B,aAAL,EAAd,EAArB,KACK3D,QAAQ,CAAC4B,IAAT,CAAc,KAAK6B,kBAAL,EAAd;AAEL,WAAOI,CAAC,CAAC,KAAD,EAAQ;AACd9B,MAAAA,WAAW,EAAE,iBADC;AAEdO,MAAAA,KAAK,EAAE;AACL,iCAAyB,CAAC,KAAK1B,WAD1B;AAEL,kCAA0B,KAAK1C,WAF1B;AAGL,qCAA6B,KAAK4B,QAH7B;AAIL,oCAA4B,KAAK3B,OAJ5B;AAKL,mCAA2B,KAAKG,MAL3B;AAML,qCAA6B,KAAKsB;AAN7B,OAFO;AAUdkE,MAAAA,KAAK,EAAE;AACL,yBAAiB3G,MAAM,CAAC,KAAKwC,MAAN;AADlB;AAVO,KAAR,EAaLK,QAbK,CAAR;AAcD;;AApRuD,CAApC,CAAtB;AAuRA,eAAepB,aAAf","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Components\nimport { VExpandTransition } from '../transitions'\nimport { VIcon } from '../VIcon'\nimport VTreeview from './VTreeview'\n\n// Mixins\nimport { inject as RegistrableInject } from '../../mixins/registrable'\nimport Colorable from '../../mixins/colorable'\n\n// Utils\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { getObjectValueByPath, createRange } from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeChildren, PropType } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\ntype VTreeViewInstance = InstanceType<typeof VTreeview>\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject('treeview')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  treeview: VTreeViewInstance\n}\n\nexport const VTreeviewNodeProps = {\n  activatable: Boolean,\n  activeClass: {\n    type: String,\n    default: 'v-treeview-node--active',\n  },\n  color: {\n    type: String,\n    default: 'primary',\n  },\n  disablePerNode: Boolean,\n  expandIcon: {\n    type: String,\n    default: '$subgroup',\n  },\n  indeterminateIcon: {\n    type: String,\n    default: '$checkboxIndeterminate',\n  },\n  itemChildren: {\n    type: String,\n    default: 'children',\n  },\n  itemDisabled: {\n    type: String,\n    default: 'disabled',\n  },\n  itemKey: {\n    type: String,\n    default: 'id',\n  },\n  itemText: {\n    type: String,\n    default: 'name',\n  },\n  loadChildren: Function as PropType<(item: any) => Promise<void>>,\n  loadingIcon: {\n    type: String,\n    default: '$loading',\n  },\n  offIcon: {\n    type: String,\n    default: '$checkboxOff',\n  },\n  onIcon: {\n    type: String,\n    default: '$checkboxOn',\n  },\n  openOnClick: Boolean,\n  rounded: Boolean,\n  selectable: Boolean,\n  selectedColor: {\n    type: String,\n    default: 'accent',\n  },\n  shaped: Boolean,\n  transition: Boolean,\n  selectionType: {\n    type: String as PropType<'leaf' | 'independent'>,\n    default: 'leaf',\n    validator: (v: string) => ['leaf', 'independent'].includes(v),\n  },\n}\n\n/* @vue/component */\nconst VTreeviewNode = baseMixins.extend<options>().extend({\n  name: 'v-treeview-node',\n\n  inject: {\n    treeview: {\n      default: null,\n    },\n  },\n\n  props: {\n    level: Number,\n    item: {\n      type: Object,\n      default: () => null,\n    } as PropValidator<Record<string, unknown> | null>,\n    parentIsDisabled: Boolean,\n    ...VTreeviewNodeProps,\n  },\n\n  data: () => ({\n    hasLoaded: false,\n    isActive: false, // Node is selected (row)\n    isIndeterminate: false, // Node has at least one selected child\n    isLoading: false,\n    isOpen: false, // Node is open/expanded\n    isSelected: false, // Node is selected (checkbox)\n  }),\n\n  computed: {\n    disabled (): boolean {\n      return (\n        getObjectValueByPath(this.item, this.itemDisabled) ||\n        (!this.disablePerNode && (this.parentIsDisabled && this.selectionType === 'leaf'))\n      )\n    },\n    key (): string {\n      return getObjectValueByPath(this.item, this.itemKey)\n    },\n    children (): any[] | null {\n      const children = getObjectValueByPath(this.item, this.itemChildren)\n      return children && children.filter((child: any) => !this.treeview.isExcluded(getObjectValueByPath(child, this.itemKey)))\n    },\n    text (): string {\n      return getObjectValueByPath(this.item, this.itemText)\n    },\n    scopedProps (): object {\n      return {\n        item: this.item,\n        leaf: !this.children,\n        selected: this.isSelected,\n        indeterminate: this.isIndeterminate,\n        active: this.isActive,\n        open: this.isOpen,\n      }\n    },\n    computedIcon (): string {\n      if (this.isIndeterminate) return this.indeterminateIcon\n      else if (this.isSelected) return this.onIcon\n      else return this.offIcon\n    },\n    hasChildren (): boolean {\n      return !!this.children && (!!this.children.length || !!this.loadChildren)\n    },\n  },\n\n  created () {\n    this.treeview.register(this)\n  },\n\n  beforeDestroy () {\n    this.treeview.unregister(this)\n  },\n\n  methods: {\n    checkChildren (): Promise<void> {\n      return new Promise<void>(resolve => {\n        // TODO: Potential issue with always trying\n        // to load children if response is empty?\n        if (!this.children || this.children.length || !this.loadChildren || this.hasLoaded) return resolve()\n\n        this.isLoading = true\n        resolve(this.loadChildren(this.item))\n      }).then(() => {\n        this.isLoading = false\n        this.hasLoaded = true\n      })\n    },\n    open () {\n      this.isOpen = !this.isOpen\n      this.treeview.updateOpen(this.key, this.isOpen)\n      this.treeview.emitOpen()\n    },\n    genLabel () {\n      const children = []\n\n      if (this.$scopedSlots.label) children.push(this.$scopedSlots.label(this.scopedProps))\n      else children.push(this.text)\n\n      return this.$createElement('div', {\n        slot: 'label',\n        staticClass: 'v-treeview-node__label',\n      }, children)\n    },\n    genPrependSlot () {\n      if (!this.$scopedSlots.prepend) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__prepend',\n      }, this.$scopedSlots.prepend(this.scopedProps))\n    },\n    genAppendSlot () {\n      if (!this.$scopedSlots.append) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__append',\n      }, this.$scopedSlots.append(this.scopedProps))\n    },\n    genContent () {\n      const children = [\n        this.genPrependSlot(),\n        this.genLabel(),\n        this.genAppendSlot(),\n      ]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__content',\n      }, children)\n    },\n    genToggle () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__toggle',\n        class: {\n          'v-treeview-node__toggle--open': this.isOpen,\n          'v-treeview-node__toggle--loading': this.isLoading,\n        },\n        slot: 'prepend',\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => this.open())\n          },\n        },\n      }, [this.isLoading ? this.loadingIcon : this.expandIcon])\n    },\n    genCheckbox () {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-treeview-node__checkbox',\n        props: {\n          color: this.isSelected || this.isIndeterminate ? this.selectedColor : undefined,\n          disabled: this.disabled,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            e.stopPropagation()\n\n            if (this.isLoading) return\n\n            this.checkChildren().then(() => {\n              // We nextTick here so that items watch in VTreeview has a chance to run first\n              this.$nextTick(() => {\n                this.isSelected = !this.isSelected\n                this.isIndeterminate = false\n\n                this.treeview.updateSelected(this.key, this.isSelected)\n                this.treeview.emitSelected()\n              })\n            })\n          },\n        },\n      }, [this.computedIcon])\n    },\n    genLevel (level: number) {\n      return createRange(level).map(() => this.$createElement('div', {\n        staticClass: 'v-treeview-node__level',\n      }))\n    },\n    genNode () {\n      const children = [this.genContent()]\n\n      if (this.selectable) children.unshift(this.genCheckbox())\n\n      if (this.hasChildren) {\n        children.unshift(this.genToggle())\n      } else {\n        children.unshift(...this.genLevel(1))\n      }\n\n      children.unshift(...this.genLevel(this.level))\n\n      return this.$createElement('div', this.setTextColor(this.isActive && this.color, {\n        staticClass: 'v-treeview-node__root',\n        class: {\n          [this.activeClass]: this.isActive,\n        },\n        on: {\n          click: () => {\n            if (this.openOnClick && this.hasChildren) {\n              this.checkChildren().then(this.open)\n            } else if (this.activatable && !this.disabled) {\n              this.isActive = !this.isActive\n              this.treeview.updateActive(this.key, this.isActive)\n              this.treeview.emitActive()\n            }\n          },\n        },\n      }), children)\n    },\n    genChild (item: any, parentIsDisabled: boolean) {\n      return this.$createElement(VTreeviewNode, {\n        key: getObjectValueByPath(item, this.itemKey),\n        props: {\n          activatable: this.activatable,\n          activeClass: this.activeClass,\n          item,\n          selectable: this.selectable,\n          selectedColor: this.selectedColor,\n          color: this.color,\n          disablePerNode: this.disablePerNode,\n          expandIcon: this.expandIcon,\n          indeterminateIcon: this.indeterminateIcon,\n          offIcon: this.offIcon,\n          onIcon: this.onIcon,\n          loadingIcon: this.loadingIcon,\n          itemKey: this.itemKey,\n          itemText: this.itemText,\n          itemDisabled: this.itemDisabled,\n          itemChildren: this.itemChildren,\n          loadChildren: this.loadChildren,\n          transition: this.transition,\n          openOnClick: this.openOnClick,\n          rounded: this.rounded,\n          shaped: this.shaped,\n          level: this.level + 1,\n          selectionType: this.selectionType,\n          parentIsDisabled,\n        },\n        scopedSlots: this.$scopedSlots,\n      })\n    },\n    genChildrenWrapper () {\n      if (!this.isOpen || !this.children) return null\n\n      const children = [this.children.map(c => this.genChild(c, this.disabled))]\n\n      return this.$createElement('div', {\n        staticClass: 'v-treeview-node__children',\n      }, children)\n    },\n    genTransition () {\n      return this.$createElement(VExpandTransition, [this.genChildrenWrapper()])\n    },\n  },\n\n  render (h): VNode {\n    const children: VNodeChildren = [this.genNode()]\n\n    if (this.transition) children.push(this.genTransition())\n    else children.push(this.genChildrenWrapper())\n\n    return h('div', {\n      staticClass: 'v-treeview-node',\n      class: {\n        'v-treeview-node--leaf': !this.hasChildren,\n        'v-treeview-node--click': this.openOnClick,\n        'v-treeview-node--disabled': this.disabled,\n        'v-treeview-node--rounded': this.rounded,\n        'v-treeview-node--shaped': this.shaped,\n        'v-treeview-node--selected': this.isSelected,\n      },\n      attrs: {\n        'aria-expanded': String(this.isOpen),\n      },\n    }, children)\n  },\n})\n\nexport default VTreeviewNode\n"],"file":"VTreeviewNode.mjs"}