{"version":3,"sources":["../../../src/components/VParallax/VParallax.tsx"],"names":["VImg","useIntersectionObserver","onBeforeUnmount","ref","watch","watchEffect","defineComponent","getScrollParent","floor","val","Math","abs","sign","VParallax","name","props","scale","type","Number","String","default","setup","attrs","slots","root","intersectionRef","isIntersecting","value","$el","scrollParent","document","scrollingElement","addEventListener","onScroll","passive","removeEventListener","frame","cancelAnimationFrame","requestAnimationFrame","el","querySelector","rect","getBoundingClientRect","scrollHeight","clientHeight","window","innerHeight","scrollPos","scrollTop","scrollY","top","progress","height","translate","style","setProperty"],"mappings":"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","sourcesContent":["// Styles\nimport './VParallax.sass'\n\n// Components\nimport { VImg } from '@/components/VImg'\n\n// Composables\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\n\n// Utilities\nimport { onBeforeUnmount, ref, watch, watchEffect } from 'vue'\nimport { defineComponent, getScrollParent } from '@/util'\n\nfunction floor (val: number) {\n  return Math.floor(Math.abs(val)) * Math.sign(val)\n}\n\nexport const VParallax = defineComponent({\n  name: 'VParallax',\n\n  props: {\n    scale: {\n      type: [Number, String],\n      default: 1.3,\n    },\n  },\n\n  setup (props, { attrs, slots }) {\n    const root = ref<VImg>()\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    watchEffect(() => {\n      intersectionRef.value = root.value?.$el\n    })\n\n    let scrollParent: Element\n    watch(isIntersecting, val => {\n      if (val) {\n        scrollParent = getScrollParent(intersectionRef.value)\n        scrollParent = scrollParent === document.scrollingElement ? document as any : scrollParent\n        scrollParent.addEventListener('scroll', onScroll, { passive: true })\n        onScroll()\n      } else {\n        scrollParent.removeEventListener('scroll', onScroll)\n      }\n    })\n\n    onBeforeUnmount(() => {\n      scrollParent?.removeEventListener('scroll', onScroll)\n    })\n\n    let frame = -1\n    function onScroll () {\n      if (!isIntersecting.value) return\n\n      cancelAnimationFrame(frame)\n      frame = requestAnimationFrame(() => {\n        const el: HTMLElement | null = (root.value?.$el as Element).querySelector('.v-img__img')\n        if (!el) return\n\n        const rect = intersectionRef.value!.getBoundingClientRect()\n        const scrollHeight = scrollParent.clientHeight ?? window.innerHeight\n        const scrollPos = scrollParent.scrollTop ?? window.scrollY\n        const top = rect.top + scrollPos\n        const progress = (scrollPos + scrollHeight - top) / (rect.height + scrollHeight)\n        const translate = floor((rect.height * +props.scale - rect.height) * (-progress + 0.5))\n\n        el.style.setProperty('transform', `translateY(${translate}px) scale(${props.scale})`)\n      })\n    }\n\n    return () => (\n      <VImg\n        class={[\n          'v-parallax',\n          { 'v-parallax--active': isIntersecting.value },\n        ]}\n        ref={ root }\n        cover\n        onLoadstart={ onScroll }\n        onLoad={ onScroll }\n        v-slots={ slots }\n      />\n    )\n  },\n})\n\nexport type VParallax = InstanceType<typeof VParallax>\n"],"file":"VParallax.mjs"}