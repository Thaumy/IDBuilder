{"version":3,"sources":["../../../src/components/VColorPicker/VColorPickerCanvas.ts"],"names":["clamp","convertToUnit","fromHSVA","fromRGBA","Vue","extend","name","props","color","type","Object","default","r","g","b","a","disabled","Boolean","dotSize","Number","String","height","width","data","boundingRect","left","top","computed","dot","x","y","hsva","s","parseInt","v","watch","mounted","updateCanvas","methods","emitColor","$emit","h","hue","alpha","canvas","$refs","ctx","getContext","saturationGradient","createLinearGradient","addColorStop","fillStyle","fillRect","valueGradient","handleClick","e","$el","getBoundingClientRect","clientX","clientY","handleMouseDown","preventDefault","window","addEventListener","handleMouseMove","handleMouseUp","removeEventListener","genCanvas","$createElement","ref","attrs","genDot","radius","staticClass","class","style","transform","render","on","click","mousedown"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VColorPickerCanvas.sass'\n\n// Helpers\nimport { clamp, convertToUnit } from '../../util/helpers'\nimport { fromHSVA, VColorPickerColor, fromRGBA } from './util'\n\n// Types\nimport Vue, { VNode, PropType } from 'vue'\n\nexport default Vue.extend({\n  name: 'v-color-picker-canvas',\n\n  props: {\n    color: {\n      type: Object as PropType<VColorPickerColor>,\n      default: () => fromRGBA({ r: 255, g: 0, b: 0, a: 1 }),\n    },\n    disabled: Boolean,\n    dotSize: {\n      type: [Number, String],\n      default: 10,\n    },\n    height: {\n      type: [Number, String],\n      default: 150,\n    },\n    width: {\n      type: [Number, String],\n      default: 300,\n    },\n  },\n\n  data () {\n    return {\n      boundingRect: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0,\n      } as ClientRect,\n    }\n  },\n\n  computed: {\n    dot (): { x: number, y: number} {\n      if (!this.color) return { x: 0, y: 0 }\n\n      return {\n        x: this.color.hsva.s * parseInt(this.width, 10),\n        y: (1 - this.color.hsva.v) * parseInt(this.height, 10),\n      }\n    },\n  },\n\n  watch: {\n    'color.hue': 'updateCanvas',\n  },\n\n  mounted () {\n    this.updateCanvas()\n  },\n\n  methods: {\n    emitColor (x: number, y: number) {\n      const { left, top, width, height } = this.boundingRect\n\n      this.$emit('update:color', fromHSVA({\n        h: this.color.hue,\n        s: clamp(x - left, 0, width) / width,\n        v: 1 - clamp(y - top, 0, height) / height,\n        a: this.color.alpha,\n      }))\n    },\n    updateCanvas () {\n      if (!this.color) return\n\n      const canvas = this.$refs.canvas as HTMLCanvasElement\n      const ctx = canvas.getContext('2d')\n\n      if (!ctx) return\n\n      const saturationGradient = ctx.createLinearGradient(0, 0, canvas.width, 0)\n      saturationGradient.addColorStop(0, 'hsla(0, 0%, 100%, 1)') // white\n      saturationGradient.addColorStop(1, `hsla(${this.color.hue}, 100%, 50%, 1)`)\n      ctx.fillStyle = saturationGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n\n      const valueGradient = ctx.createLinearGradient(0, 0, 0, canvas.height)\n      valueGradient.addColorStop(0, 'hsla(0, 0%, 100%, 0)') // transparent\n      valueGradient.addColorStop(1, 'hsla(0, 0%, 0%, 1)') // black\n      ctx.fillStyle = valueGradient\n      ctx.fillRect(0, 0, canvas.width, canvas.height)\n    },\n    handleClick (e: MouseEvent) {\n      if (this.disabled) return\n\n      this.boundingRect = this.$el.getBoundingClientRect()\n      this.emitColor(e.clientX, e.clientY)\n    },\n    handleMouseDown (e: MouseEvent) {\n      // To prevent selection while moving cursor\n      e.preventDefault()\n\n      if (this.disabled) return\n\n      this.boundingRect = this.$el.getBoundingClientRect()\n\n      window.addEventListener('mousemove', this.handleMouseMove)\n      window.addEventListener('mouseup', this.handleMouseUp)\n    },\n    handleMouseMove (e: MouseEvent) {\n      if (this.disabled) return\n\n      this.emitColor(e.clientX, e.clientY)\n    },\n    handleMouseUp () {\n      window.removeEventListener('mousemove', this.handleMouseMove)\n      window.removeEventListener('mouseup', this.handleMouseUp)\n    },\n    genCanvas (): VNode {\n      return this.$createElement('canvas', {\n        ref: 'canvas',\n        attrs: {\n          width: this.width,\n          height: this.height,\n        },\n      })\n    },\n    genDot (): VNode {\n      const radius = parseInt(this.dotSize, 10) / 2\n      const x = convertToUnit(this.dot.x - radius)\n      const y = convertToUnit(this.dot.y - radius)\n\n      return this.$createElement('div', {\n        staticClass: 'v-color-picker__canvas-dot',\n        class: {\n          'v-color-picker__canvas-dot--disabled': this.disabled,\n        },\n        style: {\n          width: convertToUnit(this.dotSize),\n          height: convertToUnit(this.dotSize),\n          transform: `translate(${x}, ${y})`,\n        },\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-color-picker__canvas',\n      style: {\n        width: convertToUnit(this.width),\n        height: convertToUnit(this.height),\n      },\n      on: {\n        click: this.handleClick,\n        mousedown: this.handleMouseDown,\n      },\n    }, [\n      this.genCanvas(),\n      this.genDot(),\n    ])\n  },\n})\n"],"file":"VColorPickerCanvas.mjs"}