{"version":3,"sources":["../../../../src/components/VColorPicker/util/index.ts"],"names":["HSVAtoRGBA","HSVAtoHex","RGBAtoHSVA","HexToHSVA","HSVAtoHSLA","RGBAtoHex","HSLAtoHSVA","parseHex","fromHSVA","hsva","hexa","hsla","rgba","alpha","a","hex","substr","hue","h","fromHSLA","fromRGBA","fromHexa","fromHex","has","obj","key","every","k","hasOwnProperty","parseColor","color","oldColor","r","g","b","parseFloat","stripAlpha","rest","extractColor","input","length","shouldStrip","hasAlpha"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Utilities\nimport {\n  HSVA,\n  HSVAtoRGBA,\n  HSVAtoHex,\n  RGBA,\n  Hex,\n  RGBAtoHSVA,\n  HexToHSVA,\n  HSLA,\n  HSVAtoHSLA,\n  RGBAtoHex,\n  HSLAtoHSVA,\n  parseHex,\n  Hexa,\n} from '../../../util/colorUtils'\n\nexport interface VColorPickerColor {\n  alpha: number\n  hex: Hex\n  hexa: Hexa\n  hsla: HSLA\n  hsva: HSVA\n  hue: number\n  rgba: RGBA\n}\n\nexport function fromHSVA (hsva: HSVA): VColorPickerColor {\n  hsva = { ...hsva }\n  const hexa = HSVAtoHex(hsva)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHSLA (hsla: HSLA): VColorPickerColor {\n  const hsva = HSLAtoHSVA(hsla)\n  const hexa = HSVAtoHex(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromRGBA (rgba: RGBA): VColorPickerColor {\n  const hsva = RGBAtoHSVA(rgba)\n  const hexa = RGBAtoHex(rgba)\n  const hsla = HSVAtoHSLA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHexa (hexa: Hexa): VColorPickerColor {\n  const hsva = HexToHSVA(hexa)\n  const hsla = HSVAtoHSLA(hsva)\n  const rgba = HSVAtoRGBA(hsva)\n  return {\n    alpha: hsva.a,\n    hex: hexa.substr(0, 7),\n    hexa,\n    hsla,\n    hsva,\n    hue: hsva.h,\n    rgba,\n  }\n}\n\nexport function fromHex (hex: Hex): VColorPickerColor {\n  return fromHexa(parseHex(hex))\n}\n\nfunction has (obj: object, key: string[]) {\n  return key.every(k => obj.hasOwnProperty(k))\n}\n\nexport function parseColor (color: any, oldColor: VColorPickerColor | null) {\n  if (!color) return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n\n  if (typeof color === 'string') {\n    if (color === 'transparent') return fromHexa('#00000000')\n\n    const hex = parseHex(color)\n\n    if (oldColor && hex === oldColor.hexa) return oldColor\n    else return fromHexa(hex)\n  }\n\n  if (typeof color === 'object') {\n    if (color.hasOwnProperty('alpha')) return color\n\n    const a = color.hasOwnProperty('a') ? parseFloat(color.a) : 1\n\n    if (has(color, ['r', 'g', 'b'])) {\n      if (oldColor && color === oldColor.rgba) return oldColor\n      else return fromRGBA({ ...color, a })\n    } else if (has(color, ['h', 's', 'l'])) {\n      if (oldColor && color === oldColor.hsla) return oldColor\n      else return fromHSLA({ ...color, a })\n    } else if (has(color, ['h', 's', 'v'])) {\n      if (oldColor && color === oldColor.hsva) return oldColor\n      else return fromHSVA({ ...color, a })\n    }\n  }\n\n  return fromRGBA({ r: 255, g: 0, b: 0, a: 1 })\n}\n\nfunction stripAlpha (color: any, stripAlpha: boolean) {\n  if (stripAlpha) {\n    const { a, ...rest } = color\n\n    return rest\n  }\n\n  return color\n}\n\nexport function extractColor (color: VColorPickerColor, input: any) {\n  if (input == null) return color\n\n  if (typeof input === 'string') {\n    return input.length === 7 ? color.hex : color.hexa\n  }\n\n  if (typeof input === 'object') {\n    const shouldStrip = typeof input.a === 'number' && input.a === 0 ? !!input.a : !input.a\n    if (has(input, ['r', 'g', 'b'])) return stripAlpha(color.rgba, shouldStrip)\n    else if (has(input, ['h', 's', 'l'])) return stripAlpha(color.hsla, shouldStrip)\n    else if (has(input, ['h', 's', 'v'])) return stripAlpha(color.hsva, shouldStrip)\n  }\n\n  return color\n}\n\nexport function hasAlpha (color: any) {\n  if (!color) return false\n\n  if (typeof color === 'string') {\n    return color.length > 7\n  }\n\n  if (typeof color === 'object') {\n    return has(color, ['a']) || has(color, ['alpha'])\n  }\n\n  return false\n}\n"],"file":"index.mjs"}