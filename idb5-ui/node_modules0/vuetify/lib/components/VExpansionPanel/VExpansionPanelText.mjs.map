{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelText.tsx"],"names":["VExpandTransition","VExpansionPanelSymbol","makeLazyProps","useLazy","inject","defineComponent","VExpansionPanelText","name","props","setup","slots","expansionPanel","Error","hasContent","onAfterLeave","isSelected","default","value"],"mappings":";AAAA;SACSA,iB;SACAC,qB,kCAET;;SACSC,a,EAAeC,O,sCAExB;;AACA,SAASC,MAAT,QAAuB,KAAvB;SACSC,e;AAET,OAAO,MAAMC,mBAAmB,GAAGD,eAAe,CAAC;AACjDE,EAAAA,IAAI,EAAE,qBAD2C;AAGjDC,EAAAA,KAAK,EAAE,EACL,GAAGN,aAAa;AADX,GAH0C;;AAOjDO,EAAAA,KAAK,CAAED,KAAF,QAAoB;AAAA,QAAX;AAAEE,MAAAA;AAAF,KAAW;AACvB,UAAMC,cAAc,GAAGP,MAAM,CAACH,qBAAD,CAA7B;AAEA,QAAI,CAACU,cAAL,EAAqB,MAAM,IAAIC,KAAJ,CAAU,8EAAV,CAAN;AAErB,UAAM;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,QAA+BX,OAAO,CAACK,KAAD,EAAQG,cAAc,CAACI,UAAvB,CAA5C;AAEA,WAAO;AAAA;;AAAA;AAAA,wBAC6BD;AAD7B;AAAA;AAAA,mBAIM,CACL,wBADK;AAJN,YAQCJ,KAAK,CAACM,OAAN,IAAiBH,UAAU,CAACI,KAA5B;AAAA,mBACW;AADX,8BAEIP,KAAK,CAACM,OAFV,qBAEI,oBAAAN,KAAK,CAFT,EARD,mBAGQC,cAAc,CAACI,UAAf,CAA0BE,KAHlC;AAAA;AAAA,KAAP;AAgBD;;AA9BgD,CAAD,CAA3C","sourcesContent":["// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\n\n// Composables\nimport { makeLazyProps, useLazy } from '@/composables/lazy'\n\n// Utilities\nimport { inject } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport const VExpansionPanelText = defineComponent({\n  name: 'VExpansionPanelText',\n\n  props: {\n    ...makeLazyProps(),\n  },\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-text needs to be placed inside v-expansion-panel')\n\n    const { hasContent, onAfterLeave } = useLazy(props, expansionPanel.isSelected)\n\n    return () => (\n      <VExpandTransition onAfterLeave={ onAfterLeave }>\n        <div\n          v-show={ expansionPanel.isSelected.value }\n          class={[\n            'v-expansion-panel-text',\n          ]}\n        >\n          { slots.default && hasContent.value && (\n            <div class=\"v-expansion-panel-text__wrapper\">\n              { slots.default?.() }\n            </div>\n          ) }\n        </div>\n      </VExpandTransition>\n    )\n  },\n})\n"],"file":"VExpansionPanelText.mjs"}