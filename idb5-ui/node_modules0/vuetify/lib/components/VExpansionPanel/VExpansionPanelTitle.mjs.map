{"version":3,"sources":["../../../src/components/VExpansionPanel/VExpansionPanelTitle.tsx"],"names":["VIcon","VExpansionPanelSymbol","useBackgroundColor","ripple","computed","inject","defineComponent","propsFactory","makeVExpansionPanelTitleProps","expandIcon","type","String","default","collapseIcon","hideActions","Boolean","Object","color","VExpansionPanelTitle","name","directives","props","setup","slots","expansionPanel","Error","backgroundColorClasses","backgroundColorStyles","slotProps","expanded","isSelected","value","disabled","undefined","toggle","actions"],"mappings":";AAAA;SACSA,K;SACAC,qB,kCAET;;SACSC,kB,uCAET;;OACOC,M,2CAEP;;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,KAAjC;SACSC,e,EAAiBC,Y;AAE1B,OAAO,MAAMC,6BAA6B,GAAGD,YAAY,CAAC;AACxDE,EAAAA,UAAU,EAAE;AACVC,IAAAA,IAAI,EAAEC,MADI;AAEVC,IAAAA,OAAO,EAAE;AAFC,GAD4C;AAKxDC,EAAAA,YAAY,EAAE;AACZH,IAAAA,IAAI,EAAEC,MADM;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAL0C;AASxDE,EAAAA,WAAW,EAAEC,OAT2C;AAUxDZ,EAAAA,MAAM,EAAE;AACNO,IAAAA,IAAI,EAAE,CAACK,OAAD,EAAUC,MAAV,CADA;AAENJ,IAAAA,OAAO,EAAE;AAFH,GAVgD;AAcxDK,EAAAA,KAAK,EAAEN;AAdiD,CAAD,CAAlD;AAiBP,OAAO,MAAMO,oBAAoB,GAAGZ,eAAe,CAAC;AAClDa,EAAAA,IAAI,EAAE,sBAD4C;AAGlDC,EAAAA,UAAU,EAAE;AAAEjB,IAAAA;AAAF,GAHsC;AAKlDkB,EAAAA,KAAK,EAAE,EACL,GAAGb,6BAA6B;AAD3B,GAL2C;;AASlDc,EAAAA,KAAK,CAAED,KAAF,QAAoB;AAAA,QAAX;AAAEE,MAAAA;AAAF,KAAW;AACvB,UAAMC,cAAc,GAAGnB,MAAM,CAACJ,qBAAD,CAA7B;AAEA,QAAI,CAACuB,cAAL,EAAqB,MAAM,IAAIC,KAAJ,CAAU,+EAAV,CAAN;AAErB,UAAM;AAAEC,MAAAA,sBAAF;AAA0BC,MAAAA;AAA1B,QAAoDzB,kBAAkB,CAACmB,KAAD,EAAQ,OAAR,CAA5E;AAEA,UAAMO,SAAS,GAAGxB,QAAQ,CAAC,OAAO;AAChCyB,MAAAA,QAAQ,EAAEL,cAAc,CAACM,UAAf,CAA0BC,KADJ;AAEhCC,MAAAA,QAAQ,EAAER,cAAc,CAACQ,QAAf,CAAwBD,KAFF;AAGhCtB,MAAAA,UAAU,EAAEY,KAAK,CAACZ,UAHc;AAIhCI,MAAAA,YAAY,EAAEQ,KAAK,CAACR;AAJY,KAAP,CAAD,CAA1B;AAOA,WAAO;AAAA;;AAAA;AAAA,iBAEI,CACL,yBADK,EAEL;AACE,6CAAmCW,cAAc,CAACM,UAAf,CAA0BC;AAD/D,SAFK,EAKLL,sBAAsB,CAACK,KALlB,CAFJ;AAAA,iBASKJ,qBAAqB,CAACI,KAT3B;AAAA,gBAUE,QAVF;AAAA,oBAWQP,cAAc,CAACQ,QAAf,CAAwBD,KAAxB,GAAgC,CAAC,CAAjC,GAAqCE,SAX7C;AAAA,oBAYQT,cAAc,CAACQ,QAAf,CAAwBD,KAZhC;AAAA,yBAaaP,cAAc,CAACM,UAAf,CAA0BC,KAbvC;AAAA,mBAcOP,cAAc,CAACU;AAdtB;AAAA,iBAiBQ;AAjBR,kCAkBDX,KAAK,CAACX,OAlBL,qBAkBD,oBAAAW,KAAK,EAAWK,SAAS,CAACG,KAArB,CAlBJ,EAmBD,CAACV,KAAK,CAACP,WAAP;AAAA,iBACW;AADX,UAGIS,KAAK,CAACY,OAAN,GAAgBZ,KAAK,CAACY,OAAN,CAAcP,SAAS,CAACG,KAAxB,CAAhB;AAAA,gBACgBP,cAAc,CAACM,UAAf,CAA0BC,KAA1B,GAAkCV,KAAK,CAACR,YAAxC,GAAuDQ,KAAK,CAACZ;AAD7E,2BAHJ,EAnBC,6FAeQY,KAAK,CAAClB,MAfd;AAAA,KAAP;AA6BD;;AApDiD,CAAD,CAA5C","sourcesContent":["// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VExpansionPanelSymbol } from './VExpansionPanels'\n\n// Composables\nimport { useBackgroundColor } from '@/composables/color'\n\n// Directives\nimport ripple from '@/directives/ripple'\n\n// Utilities\nimport { computed, inject } from 'vue'\nimport { defineComponent, propsFactory } from '@/util'\n\nexport const makeVExpansionPanelTitleProps = propsFactory({\n  expandIcon: {\n    type: String,\n    default: '$expand',\n  },\n  collapseIcon: {\n    type: String,\n    default: '$collapse',\n  },\n  hideActions: Boolean,\n  ripple: {\n    type: [Boolean, Object],\n    default: false,\n  },\n  color: String,\n})\n\nexport const VExpansionPanelTitle = defineComponent({\n  name: 'VExpansionPanelTitle',\n\n  directives: { ripple },\n\n  props: {\n    ...makeVExpansionPanelTitleProps(),\n  },\n\n  setup (props, { slots }) {\n    const expansionPanel = inject(VExpansionPanelSymbol)\n\n    if (!expansionPanel) throw new Error('[Vuetify] v-expansion-panel-title needs to be placed inside v-expansion-panel')\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(props, 'color')\n\n    const slotProps = computed(() => ({\n      expanded: expansionPanel.isSelected.value,\n      disabled: expansionPanel.disabled.value,\n      expandIcon: props.expandIcon,\n      collapseIcon: props.collapseIcon,\n    }))\n\n    return () => (\n      <button\n        class={[\n          'v-expansion-panel-title',\n          {\n            'v-expansion-panel-title--active': expansionPanel.isSelected.value,\n          },\n          backgroundColorClasses.value,\n        ]}\n        style={ backgroundColorStyles.value }\n        type=\"button\"\n        tabindex={ expansionPanel.disabled.value ? -1 : undefined }\n        disabled={ expansionPanel.disabled.value }\n        aria-expanded={ expansionPanel.isSelected.value }\n        onClick={ expansionPanel.toggle }\n        v-ripple={ props.ripple }\n      >\n        <div class=\"v-expansion-panel-title__overlay\" />\n        { slots.default?.(slotProps.value) }\n        { !props.hideActions && (\n          <div class=\"v-expansion-panel-title__icon\">\n            {\n              slots.actions ? slots.actions(slotProps.value)\n              : <VIcon icon={ expansionPanel.isSelected.value ? props.collapseIcon : props.expandIcon } />\n            }\n          </div>\n        ) }\n      </button>\n    )\n  },\n})\n"],"file":"VExpansionPanelTitle.mjs"}