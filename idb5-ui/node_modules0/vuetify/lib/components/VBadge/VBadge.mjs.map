{"version":3,"sources":["../../../src/components/VBadge/VBadge.tsx"],"names":["VIcon","makeRoundedProps","useRounded","makeTagProps","makeTransitionProps","MaybeTransition","useBackgroundColor","useTextColor","computed","toRef","convertToUnit","defineComponent","pick","VBadge","name","inheritAttrs","props","bordered","Boolean","color","type","String","default","content","dot","floating","icon","inline","label","location","validator","value","vertical","horizontal","split","includes","max","Number","modelValue","offsetX","offsetY","textColor","transition","setup","ctx","backgroundColorClasses","backgroundColorStyles","roundedClasses","textColorClasses","textColorStyles","position","calculatePosition","offset","parseInt","locationStyles","styles","bottom","left","right","top","isNaN","badgeAttrs","attrs","slots","undefined","badge"],"mappings":";AAAA;AACA,sB,CAEA;;SACSA,K,8BAET;;SACSC,gB,EAAkBC,U;SAClBC,Y;SACAC,mB,EAAqBC,e;SACrBC,kB,EAAoBC,Y,uCAE7B;;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,KAAhC;SACSC,a,EAAeC,e,EAAiBC,I;AAEzC,OAAO,MAAMC,MAAM,GAAGF,eAAe,CAAC;AACpCG,EAAAA,IAAI,EAAE,QAD8B;AAGpCC,EAAAA,YAAY,EAAE,KAHsB;AAKpCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAEC,OADL;AAELC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAFF;AAMLC,IAAAA,OAAO,EAAEF,MANJ;AAOLG,IAAAA,GAAG,EAAEN,OAPA;AAQLO,IAAAA,QAAQ,EAAEP,OARL;AASLQ,IAAAA,IAAI,EAAEL,MATD;AAULM,IAAAA,MAAM,EAAET,OAVH;AAWLU,IAAAA,KAAK,EAAE;AACLR,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAXF;AAeLO,IAAAA,QAAQ,EAAE;AACRT,MAAAA,IAAI,EAAEC,MADE;AAERC,MAAAA,OAAO,EAAE,WAFD;AAGRQ,MAAAA,SAAS,EAAGC,KAAD,IAAmB;AAC5B,cAAM,CAACC,QAAD,EAAWC,UAAX,IAAyB,CAACF,KAAD,WAACA,KAAD,GAAU,EAAV,EAAcG,KAAd,CAAoB,GAApB,CAA/B;AAEA,eACE,CAAC,KAAD,EAAQ,QAAR,EAAkBC,QAAlB,CAA2BH,QAA3B,KACA,CAAC,MAAD,EAAS,OAAT,EAAkBG,QAAlB,CAA2BF,UAA3B,CAFF;AAID;AAVO,KAfL;AA2BLG,IAAAA,GAAG,EAAE,CAACC,MAAD,EAAShB,MAAT,CA3BA;AA4BLiB,IAAAA,UAAU,EAAE;AACVlB,MAAAA,IAAI,EAAEF,OADI;AAEVI,MAAAA,OAAO,EAAE;AAFC,KA5BP;AAgCLiB,IAAAA,OAAO,EAAE,CAACF,MAAD,EAAShB,MAAT,CAhCJ;AAiCLmB,IAAAA,OAAO,EAAE,CAACH,MAAD,EAAShB,MAAT,CAjCJ;AAkCLoB,IAAAA,SAAS,EAAEpB,MAlCN;AAmCL,OAAGpB,gBAAgB,EAnCd;AAoCL,OAAGE,YAAY,EApCV;AAqCL,OAAGC,mBAAmB,CAAC;AAAEsC,MAAAA,UAAU,EAAE;AAAd,KAAD;AArCjB,GAL6B;;AA6CpCC,EAAAA,KAAK,CAAE3B,KAAF,EAAS4B,GAAT,EAAc;AACjB,UAAM;AAAEC,MAAAA,sBAAF;AAA0BC,MAAAA;AAA1B,QAAoDxC,kBAAkB,CAACG,KAAK,CAACO,KAAD,EAAQ,OAAR,CAAN,CAA5E;AACA,UAAM;AAAE+B,MAAAA;AAAF,QAAqB7C,UAAU,CAACc,KAAD,EAAQ,SAAR,CAArC;AACA,UAAM;AAAEgC,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAwC1C,YAAY,CAACE,KAAK,CAACO,KAAD,EAAQ,WAAR,CAAN,CAA1D;AAEA,UAAMkC,QAAQ,GAAG1C,QAAQ,CAAC,MAAM;AAC9B,aAAOQ,KAAK,CAACS,QAAN,GACFT,KAAK,CAACQ,GAAN,GAAY,CAAZ,GAAgB,CADd,GAEFR,KAAK,CAACQ,GAAN,GAAY,CAAZ,GAAgB,EAFrB;AAGD,KAJwB,CAAzB;;AAMA,aAAS2B,iBAAT,CAA4BC,MAA5B,EAAsD;AACpD,aAAQ,eAAc1C,aAAa,CAACwC,QAAQ,CAACnB,KAAT,GAAiBsB,QAAQ,CAACD,MAAD,WAACA,MAAD,GAAW,CAAX,EAAc,EAAd,CAA1B,CAA6C,GAAhF;AACD;;AAED,UAAME,cAAc,GAAG9C,QAAQ,CAAC,MAAM;AAAA;;AACpC,YAAM,CAACwB,QAAD,EAAWC,UAAX,IAAyB,oBAACjB,KAAK,CAACa,QAAP,8BAAmB,EAAnB,EAAuBK,KAAvB,CAA6B,GAA7B,CAA/B,CADoC,CAGpC;;AAEA,YAAMqB,MAAM,GAAG;AACbC,QAAAA,MAAM,EAAE,MADK;AAEbC,QAAAA,IAAI,EAAE,MAFO;AAGbC,QAAAA,KAAK,EAAE,MAHM;AAIbC,QAAAA,GAAG,EAAE;AAJQ,OAAf;;AAOA,UAAI,CAAC3C,KAAK,CAACW,MAAX,EAAmB;AACjB4B,QAAAA,MAAM,CAACtB,UAAU,KAAK,MAAf,GAAwB,OAAxB,GAAkC,MAAnC,CAAN,GAAmDkB,iBAAiB,CAACnC,KAAK,CAACuB,OAAP,CAApE;AACAgB,QAAAA,MAAM,CAACvB,QAAQ,KAAK,KAAb,GAAqB,QAArB,GAAgC,KAAjC,CAAN,GAAgDmB,iBAAiB,CAACnC,KAAK,CAACwB,OAAP,CAAjE;AACD;;AAED,aAAOe,MAAP;AACD,KAlB8B,CAA/B;AAoBA,WAAO,MAAM;AAAA;;AACX,YAAMxB,KAAK,GAAGM,MAAM,CAACrB,KAAK,CAACO,OAAP,CAApB;AACA,YAAMA,OAAO,GAAI,CAACP,KAAK,CAACoB,GAAP,IAAcwB,KAAK,CAAC7B,KAAD,CAApB,GAA+Bf,KAAK,CAACO,OAArC,GACZQ,KAAK,IAAIf,KAAK,CAACoB,GAAf,GAAqBL,KAArB,GACC,GAAEf,KAAK,CAACoB,GAAI,GAFjB;AAIA,YAAM,CAACyB,UAAD,EAAaC,KAAb,IAAsBlD,IAAI,CAACgC,GAAG,CAACkB,KAAL,EAAmC,CACjE,aADiE,EAEjE,YAFiE,EAGjE,WAHiE,EAIjE,MAJiE,EAKjE,OALiE,CAAnC,CAAhC;AAQA;AAAA,iBAEW,CACL,SADK,EAEL;AACE,+BAAqB9C,KAAK,CAACC,QAD7B;AAEE,0BAAgBD,KAAK,CAACQ,GAFxB;AAGE,+BAAqBR,KAAK,CAACS,QAH7B;AAIE,6BAAmBT,KAAK,CAACW;AAJ3B,SAFK;AAFX,SAWSmC,KAXT;AAAA;AAAA,mBAae;AAbf,kCAcQ,cAAAlB,GAAG,CAACmB,KAAJ,EAAUzC,OAdlB,qBAcQ,mCAdR;AAAA,wBAgBoCN,KAAK,CAAC0B;AAhB1C;AAAA;AAAA,qBAmBiB,CACL,gBADK,EAELG,sBAAsB,CAACd,KAFlB,EAGLgB,cAAc,CAAChB,KAHV,EAILiB,gBAAgB,CAACjB,KAJZ,CAnBjB;AAAA,qBAyBiB,CACLe,qBAAqB,CAACf,KADjB,EAELuB,cAAc,CAACvB,KAFV,EAGLkB,eAAe,CAAClB,KAHX,CAzBjB;AAAA,2BA8BsB,MA9BtB;AAAA,0BA+BqB,oBA/BrB;AAAA,yBAgCoB,QAhCpB;AAAA,oBAiCe;AAjCf,aAkCe8B,UAlCf,IAqCY7C,KAAK,CAACQ,GAAN,GAAYwC,SAAZ,GACEpB,GAAG,CAACmB,KAAJ,CAAUE,KAAV,uBAAkB,eAAArB,GAAG,CAACmB,KAAJ,EAAUE,KAA5B,qBAAkB,kCAAlB,GACAjD,KAAK,CAACU,IAAN;AAAA,oBAA0BV,KAAK,CAACU;AAAhC;AAAA,qBACY;AADZ,cACgCH,OADhC,EAvCd,kBAkBmBP,KAAK,CAACsB,UAlBzB;AAAA;AAAA;AA+CD,KA7DD;AA8DD;;AA9ImC,CAAD,CAA9B","sourcesContent":["// Styles\nimport './VBadge.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\n\n// Utilities\nimport { computed, toRef } from 'vue'\nimport { convertToUnit, defineComponent, pick } from '@/util'\n\nexport const VBadge = defineComponent({\n  name: 'VBadge',\n\n  inheritAttrs: false,\n\n  props: {\n    bordered: Boolean,\n    color: {\n      type: String,\n      default: 'primary',\n    },\n    content: String,\n    dot: Boolean,\n    floating: Boolean,\n    icon: String,\n    inline: Boolean,\n    label: {\n      type: String,\n      default: '$vuetify.badge',\n    },\n    location: {\n      type: String,\n      default: 'top-right',\n      validator: (value: string) => {\n        const [vertical, horizontal] = (value ?? '').split('-')\n\n        return (\n          ['top', 'bottom'].includes(vertical) &&\n          ['left', 'right'].includes(horizontal)\n        )\n      },\n    },\n    max: [Number, String],\n    modelValue: {\n      type: Boolean,\n      default: true,\n    },\n    offsetX: [Number, String],\n    offsetY: [Number, String],\n    textColor: String,\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeTransitionProps({ transition: 'scale-rotate-transition' }),\n  },\n\n  setup (props, ctx) {\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { roundedClasses } = useRounded(props, 'v-badge')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'textColor'))\n\n    const position = computed(() => {\n      return props.floating\n        ? (props.dot ? 2 : 4)\n        : (props.dot ? 8 : 12)\n    })\n\n    function calculatePosition (offset?: number | string) {\n      return `calc(100% - ${convertToUnit(position.value + parseInt(offset ?? 0, 10))})`\n    }\n\n    const locationStyles = computed(() => {\n      const [vertical, horizontal] = (props.location ?? '').split('-')\n\n      // TODO: RTL support\n\n      const styles = {\n        bottom: 'auto',\n        left: 'auto',\n        right: 'auto',\n        top: 'auto',\n      }\n\n      if (!props.inline) {\n        styles[horizontal === 'left' ? 'right' : 'left'] = calculatePosition(props.offsetX)\n        styles[vertical === 'top' ? 'bottom' : 'top'] = calculatePosition(props.offsetY)\n      }\n\n      return styles\n    })\n\n    return () => {\n      const value = Number(props.content)\n      const content = (!props.max || isNaN(value)) ? props.content\n        : value <= props.max ? value\n        : `${props.max}+`\n\n      const [badgeAttrs, attrs] = pick(ctx.attrs as Record<string, any>, [\n        'aria-atomic',\n        'aria-label',\n        'aria-live',\n        'role',\n        'title',\n      ])\n\n      return (\n        <props.tag\n          class={[\n            'v-badge',\n            {\n              'v-badge--bordered': props.bordered,\n              'v-badge--dot': props.dot,\n              'v-badge--floating': props.floating,\n              'v-badge--inline': props.inline,\n            },\n          ]}\n          { ...attrs }\n        >\n          <div class=\"v-badge__wrapper\">\n            { ctx.slots.default?.() }\n\n            <MaybeTransition transition={ props.transition }>\n              <span\n                v-show={ props.modelValue }\n                class={[\n                  'v-badge__badge',\n                  backgroundColorClasses.value,\n                  roundedClasses.value,\n                  textColorClasses.value,\n                ]}\n                style={[\n                  backgroundColorStyles.value,\n                  locationStyles.value,\n                  textColorStyles.value,\n                ]}\n                aria-atomic=\"true\"\n                aria-label=\"locale string here\" // TODO: locale string here\n                aria-live=\"polite\"\n                role=\"status\"\n                { ...badgeAttrs }\n              >\n                {\n                  props.dot ? undefined\n                  : ctx.slots.badge ? ctx.slots.badge?.()\n                  : props.icon ? <VIcon icon={props.icon} />\n                  : <span class=\"v-badge__content\">{content}</span>\n                }\n              </span>\n            </MaybeTransition>\n          </div>\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VBadge = InstanceType<typeof VBadge>\n"],"file":"VBadge.mjs"}