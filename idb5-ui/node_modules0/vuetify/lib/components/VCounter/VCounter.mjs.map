{"version":3,"sources":["../../../src/components/VCounter/VCounter.tsx"],"names":["VSlideYTransition","makeTransitionProps","MaybeTransition","computed","defineComponent","VCounter","name","functional","props","active","Boolean","max","Number","String","value","type","default","transition","component","setup","slots","counter"],"mappings":";AAAA;AACA,wB,CAEA;;SACSA,iB,oCAET;;SACSC,mB,EAAqBC,e;AAC9B,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,KAA1C;AAEA,OAAO,MAAMC,QAAQ,GAAGD,eAAe,CAAC;AACtCE,EAAAA,IAAI,EAAE,UADgC;AAGtCC,EAAAA,UAAU,EAAE,IAH0B;AAKtCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC,OADH;AAELC,IAAAA,GAAG,EAAE,CAACC,MAAD,EAASC,MAAT,CAFA;AAGLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAE,CAACH,MAAD,EAASC,MAAT,CADD;AAELG,MAAAA,OAAO,EAAE;AAFJ,KAHF;AAQL,OAAGf,mBAAmB,CAAC;AACrBgB,MAAAA,UAAU,EAAE;AAAEC,QAAAA,SAAS,EAAElB;AAAb;AADS,KAAD;AARjB,GAL+B;;AAkBtCmB,EAAAA,KAAK,CAAEX,KAAF,QAAoB;AAAA,QAAX;AAAEY,MAAAA;AAAF,KAAW;AACvB,UAAMC,OAAO,GAAGlB,QAAQ,CAAC,MAAM;AAC7B,aAAOK,KAAK,CAACG,GAAN,GAAa,GAAEH,KAAK,CAACM,KAAM,MAAKN,KAAK,CAACG,GAAI,EAA1C,GAA8CE,MAAM,CAACL,KAAK,CAACM,KAAP,CAA3D;AACD,KAFuB,CAAxB;AAIA,WAAO,MAAM;AACX;AAAA,sBACgCN,KAAK,CAACS;AADtC;AAAA;AAAA,mBAIY;AAJZ,YAMQG,KAAK,CAACJ,OAAN,GACEI,KAAK,CAACJ,OAAN,CAAc;AACdK,UAAAA,OAAO,EAAEA,OAAO,CAACP,KADH;AAEdH,UAAAA,GAAG,EAAEH,KAAK,CAACG,GAFG;AAGdG,UAAAA,KAAK,EAAEN,KAAK,CAACM;AAHC,SAAd,CADF,GAMEO,OAAO,CAACP,KAZlB,mBAGeN,KAAK,CAACC,MAHrB;AAAA;AAiBD,KAlBD;AAmBD;;AA1CqC,CAAD,CAAhC","sourcesContent":["// Styles\nimport './VCounter.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Utilities\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\nimport { computed, defineComponent } from 'vue'\n\nexport const VCounter = defineComponent({\n  name: 'VCounter',\n\n  functional: true,\n\n  props: {\n    active: Boolean,\n    max: [Number, String],\n    value: {\n      type: [Number, String],\n      default: 0,\n    },\n\n    ...makeTransitionProps({\n      transition: { component: VSlideYTransition },\n    }),\n  },\n\n  setup (props, { slots }) {\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value)\n    })\n\n    return () => {\n      return (\n        <MaybeTransition transition={ props.transition }>\n          <div\n            v-show={ props.active }\n            class=\"v-counter\"\n          >\n            { slots.default\n              ? slots.default({\n                counter: counter.value,\n                max: props.max,\n                value: props.value,\n              })\n              : counter.value\n            }\n          </div>\n        </MaybeTransition>\n      )\n    }\n  },\n})\n"],"file":"VCounter.mjs"}