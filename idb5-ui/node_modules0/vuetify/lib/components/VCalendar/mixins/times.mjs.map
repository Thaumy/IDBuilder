{"version":3,"sources":["../../../../src/components/VCalendar/mixins/times.ts"],"names":["Vue","validateTimestamp","parseTimestamp","parseDate","extend","name","props","now","type","String","validator","data","times","today","computed","parsedNow","watch","created","updateTimes","setPresent","methods","present","past","future","getNow","updateDay","updateTime","Date","target","date","year","month","day","weekday","time","hour","minute"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\nimport Vue from 'vue'\n\nimport {\n  validateTimestamp,\n  parseTimestamp,\n  parseDate,\n} from '../util/timestamp'\nimport { CalendarTimestamp } from 'vuetify/types'\n\nexport default Vue.extend({\n  name: 'times',\n\n  props: {\n    now: {\n      type: String,\n      validator: validateTimestamp,\n    },\n  },\n\n  data: () => ({\n    times: {\n      now: parseTimestamp('0000-00-00 00:00', true),\n      today: parseTimestamp('0000-00-00', true),\n    },\n  }),\n\n  computed: {\n    parsedNow (): CalendarTimestamp | null {\n      return this.now ? parseTimestamp(this.now, true) : null\n    },\n  },\n\n  watch: {\n    parsedNow: 'updateTimes',\n  },\n\n  created () {\n    this.updateTimes()\n    this.setPresent()\n  },\n\n  methods: {\n    setPresent (): void {\n      this.times.now.present = this.times.today.present = true\n      this.times.now.past = this.times.today.past = false\n      this.times.now.future = this.times.today.future = false\n    },\n    updateTimes (): void {\n      const now: CalendarTimestamp = this.parsedNow || this.getNow()\n      this.updateDay(now, this.times.now)\n      this.updateTime(now, this.times.now)\n      this.updateDay(now, this.times.today)\n    },\n    getNow (): CalendarTimestamp {\n      return parseDate(new Date())\n    },\n    updateDay (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.date !== target.date) {\n        target.year = now.year\n        target.month = now.month\n        target.day = now.day\n        target.weekday = now.weekday\n        target.date = now.date\n      }\n    },\n    updateTime (now: CalendarTimestamp, target: CalendarTimestamp): void {\n      if (now.time !== target.time) {\n        target.hour = now.hour\n        target.minute = now.minute\n        target.time = now.time\n      }\n    },\n  },\n})\n"],"file":"times.mjs"}