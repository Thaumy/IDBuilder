{"version":3,"sources":["../../../../src/components/VCalendar/util/events.ts"],"names":["parseTimestamp","getDayIdentifier","getTimestampIdentifier","isTimedless","updateHasTime","parseEvent","input","index","startProperty","endProperty","timed","category","startInput","endInput","startParsed","endParsed","start","end","startIdentifier","startTimestampIdentifier","endIdentifier","endOffset","hasTime","endTimestampIdentifier","allDay","isEventOn","event","dayIdentifier","isEventHiddenOn","day","time","date","isEventStart","firstWeekday","weekday","isEventOverlapping"],"mappings":"AAAA;;AACA;SAGEA,c,EACAC,gB,EACAC,sB,EACAC,W,EACAC,a;AAIF,OAAO,SAASC,UAAT,CACLC,KADK,EAELC,KAFK,EAGLC,aAHK,EAILC,WAJK,EAOgB;AAAA,MAFrBC,KAEqB,uEAFb,KAEa;AAAA,MADrBC,QACqB,uEADM,KACN;AACrB,QAAMC,UAAU,GAAGN,KAAK,CAACE,aAAD,CAAxB;AACA,QAAMK,QAAQ,GAAGP,KAAK,CAACG,WAAD,CAAtB;AACA,QAAMK,WAA8B,GAAGd,cAAc,CAACY,UAAD,EAAa,IAAb,CAArD;AACA,QAAMG,SAA4B,GAAIF,QAAQ,GAAGb,cAAc,CAACa,QAAD,EAAW,IAAX,CAAjB,GAAoCC,WAAlF;AACA,QAAME,KAAwB,GAAGb,WAAW,CAACS,UAAD,CAAX,GAC7BR,aAAa,CAACU,WAAD,EAAcJ,KAAd,CADgB,GAE7BI,WAFJ;AAGA,QAAMG,GAAsB,GAAGd,WAAW,CAACU,QAAD,CAAX,GAC3BT,aAAa,CAACW,SAAD,EAAYL,KAAZ,CADc,GAE3BK,SAFJ;AAGA,QAAMG,eAAuB,GAAGjB,gBAAgB,CAACe,KAAD,CAAhD;AACA,QAAMG,wBAAgC,GAAGjB,sBAAsB,CAACc,KAAD,CAA/D;AACA,QAAMI,aAAqB,GAAGnB,gBAAgB,CAACgB,GAAD,CAA9C;AACA,QAAMI,SAAiB,GAAGL,KAAK,CAACM,OAAN,GAAgB,CAAhB,GAAoB,IAA9C;AACA,QAAMC,sBAA8B,GAAGrB,sBAAsB,CAACe,GAAD,CAAtB,GAA8BI,SAArE;AACA,QAAMG,MAAM,GAAG,CAACR,KAAK,CAACM,OAAtB;AAEA,SAAO;AAAEhB,IAAAA,KAAF;AAASU,IAAAA,KAAT;AAAgBE,IAAAA,eAAhB;AAAiCC,IAAAA,wBAAjC;AAA2DF,IAAAA,GAA3D;AAAgEG,IAAAA,aAAhE;AAA+EG,IAAAA,sBAA/E;AAAuGC,IAAAA,MAAvG;AAA+GjB,IAAAA,KAA/G;AAAsHI,IAAAA;AAAtH,GAAP;AACD;AAED,OAAO,SAASc,SAAT,CAAoBC,KAApB,EAAgDC,aAAhD,EAAgF;AACrF,SAAOA,aAAa,IAAID,KAAK,CAACR,eAAvB,IAA0CS,aAAa,IAAID,KAAK,CAACN,aAAxE;AACD;AAED,OAAO,SAASQ,eAAT,CAA0BF,KAA1B,EAAsDG,GAAtD,EAAuF;AAC5F,SAAOH,KAAK,CAACT,GAAN,CAAUa,IAAV,KAAmB,OAAnB,IAA8BJ,KAAK,CAACT,GAAN,CAAUc,IAAV,KAAmBF,GAAG,CAACE,IAArD,IAA6DL,KAAK,CAACV,KAAN,CAAYe,IAAZ,KAAqBF,GAAG,CAACE,IAA7F;AACD;AAED,OAAO,SAASC,YAAT,CAAuBN,KAAvB,EAAmDG,GAAnD,EAA2EF,aAA3E,EAAkGM,YAAlG,EAAiI;AACtI,SAAON,aAAa,KAAKD,KAAK,CAACR,eAAxB,IAA4Ce,YAAY,KAAKJ,GAAG,CAACK,OAArB,IAAgCT,SAAS,CAACC,KAAD,EAAQC,aAAR,CAA5F;AACD;AAED,OAAO,SAASQ,kBAAT,CAA6BT,KAA7B,EAAyDR,eAAzD,EAAkFE,aAAlF,EAAkH;AACvH,SAAOF,eAAe,IAAIQ,KAAK,CAACN,aAAzB,IAA0CA,aAAa,IAAIM,KAAK,CAACR,eAAxE;AACD","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\nimport {\n  parseTimestamp,\n  getDayIdentifier,\n  getTimestampIdentifier,\n  isTimedless,\n  updateHasTime,\n} from './timestamp'\nimport { CalendarTimestamp, CalendarEvent, CalendarEventParsed } from 'vuetify/types'\n\nexport function parseEvent (\n  input: CalendarEvent,\n  index: number,\n  startProperty: string,\n  endProperty: string,\n  timed = false,\n  category: string | false = false,\n): CalendarEventParsed {\n  const startInput = input[startProperty]\n  const endInput = input[endProperty]\n  const startParsed: CalendarTimestamp = parseTimestamp(startInput, true)\n  const endParsed: CalendarTimestamp = (endInput ? parseTimestamp(endInput, true) : startParsed)\n  const start: CalendarTimestamp = isTimedless(startInput)\n    ? updateHasTime(startParsed, timed)\n    : startParsed\n  const end: CalendarTimestamp = isTimedless(endInput)\n    ? updateHasTime(endParsed, timed)\n    : endParsed\n  const startIdentifier: number = getDayIdentifier(start)\n  const startTimestampIdentifier: number = getTimestampIdentifier(start)\n  const endIdentifier: number = getDayIdentifier(end)\n  const endOffset: number = start.hasTime ? 0 : 2359\n  const endTimestampIdentifier: number = getTimestampIdentifier(end) + endOffset\n  const allDay = !start.hasTime\n\n  return { input, start, startIdentifier, startTimestampIdentifier, end, endIdentifier, endTimestampIdentifier, allDay, index, category }\n}\n\nexport function isEventOn (event: CalendarEventParsed, dayIdentifier: number): boolean {\n  return dayIdentifier >= event.startIdentifier && dayIdentifier <= event.endIdentifier\n}\n\nexport function isEventHiddenOn (event: CalendarEventParsed, day: CalendarTimestamp): boolean {\n  return event.end.time === '00:00' && event.end.date === day.date && event.start.date !== day.date\n}\n\nexport function isEventStart (event: CalendarEventParsed, day: CalendarTimestamp, dayIdentifier: number, firstWeekday: number): boolean {\n  return dayIdentifier === event.startIdentifier || (firstWeekday === day.weekday && isEventOn(event, dayIdentifier))\n}\n\nexport function isEventOverlapping (event: CalendarEventParsed, startIdentifier: number, endIdentifier: number): boolean {\n  return startIdentifier <= event.endIdentifier && endIdentifier >= event.startIdentifier\n}\n"],"file":"events.mjs"}