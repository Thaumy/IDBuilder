{"version":3,"sources":["../../../../src/components/VCalendar/util/props.ts"],"names":["validateTimestamp","parseDate","DAYS_IN_WEEK","validateTime","CalendarEventOverlapModes","base","start","type","String","Number","Date","validate","default","date","end","weekdays","Array","validateWeekdays","hideHeader","Boolean","shortWeekdays","weekdayFormat","Function","dayFormat","intervals","maxDays","shortIntervals","intervalHeight","validateNumber","intervalWidth","intervalMinutes","firstInterval","firstTime","Object","intervalCount","intervalFormat","intervalStyle","showIntervalLabel","weeks","localeFirstDayOfYear","minWeeks","shortMonths","showMonthOnFirst","showWeek","monthFormat","calendar","value","category","categories","categoryText","categoryHideDynamic","categoryShowAll","categoryForInvalid","categoryDays","x","isFinite","parseInt","events","eventStart","eventEnd","eventTimed","eventCategory","eventHeight","eventColor","eventTextColor","eventName","eventOverlapThreshold","eventOverlapMode","mode","eventMore","eventMoreText","eventRipple","eventMarginBottom","input","split","isArray","ints","map","length","visited","wrapped","i","d"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n\nimport { validateTimestamp, parseDate, DAYS_IN_WEEK, validateTime } from './timestamp'\nimport { PropType } from 'vue'\nimport { CalendarEvent, CalendarFormatter, CalendarTimestamp, CalendarEventOverlapMode, CalendarEventNameFunction, CalendarEventColorFunction, CalendarEventCategoryFunction, CalendarEventTimedFunction, CalendarCategoryTextFunction, CalendarCategory } from 'vuetify/types'\nimport { CalendarEventOverlapModes } from '../modes'\nimport { PropValidator } from 'vue/types/options'\n\nexport default {\n  base: {\n    start: {\n      type: [String, Number, Date],\n      validate: validateTimestamp,\n      default: () => parseDate(new Date()).date,\n    },\n    end: {\n      type: [String, Number, Date],\n      validate: validateTimestamp,\n    },\n    weekdays: {\n      type: [Array, String] as PropType<number[] | string>,\n      default: () => [0, 1, 2, 3, 4, 5, 6],\n      validate: validateWeekdays,\n    },\n    hideHeader: {\n      type: Boolean,\n    },\n    shortWeekdays: {\n      type: Boolean,\n      default: true,\n    },\n    weekdayFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n    dayFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n  },\n  intervals: {\n    maxDays: {\n      type: Number,\n      default: 7,\n    },\n    shortIntervals: {\n      type: Boolean,\n      default: true,\n    },\n    intervalHeight: {\n      type: [Number, String],\n      default: 48,\n      validate: validateNumber,\n    },\n    intervalWidth: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    intervalMinutes: {\n      type: [Number, String],\n      default: 60,\n      validate: validateNumber,\n    },\n    firstInterval: {\n      type: [Number, String],\n      default: 0,\n      validate: validateNumber,\n    },\n    firstTime: {\n      type: [Number, String, Object],\n      validate: validateTime,\n    },\n    intervalCount: {\n      type: [Number, String],\n      default: 24,\n      validate: validateNumber,\n    },\n    intervalFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n    intervalStyle: {\n      type: Function as PropType<(interval: CalendarTimestamp) => object>,\n      default: null,\n    },\n    showIntervalLabel: {\n      type: Function as PropType<(interval: CalendarTimestamp) => boolean>,\n      default: null,\n    },\n  },\n  weeks: {\n    localeFirstDayOfYear: {\n      type: [String, Number],\n      default: 0,\n    },\n    minWeeks: {\n      validate: validateNumber,\n      default: 1,\n    },\n    shortMonths: {\n      type: Boolean,\n      default: true,\n    },\n    showMonthOnFirst: {\n      type: Boolean,\n      default: true,\n    },\n    showWeek: Boolean,\n    monthFormat: {\n      type: Function as PropType<CalendarFormatter>,\n      default: null,\n    },\n  },\n  calendar: {\n    type: {\n      type: String,\n      default: 'month',\n    },\n    value: {\n      type: [String, Number, Date] as PropType<string | number | Date>,\n      validate: validateTimestamp,\n    },\n  },\n  category: {\n    categories: {\n      type: [Array, String] as PropType<CalendarCategory[] | string>,\n      default: '',\n    },\n    categoryText: {\n      type: [String, Function] as PropType<string | CalendarCategoryTextFunction>,\n    },\n    categoryHideDynamic: {\n      type: Boolean,\n    },\n    categoryShowAll: {\n      type: Boolean,\n    },\n    categoryForInvalid: {\n      type: String,\n      default: '',\n    },\n    categoryDays: {\n      type: [Number, String],\n      default: 1,\n      validate: (x: any) => isFinite(parseInt(x)) && parseInt(x) > 0,\n    },\n  },\n  events: {\n    events: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<CalendarEvent[]>,\n    eventStart: {\n      type: String,\n      default: 'start',\n    },\n    eventEnd: {\n      type: String,\n      default: 'end',\n    },\n    eventTimed: {\n      type: [String, Function] as PropType<string | CalendarEventTimedFunction>,\n      default: 'timed',\n    },\n    eventCategory: {\n      type: [String, Function] as PropType<string | CalendarEventCategoryFunction>,\n      default: 'category',\n    },\n    eventHeight: {\n      type: Number,\n      default: 20,\n    },\n    eventColor: {\n      type: [String, Function] as PropType<string | CalendarEventColorFunction>,\n      default: 'primary',\n    },\n    eventTextColor: {\n      type: [String, Function] as PropType<string | CalendarEventColorFunction>,\n      default: 'white',\n    },\n    eventName: {\n      type: [String, Function] as PropType<string | CalendarEventNameFunction>,\n      default: 'name',\n    },\n    eventOverlapThreshold: {\n      type: [String, Number],\n      default: 60,\n    },\n    eventOverlapMode: {\n      type: [String, Function],\n      default: 'stack',\n      validate: (mode: any) => mode in CalendarEventOverlapModes || typeof mode === 'function',\n    } as PropValidator<'stack' | 'column' | CalendarEventOverlapMode>,\n    eventMore: {\n      type: Boolean,\n      default: true,\n    },\n    eventMoreText: {\n      type: String,\n      default: '$vuetify.calendar.moreEvents',\n    },\n    eventRipple: {\n      type: [Boolean, Object],\n      default: null,\n    },\n    eventMarginBottom: {\n      type: Number,\n      default: 1,\n    },\n  },\n}\n\nexport function validateNumber (input: any): boolean {\n  return isFinite(parseInt(input))\n}\n\nexport function validateWeekdays (input: string | (number | string)[]): boolean {\n  if (typeof input === 'string') {\n    input = input.split(',')\n  }\n\n  if (Array.isArray(input)) {\n    const ints = input.map(x => parseInt(x))\n\n    if (ints.length > DAYS_IN_WEEK || ints.length === 0) {\n      return false\n    }\n\n    const visited: Record<number, boolean> = {}\n    let wrapped = false\n\n    for (let i = 0; i < ints.length; i++) {\n      const x = ints[i]\n\n      if (!isFinite(x) || x < 0 || x >= DAYS_IN_WEEK) {\n        return false\n      }\n\n      if (i > 0) {\n        const d = x - ints[i - 1]\n        if (d < 0) {\n          if (wrapped) {\n            return false\n          }\n          wrapped = true\n        } else if (d === 0) {\n          return false\n        }\n      }\n\n      if (visited[x]) {\n        return false\n      }\n      visited[x] = true\n    }\n\n    return true\n  }\n\n  return false\n}\n"],"file":"props.mjs"}