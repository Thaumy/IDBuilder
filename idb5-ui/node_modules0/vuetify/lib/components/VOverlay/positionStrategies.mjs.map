{"version":3,"sources":["../../../src/components/VOverlay/positionStrategies.ts"],"names":["computed","effectScope","nextTick","onScopeDispose","ref","watch","watchEffect","convertToUnit","getScrollParent","IN_BROWSER","isFixedPosition","nullifyTransforms","propsFactory","oppositeAnchor","parseAnchor","physicalAnchor","anchorToPoint","getOffset","Box","positionStrategies","static","staticPositionStrategy","connected","connectedPositionStrategy","makePositionStrategyProps","positionStrategy","type","String","Function","default","validator","val","anchor","origin","offset","Number","usePositionStrategies","props","data","contentStyles","updatePosition","scope","stop","value","undefined","isActive","run","window","addEventListener","onResize","passive","removeEventListener","e","activatorFixed","activatorEl","Object","assign","position","preferredAnchor","preferredOrigin","doesOverlap","side","configuredMaxHeight","parseFloat","maxHeight","isNaN","Infinity","configuredMinWidth","minWidth","observe","observer","ResizeObserver","contentEl","disconnect","requestAnimationFrame","targetBox","getBoundingClientRect","x","y","width","height","scrollParent","viewportWidth","clientWidth","viewportHeight","Math","min","clientHeight","innerHeight","contentBox","scrollables","Map","querySelectorAll","forEach","el","scrollLeft","scrollTop","set","initialMaxWidth","style","maxWidth","initialMaxHeight","removeProperty","left","top","scrollTo","contentHeight","viewportMargin","freeSpace","bottom","right","fitsY","canFill","includes","max","floor","targetPoint","contentPoint","round","transformOrigin","immediate"],"mappings":"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","sourcesContent":["// Utilities\nimport { computed, effectScope, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue'\nimport { convertToUnit, getScrollParent, IN_BROWSER, isFixedPosition, nullifyTransforms, propsFactory } from '@/util'\nimport { oppositeAnchor, parseAnchor, physicalAnchor } from './util/anchor'\nimport { anchorToPoint, getOffset } from './util/point'\n\n// Types\nimport type { EffectScope, PropType, Ref } from 'vue'\nimport type { Anchor } from './util/anchor'\nimport { Box } from '@/util/box'\n\nexport interface PositionStrategyData {\n  contentEl: Ref<HTMLElement | undefined>\n  activatorEl: Ref<HTMLElement | undefined>\n  isActive: Ref<boolean>\n}\n\nconst positionStrategies = {\n  static: staticPositionStrategy, // specific viewport position, usually centered\n  connected: connectedPositionStrategy, // connected to a certain element\n}\n\nexport interface StrategyProps {\n  positionStrategy: keyof typeof positionStrategies | (\n    (\n      data: PositionStrategyData,\n      props: StrategyProps,\n      contentStyles: Ref<Dictionary<string>>\n    ) => undefined | { updatePosition: (e: Event) => void }\n  )\n  anchor: Anchor\n  origin: Anchor | 'auto' | 'overlap'\n  offset?: number | string\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n}\n\nexport const makePositionStrategyProps = propsFactory({\n  positionStrategy: {\n    type: [String, Function] as PropType<StrategyProps['positionStrategy']>,\n    default: 'static',\n    validator: (val: any) => typeof val === 'function' || val in positionStrategies,\n  },\n  anchor: {\n    type: String as PropType<StrategyProps['anchor']>,\n    default: 'bottom',\n  },\n  origin: {\n    type: String as PropType<StrategyProps['origin']>,\n    default: 'auto',\n  },\n  offset: [Number, String],\n})\n\nexport function usePositionStrategies (\n  props: StrategyProps,\n  data: PositionStrategyData\n) {\n  const contentStyles = ref({})\n  const updatePosition = ref<(e: Event) => void>()\n\n  let scope: EffectScope | undefined\n  watchEffect(async () => {\n    scope?.stop()\n    updatePosition.value = undefined\n\n    if (!(IN_BROWSER && data.isActive.value && props.positionStrategy)) return\n\n    scope = effectScope()\n    await nextTick()\n    scope.run(() => {\n      if (typeof props.positionStrategy === 'function') {\n        updatePosition.value = props.positionStrategy(data, props, contentStyles)?.updatePosition\n      } else {\n        updatePosition.value = positionStrategies[props.positionStrategy](data, props, contentStyles)?.updatePosition\n      }\n    })\n  })\n\n  IN_BROWSER && window.addEventListener('resize', onResize, { passive: true })\n\n  onScopeDispose(() => {\n    IN_BROWSER && window.removeEventListener('resize', onResize)\n    updatePosition.value = undefined\n    scope?.stop()\n  })\n\n  function onResize (e: Event) {\n    updatePosition.value?.(e)\n  }\n\n  return {\n    contentStyles,\n    updatePosition,\n  }\n}\n\nfunction staticPositionStrategy () {\n  // TODO\n}\n\nfunction connectedPositionStrategy (data: PositionStrategyData, props: StrategyProps, contentStyles: Ref<Dictionary<string>>) {\n  const activatorFixed = isFixedPosition(data.activatorEl.value)\n  if (activatorFixed) {\n    Object.assign(contentStyles.value, {\n      position: 'fixed',\n    })\n  }\n\n  const preferredAnchor = computed(() => parseAnchor(props.anchor))\n  const preferredOrigin = computed(() =>\n    props.origin === 'overlap' ? preferredAnchor.value\n    : props.origin === 'auto' ? oppositeAnchor(preferredAnchor.value)\n    : parseAnchor(props.origin)\n  )\n  const doesOverlap = computed(() => {\n    return preferredAnchor.value.side === preferredOrigin.value.side\n  })\n\n  const configuredMaxHeight = computed(() => {\n    const val = parseFloat(props.maxHeight!)\n    return isNaN(val) ? Infinity : val\n  })\n\n  const configuredMinWidth = computed(() => {\n    const val = parseFloat(props.minWidth!)\n    return isNaN(val) ? Infinity : val\n  })\n\n  let observe = false\n  const observer = new ResizeObserver(() => {\n    if (observe) updatePosition()\n  })\n  observer.observe(data.activatorEl.value!)\n  observer.observe(data.contentEl.value!)\n\n  onScopeDispose(() => {\n    observer.disconnect()\n  })\n\n  // eslint-disable-next-line max-statements\n  function updatePosition () {\n    observe = false\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => observe = true)\n    })\n\n    const targetBox = data.activatorEl.value!.getBoundingClientRect()\n    // TODO: offset shouldn't affect width\n    if (props.offset) {\n      targetBox.x -= +props.offset\n      targetBox.y -= +props.offset\n      targetBox.width += +props.offset * 2\n      targetBox.height += +props.offset * 2\n    }\n\n    const scrollParent = getScrollParent(data.contentEl.value)\n    const viewportWidth = scrollParent.clientWidth\n    const viewportHeight = Math.min(scrollParent.clientHeight, window.innerHeight)\n\n    let contentBox\n    {\n      const scrollables = new Map<Element, [number, number]>()\n      data.contentEl.value!.querySelectorAll('*').forEach(el => {\n        const x = el.scrollLeft\n        const y = el.scrollTop\n        if (x || y) {\n          scrollables.set(el, [x, y])\n        }\n      })\n\n      const initialMaxWidth = data.contentEl.value!.style.maxWidth\n      const initialMaxHeight = data.contentEl.value!.style.maxHeight\n      data.contentEl.value!.style.removeProperty('max-width')\n      data.contentEl.value!.style.removeProperty('max-height')\n\n      contentBox = nullifyTransforms(data.contentEl.value!)\n      contentBox.x -= parseFloat(data.contentEl.value!.style.left) || 0\n      contentBox.y -= parseFloat(data.contentEl.value!.style.top) || 0\n\n      data.contentEl.value!.style.maxWidth = initialMaxWidth\n      data.contentEl.value!.style.maxHeight = initialMaxHeight\n      scrollables.forEach((position, el) => {\n        el.scrollTo(...position)\n      })\n    }\n\n    const contentHeight = Math.min(configuredMaxHeight.value, contentBox.height)\n\n    const viewportMargin = 12\n    const freeSpace = {\n      top: targetBox.top - viewportMargin,\n      bottom: viewportHeight - targetBox.bottom - viewportMargin,\n      left: targetBox.left - viewportMargin,\n      right: viewportWidth - targetBox.right - viewportMargin,\n    }\n\n    const fitsY = (preferredAnchor.value.side === 'bottom' && contentHeight <= freeSpace.bottom) ||\n      (preferredAnchor.value.side === 'top' && contentHeight <= freeSpace.top)\n\n    const anchor = fitsY ? preferredAnchor.value\n      : (preferredAnchor.value.side === 'bottom' && freeSpace.top > freeSpace.bottom) ||\n      (preferredAnchor.value.side === 'top' && freeSpace.bottom > freeSpace.top) ? oppositeAnchor(preferredAnchor.value)\n      : preferredAnchor.value\n    const origin = fitsY ? preferredOrigin.value : oppositeAnchor(anchor)\n\n    const canFill = doesOverlap.value || ['center', 'top', 'bottom'].includes(anchor.side)\n\n    const maxWidth = canFill ? Math.min(viewportWidth, Math.max(targetBox.width, viewportWidth - viewportMargin * 2))\n      : anchor.side === 'end' ? freeSpace.right\n      : anchor.side === 'start' ? freeSpace.left\n      : null\n    const minWidth = Math.min(configuredMinWidth.value, maxWidth!, targetBox.width)\n    const maxHeight = fitsY ? configuredMaxHeight.value : Math.min(\n      configuredMaxHeight.value,\n      Math.floor(anchor.side === 'top' ? freeSpace.top : freeSpace.bottom)\n    )\n\n    const targetPoint = anchorToPoint(anchor, targetBox)\n    const contentPoint = anchorToPoint(origin, new Box({\n      ...contentBox,\n      height: Math.min(contentHeight, maxHeight),\n    }))\n\n    const { x, y } = getOffset(targetPoint, contentPoint)\n\n    Object.assign(contentStyles.value, {\n      '--v-overlay-anchor-origin': physicalAnchor(anchor, data.activatorEl.value!),\n      top: convertToUnit(Math.round(y)),\n      left: convertToUnit(Math.round(x)), // TODO: right for origin=\"end\", rtl\n      transformOrigin: physicalAnchor(origin, data.activatorEl.value!),\n      minWidth: convertToUnit(minWidth),\n      maxWidth: convertToUnit(maxWidth),\n      maxHeight: convertToUnit(maxHeight),\n    })\n  }\n\n  watch(\n    () => [preferredAnchor.value, preferredOrigin.value, props.offset],\n    () => updatePosition(),\n    { immediate: !activatorFixed }\n  )\n\n  if (activatorFixed) nextTick(() => updatePosition())\n  requestAnimationFrame(() => {\n    if (contentStyles.value.maxHeight) updatePosition()\n  })\n\n  return { updatePosition }\n}\n"],"file":"positionStrategies.mjs"}