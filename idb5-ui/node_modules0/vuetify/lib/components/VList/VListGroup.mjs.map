{"version":3,"sources":["../../../src/components/VList/VListGroup.tsx"],"names":["VExpandTransition","VListChildren","useNestedGroup","makeTagProps","computed","defineComponent","genericComponent","createList","useDepth","useList","VListGroupItems","name","props","open","Boolean","items","Array","setup","slots","parent","depth","hasPrepend","value","VListGroup","collapseIcon","type","String","default","expandIcon","isOpen","list","onClick","e","headerProps","appendIcon","class","header"],"mappings":";AAAA;SACSA,iB;SACAC,a,+BAET;;SACSC,c;SACAC,Y,qCAET;;AACA,SAASC,QAAT,QAAyB,KAAzB;SACSC,e,EAAiBC,gB;SACjBC,U,EAAYC,Q,EAAUC,O,uBAE/B;;AAWA,MAAMC,eAAe,GAAGL,eAAe,CAAC;AACtCM,EAAAA,IAAI,EAAE,iBADgC;AAGtCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,OADD;AAELC,IAAAA,KAAK,EAAEC;AAFF,GAH+B;;AAQtCC,EAAAA,KAAK,CAAEL,KAAF,QAAoB;AAAA,QAAX;AAAEM,MAAAA;AAAF,KAAW;AACvB,UAAMC,MAAM,GAAGZ,UAAU,EAAzB;AACA,UAAMa,KAAK,GAAGZ,QAAQ,CAACW,MAAM,CAACE,UAAR,CAAtB;AAEA,WAAO,MAAM;AACX;AAAA;AAAA,mBAEe,qBAFf;AAAA,mBAE4C;AAAE,8BAAkBD,KAAK,CAACE;AAA1B;AAF5C;AAAA,mBAG4BV,KAAK,CAACG;AAHlC,WAGkDG,KAHlD,gCAEuFN,KAAK,CAACC,IAF7F;AAAA;AAOD,KARD;AASD;;AArBqC,CAAD,CAAvC;AAwBA,OAAO,MAAMU,UAAU,GAAGjB,gBAAgB,GASrC;AACHK,EAAAA,IAAI,EAAE,YADH;AAGHC,EAAAA,KAAK,EAAE;AACLU,IAAAA,KAAK,EAAE,IADF;AAELE,IAAAA,YAAY,EAAE;AACZC,MAAAA,IAAI,EAAEC,MADM;AAEZC,MAAAA,OAAO,EAAE;AAFG,KAFT;AAMLC,IAAAA,UAAU,EAAE;AACVH,MAAAA,IAAI,EAAEC,MADI;AAEVC,MAAAA,OAAO,EAAE;AAFC,KANP;AAULZ,IAAAA,KAAK,EAAEC,KAVF;AAYL,OAAGb,YAAY;AAZV,GAHJ;;AAkBHc,EAAAA,KAAK,CAAEL,KAAF,SAAoB;AAAA,QAAX;AAAEM,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEW,MAAAA,MAAF;AAAUhB,MAAAA;AAAV,QAAmBX,cAAc,CAACU,KAAD,CAAvC;AACA,UAAMkB,IAAI,GAAGrB,OAAO,EAApB;;AAEA,UAAMsB,OAAO,GAAIC,CAAD,IAAc;AAC5BnB,MAAAA,IAAI,CAAC,CAACgB,MAAM,CAACP,KAAT,EAAgBU,CAAhB,CAAJ;AACD,KAFD;;AAIA,UAAMC,WAAW,GAAG7B,QAAQ,CAAC,OAAO;AAClC2B,MAAAA,OADkC;AAElCG,MAAAA,UAAU,EAAEL,MAAM,CAACP,KAAP,GAAeV,KAAK,CAACY,YAArB,GAAoCZ,KAAK,CAACgB,UAFpB;AAGlCO,MAAAA,KAAK,EAAE;AAH2B,KAAP,CAAD,CAA5B;AAMA,WAAO,MAAM;AAAA;;AACX;AAAA,iBAEW,CACL,cADK,EAEL;AACE,mCAAyBL,IAAzB,oBAAyBA,IAAI,CAAET,UAAN,CAAiBC;AAD5C,SAFK;AAFX;AAAA,yCASMJ,KAAK,CAACkB,MATZ,qBASM,mBAAAlB,KAAK,EAAUe,WAAW,CAACX,KAAtB,CATX;AAAA,mBAU4BV,KAAK,CAACG,KAVlC;AAAA,kBAU+Cc,MAAM,CAACP;AAVtD,WAUsEJ,KAVtE;AAAA;AAAA;AAaD,KAdD;AAeD;;AA/CE,CATqC,CAAnC","sourcesContent":["// Components\nimport { VExpandTransition } from '@/components/transitions'\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { useNestedGroup } from '@/composables/nested/nested'\nimport { makeTagProps } from '@/composables/tag'\n\n// Utilities\nimport { computed } from 'vue'\nimport { defineComponent, genericComponent } from '@/util'\nimport { createList, useDepth, useList } from './VList'\n\n// Types\nimport type { Prop } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { ListItem } from './VList'\n\nexport type ListGroupHeaderSlot = {\n  onClick: (e: Event) => void\n  appendIcon: string\n  class: string\n}\n\nconst VListGroupItems = defineComponent({\n  name: 'VListGroupItems',\n\n  props: {\n    open: Boolean,\n    items: Array as Prop<ListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    const parent = createList()\n    const depth = useDepth(parent.hasPrepend)\n\n    return () => {\n      return (\n        <VExpandTransition>\n          <div class=\"v-list-group__items\" style={{ '--v-list-depth': depth.value }} v-show={props.open}>\n            <VListChildren items={props.items} v-slots={slots} />\n          </div>\n        </VExpandTransition>\n      )\n    }\n  },\n})\n\nexport const VListGroup = genericComponent<new <T extends ListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    header: [ListGroupHeaderSlot]\n    item: [T]\n    default: []\n  }>\n}>()({\n  name: 'VListGroup',\n\n  props: {\n    value: null,\n    collapseIcon: {\n      type: String,\n      default: '$collapse',\n    },\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    items: Array as Prop<ListItem[]>,\n\n    ...makeTagProps(),\n  },\n\n  setup (props, { slots }) {\n    const { isOpen, open } = useNestedGroup(props)\n    const list = useList()\n\n    const onClick = (e: Event) => {\n      open(!isOpen.value, e)\n    }\n\n    const headerProps = computed(() => ({\n      onClick,\n      appendIcon: isOpen.value ? props.collapseIcon : props.expandIcon,\n      class: 'v-list-group__header',\n    }))\n\n    return () => {\n      return (\n        <props.tag\n          class={[\n            'v-list-group',\n            {\n              'v-list-group--prepend': list?.hasPrepend.value,\n            },\n          ]}\n        >\n          { slots.header?.(headerProps.value) }\n          <VListGroupItems items={props.items} open={isOpen.value} v-slots={slots} />\n        </props.tag>\n      )\n    }\n  },\n})\n"],"file":"VListGroup.mjs"}