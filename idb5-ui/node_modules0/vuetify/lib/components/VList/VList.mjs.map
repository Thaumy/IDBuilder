{"version":3,"sources":["../../../src/components/VList/VList.tsx"],"names":["VListSubheader","VListChildren","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makeRoundedProps","useRounded","makeTagProps","useBackgroundColor","makeThemeProps","useTheme","makeNestedProps","useNested","computed","inject","provide","ref","toRef","genericComponent","useRender","DepthKey","Symbol","for","useDepth","hasPrepend","parent","depth","value","ListKey","createList","updateHasPrepend","data","useList","VList","name","props","color","String","disabled","Boolean","lines","type","default","nav","subheader","items","Array","selectStrategy","openStrategy","activeStrategy","emits","val","setup","slots","themeClasses","backgroundColorClasses","backgroundColorStyles","borderClasses","densityClasses","dimensionStyles","elevationClasses","roundedClasses","open","select","activate","hasHeader"],"mappings":"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","sourcesContent":["// Styles\nimport './VList.sass'\n\n// Components\nimport { VListSubheader } from './VListSubheader'\nimport { VListChildren } from './VListChildren'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { useBackgroundColor } from '@/composables/color'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { makeNestedProps, useNested } from '@/composables/nested/nested'\n\n// Utilities\nimport { computed, inject, provide, ref, toRef } from 'vue'\nimport { genericComponent, useRender } from '@/util'\n\n// Types\nimport type { InjectionKey, Prop, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { ListGroupHeaderSlot } from './VListGroup'\n\nexport type ListItem = {\n  children?: ListItem[]\n  value?: string\n}\n\n// Depth\nexport const DepthKey: InjectionKey<Ref<number>> = Symbol.for('vuetify:depth')\n\nexport const useDepth = (hasPrepend?: Ref<boolean>) => {\n  const parent = inject(DepthKey, ref(-1))\n\n  const depth = computed(() => parent.value + 1 + (hasPrepend?.value ? 1 : 0))\n\n  provide(DepthKey, depth)\n\n  return depth\n}\n\n// List\nexport const ListKey: InjectionKey<{\n  hasPrepend: Ref<boolean>\n  updateHasPrepend: (value: boolean) => void\n}> = Symbol.for('vuetify:list')\n\nexport const createList = () => {\n  const parent = inject(ListKey, { hasPrepend: ref(false), updateHasPrepend: () => null })\n\n  const data = {\n    hasPrepend: ref(false),\n    updateHasPrepend: (value: boolean) => {\n      if (value) data.hasPrepend.value = value\n    },\n  }\n\n  provide(ListKey, data)\n\n  return parent\n}\n\nexport const useList = () => {\n  return inject(ListKey, null)\n}\n\nexport const VList = genericComponent<new <T>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    subheader: []\n    header: [ListGroupHeaderSlot]\n    item: [T]\n  }>\n}>()({\n  name: 'VList',\n\n  props: {\n    color: String,\n    disabled: Boolean,\n    lines: {\n      type: String,\n      default: 'one',\n    },\n    nav: Boolean,\n    subheader: {\n      type: [Boolean, String],\n      default: false,\n    },\n    items: Array as Prop<ListItem[]>,\n\n    ...makeNestedProps({\n      selectStrategy: 'leaf' as const,\n      openStrategy: 'multiple' as const,\n      activeStrategy: 'single' as const,\n    }),\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  emits: {\n    'update:selected': (val: string[]) => true,\n    'update:opened': (val: string[]) => true,\n    'update:active': (val: string[]) => true,\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme(props)\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'color'))\n    const { borderClasses } = useBorder(props, 'v-list')\n    const { densityClasses } = useDensity(props, 'v-list')\n    const { dimensionStyles } = useDimension(props)\n    const { elevationClasses } = useElevation(props)\n    const { roundedClasses } = useRounded(props, 'v-list')\n    const { open, select, activate } = useNested(props)\n    const depth = useDepth()\n    createList()\n\n    useRender(() => {\n      const hasHeader = typeof props.subheader === 'string' || slots.subheader\n\n      return (\n        <props.tag\n          class={[\n            'v-list',\n            {\n              'v-list--disabled': props.disabled,\n              'v-list--nav': props.nav,\n              'v-list--subheader': props.subheader,\n              'v-list--subheader-sticky': props.subheader === 'sticky',\n              [`v-list--${props.lines}-line`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            roundedClasses.value,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            dimensionStyles.value,\n            {\n              '--v-list-depth': depth.value,\n            },\n          ]}\n        >\n          { hasHeader && (\n            slots.subheader\n              ? slots.subheader()\n              : <VListSubheader>{ props.subheader }</VListSubheader>\n          ) }\n\n          <VListChildren items={props.items} v-slots={slots} />\n        </props.tag>\n      )\n    })\n\n    return {\n      open,\n      select,\n      activate,\n    }\n  },\n})\n\nexport type VList = InstanceType<typeof VList>\n"],"file":"VList.mjs"}