{"version":3,"sources":["../../../src/components/VList/VListChildren.tsx"],"names":["VListGroup","VListItem","genericComponent","VListChildren","name","props","items","Array","setup","slots","default","map","children","item","value","rest","header","headerProps"],"mappings":";AAAA;SACSA,U;SACAC,S,2BAET;;SACSC,gB,gCAET;;AAMA,OAAO,MAAMC,aAAa,GAAGD,gBAAgB,GAQxC;AACHE,EAAAA,IAAI,EAAE,eADH;AAGHC,EAAAA,KAAK,EAAE;AACLC,IAAAA,KAAK,EAAEC;AADF,GAHJ;;AAOHC,EAAAA,KAAK,CAAEH,KAAF,QAAoB;AAAA,QAAX;AAAEI,MAAAA;AAAF,KAAW;AACvB,WAAO;AAAA;;AAAA,kDAAMA,KAAK,CAACC,OAAZ,qBAAM,qBAAAD,KAAK,CAAX,6CAA2BJ,KAAK,CAACC,KAAjC,qBAA2B,aAAaK,GAAb,CAAiB,SAA2B;AAAA,YAA1B;AAAEC,UAAAA,QAAF;AAAY,aAAGC;AAAf,SAA0B;AAC5E,cAAM;AAAEC,UAAAA,KAAF;AAAS,aAAGC;AAAZ,YAAqBF,IAA3B;AACA,eAAOD,QAAQ;AAAA,mBAEJE,KAFI;AAAA,mBAGJF;AAHI,WAIF,EACP,GAAGH,KADI;AAEPO,UAAAA,MAAM,EAAEC,WAAW,IAAIR,KAAK,CAACO,MAAN,GACnBP,KAAK,CAACO,MAAN,CAAa,EAAE,GAAGD,IAAL;AAAW,eAAGE;AAAd,WAAb,CADmB,uCAEJF,IAFI,EAEME,WAFN;AAFhB,SAJE,2BAYbR,KAAK,CAACI,IAAN,GAAaJ,KAAK,CAACI,IAAN,CAAWA,IAAX,CAAb,2BAA+CA,IAA/C,EAA8DJ,KAA9D,KAZF;AAcD,OAhBiC,CAA3B;AAAA,KAAP;AAiBD;;AAzBE,CARwC,CAAtC","sourcesContent":["// Components\nimport { VListGroup } from './VListGroup'\nimport { VListItem } from './VListItem'\n\n// Utilities\nimport { genericComponent } from '@/util'\n\n// Types\nimport type { Prop } from 'vue'\nimport type { MakeSlots } from '@/util'\nimport type { ListGroupHeaderSlot } from './VListGroup'\nimport type { ListItem } from './VList'\n\nexport const VListChildren = genericComponent<new <T extends ListItem>() => {\n  $props: {\n    items?: T[]\n  }\n  $slots: MakeSlots<{\n    header: [ListGroupHeaderSlot]\n    item: [T]\n  }>\n}>()({\n  name: 'VListChildren',\n\n  props: {\n    items: Array as Prop<ListItem[]>,\n  },\n\n  setup (props, { slots }) {\n    return () => slots.default?.() ?? props.items?.map(({ children, ...item }) => {\n      const { value, ...rest } = item\n      return children ? (\n        <VListGroup\n          value={value}\n          items={children}\n          v-slots={{\n            ...slots,\n            header: headerProps => slots.header\n              ? slots.header({ ...rest, ...headerProps })\n              : <VListItem {...rest} {...headerProps} />,\n          }}\n        />\n      ) : (\n        slots.item ? slots.item(item) : <VListItem {...item} v-slots={slots} />\n      )\n    })\n  },\n})\n"],"file":"VListChildren.mjs"}