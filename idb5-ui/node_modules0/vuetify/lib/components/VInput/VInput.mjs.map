{"version":3,"sources":["../../../src/components/VInput/VInput.tsx"],"names":["VIcon","VMessages","makeDensityProps","useDensity","makeValidationProps","useValidation","computed","genericComponent","pick","propsFactory","toKebabCase","makeVInputProps","appendIcon","String","prependIcon","focused","Boolean","hideDetails","hint","messages","type","Array","default","persistentHint","VInput","name","props","emits","e","setup","slots","emit","densityClasses","errorMessages","isDisabled","isReadonly","isPristine","isValid","isValidating","reset","resetValidation","validate","validationClasses","slotProps","hasPrepend","prepend","hasAppend","append","hasHint","hasMessages","length","value","hasDetails","showMessages","details","filterInputAttrs","attrs","filterInputProps","Object","keys","map"],"mappings":"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","sourcesContent":["// Styles\nimport './VInput.sass'\n\n// Components\nimport { VIcon } from '@/components/VIcon'\nimport { VMessages } from '@/components/VMessages'\n\n// Composables\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeValidationProps, useValidation } from '@/composables/validation'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, pick, propsFactory, toKebabCase } from '@/util'\n\n// Types\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { MakeSlots } from '@/util'\n\nexport type VInputSlot = {\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean | null>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}\n\nexport const makeVInputProps = propsFactory({\n  appendIcon: String,\n  prependIcon: String,\n  focused: Boolean,\n  hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n  hint: String,\n  messages: {\n    type: [Array, String],\n    default: () => ([]),\n  },\n  persistentHint: Boolean,\n\n  ...makeDensityProps(),\n  ...makeValidationProps(),\n})\n\nexport const VInput = genericComponent<new <T>() => {\n  $slots: MakeSlots<{\n    default: [VInputSlot]\n    prepend: [VInputSlot]\n    append: [VInputSlot]\n    details: [VInputSlot]\n  }>\n}>()({\n  name: 'VInput',\n\n  props: makeVInputProps(),\n\n  emits: {\n    'click:prepend': (e: MouseEvent) => true,\n    'click:append': (e: MouseEvent) => true,\n  },\n\n  setup (props, { slots, emit }) {\n    const { densityClasses } = useDensity(props, 'v-input')\n    const {\n      errorMessages,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n      validationClasses,\n    } = useValidation(props, 'v-input')\n\n    const slotProps = computed<VInputSlot>(() => ({\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n    }))\n\n    return () => {\n      const hasPrepend = (slots.prepend || props.prependIcon)\n      const hasAppend = (slots.append || props.appendIcon)\n      const hasHint = !!(slots.hint || props.hint)\n      const hasMessages = !!(\n        slots.messages ||\n        props.messages?.length ||\n        errorMessages.value.length\n      )\n      const hasDetails = !props.hideDetails || (\n        props.hideDetails === 'auto' &&\n        (hasMessages || hasHint)\n      )\n      const showMessages = hasMessages || (\n        hasHint &&\n        (props.persistentHint || props.focused)\n      )\n\n      return (\n        <div class={[\n          'v-input',\n          densityClasses.value,\n          validationClasses.value,\n        ]}\n        >\n          { hasPrepend && (\n            <div\n              class=\"v-input__prepend\"\n              onClick={ e => emit('click:prepend', e) }\n            >\n              { slots?.prepend?.(slotProps.value) }\n\n              { props.prependIcon && (\n                <VIcon icon={ props.prependIcon } />\n              ) }\n            </div>\n          ) }\n\n          { slots.default?.(slotProps.value) }\n\n          { hasAppend && (\n            <div\n              class=\"v-input__append\"\n              onClick={ e => emit('click:append', e) }\n            >\n              { slots?.append?.(slotProps.value) }\n\n              { props.appendIcon && (\n                <VIcon icon={ props.appendIcon } />\n              ) }\n            </div>\n          ) }\n\n          { hasDetails && (\n            <div class=\"v-input__details\">\n              <VMessages\n                active={ showMessages }\n                value={ hasMessages ? props.messages : [props.hint] }\n                v-slots={{ default: slots.messages }}\n              />\n\n              { slots.details?.(slotProps.value) }\n            </div>\n          ) }\n        </div>\n      )\n    }\n  },\n})\n\nexport type VInput = InstanceType<typeof VInput>\n\nexport function filterInputAttrs (attrs: Record<string, unknown>) {\n  return pick(attrs, ['class', 'style', 'id', /^data-/])\n}\n\nexport function filterInputProps (attrs: Record<string, unknown>) {\n  return pick(attrs, Object.keys(VInput.props).map(toKebabCase))\n}\n"],"file":"VInput.mjs"}