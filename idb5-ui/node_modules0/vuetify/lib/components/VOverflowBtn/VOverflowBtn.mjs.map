{"version":3,"sources":["../../../src/components/VOverflowBtn/VOverflowBtn.ts"],"names":["VSelect","VAutocomplete","VTextField","VBtn","consoleWarn","extend","name","props","editable","Boolean","segmented","computed","classes","options","call","isAnyValueAllowed","isSingle","computedItems","allItems","filteredItems","methods","genSelections","genCommaSelection","item","index","last","genSegmentedBtn","genInput","input","data","domProps","value","internalSearch","attrs","readonly","genLabel","isFocused","label","style","itemValue","getValue","itemObj","find","i","text","callback","$createElement","on","click","e","stopPropagation","updateValue","val","initialValue","lazyValue","$emit"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Styles\nimport './VOverflowBtn.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete'\nimport VTextField from '../VTextField/VTextField'\n\n// Components\nimport VBtn from '../VBtn'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-overflow-btn',\n\n  props: {\n    editable: Boolean,\n    segmented: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VAutocomplete.options.computed.classes.call(this),\n        'v-overflow-btn': true,\n        'v-overflow-btn--segmented': this.segmented,\n        'v-overflow-btn--editable': this.editable,\n      }\n    },\n    isAnyValueAllowed (): boolean {\n      return this.editable ||\n        VAutocomplete.options.computed.isAnyValueAllowed.call(this)\n    },\n    isSingle (): true {\n      return true\n    },\n    computedItems (): object[] {\n      return this.segmented ? this.allItems : this.filteredItems\n    },\n  },\n\n  methods: {\n    genSelections () {\n      return this.editable\n        ? VAutocomplete.options.methods.genSelections.call(this)\n        : VSelect.options.methods.genSelections.call(this) // Override v-autocomplete's override\n    },\n    genCommaSelection (item: any, index: number, last: boolean) {\n      return this.segmented\n        ? this.genSegmentedBtn(item)\n        : VSelect.options.methods.genCommaSelection.call(this, item, index, last)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = input.data || {}\n      input.data.domProps!.value = this.editable ? this.internalSearch : ''\n      input.data.attrs!.readonly = !this.isAnyValueAllowed\n\n      return input\n    },\n    genLabel () {\n      if (this.editable && this.isFocused) return null\n\n      const label = VTextField.options.methods.genLabel.call(this)\n\n      if (!label) return label\n\n      label.data = label.data || {}\n\n      // Reset previously set styles from parent\n      label.data.style = {}\n\n      return label\n    },\n    genSegmentedBtn (item: any) {\n      const itemValue = this.getValue(item)\n      const itemObj = this.computedItems.find(i => this.getValue(i) === itemValue) || item\n\n      if (!itemObj.text || !itemObj.callback) {\n        consoleWarn('When using \"segmented\" prop without a selection slot, items must contain both a text and callback property', this)\n        return null\n      }\n\n      return this.$createElement(VBtn, {\n        props: { text: true },\n        on: {\n          click (e: Event) {\n            e.stopPropagation()\n            itemObj.callback(e)\n          },\n        },\n      }, [itemObj.text])\n    },\n    updateValue (val: boolean) {\n      if (val) {\n        this.initialValue = this.lazyValue\n      } else if (this.initialValue !== this.lazyValue) {\n        this.$emit('change', this.lazyValue)\n      }\n    },\n  },\n})\n"],"file":"VOverflowBtn.mjs"}