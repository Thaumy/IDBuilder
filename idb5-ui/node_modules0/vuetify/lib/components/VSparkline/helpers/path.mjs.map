{"version":3,"sources":["../../../../src/components/VSparkline/helpers/path.ts"],"names":["checkCollinear","getDistance","moveTo","genPath","points","radius","fill","height","start","shift","end","length","x","y","map","point","index","next","prev","isCollinear","threshold","Math","min","isTooCloseForRadius","radiusForPoint","before","after","join"],"mappings":"AAAA;;AACA;SAGSA,c,EAAgBC,W,EAAaC,M;AAEtC;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAkBC,MAAlB,EAAmCC,MAAnC,EAA8E;AAAA,MAA3BC,IAA2B,uEAApB,KAAoB;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AACnF,QAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAP,EAAd;AACA,QAAMC,GAAG,GAAGN,MAAM,CAACA,MAAM,CAACO,MAAP,GAAgB,CAAjB,CAAlB;AAEA,SACE,CAACL,IAAI,GAAI,IAAGE,KAAK,CAACI,CAAE,IAAGL,MAAM,GAAGC,KAAK,CAACI,CAAf,GAAmB,CAAE,KAAIJ,KAAK,CAACI,CAAE,IAAGJ,KAAK,CAACK,CAAE,EAA9D,GAAmE,IAAGL,KAAK,CAACI,CAAE,IAAGJ,KAAK,CAACK,CAAE,EAA9F,IACAT,MAAM,CACHU,GADH,CACO,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACrB,UAAMC,IAAI,GAAGb,MAAM,CAACY,KAAK,GAAG,CAAT,CAAnB;AACA,UAAME,IAAI,GAAGd,MAAM,CAACY,KAAK,GAAG,CAAT,CAAN,IAAqBR,KAAlC;AACA,UAAMW,WAAW,GAAGF,IAAI,IAAIjB,cAAc,CAACiB,IAAD,EAAOF,KAAP,EAAcG,IAAd,CAA1C;;AAEA,QAAI,CAACD,IAAD,IAASE,WAAb,EAA0B;AACxB,aAAQ,IAAGJ,KAAK,CAACH,CAAE,IAAGG,KAAK,CAACF,CAAE,EAA9B;AACD;;AAED,UAAMO,SAAS,GAAGC,IAAI,CAACC,GAAL,CAChBrB,WAAW,CAACiB,IAAD,EAAOH,KAAP,CADK,EAEhBd,WAAW,CAACgB,IAAD,EAAOF,KAAP,CAFK,CAAlB;AAIA,UAAMQ,mBAAmB,GAAGH,SAAS,GAAG,CAAZ,GAAgBf,MAA5C;AACA,UAAMmB,cAAc,GAAGD,mBAAmB,GAAGH,SAAS,GAAG,CAAf,GAAmBf,MAA7D;AAEA,UAAMoB,MAAM,GAAGvB,MAAM,CAACgB,IAAD,EAAOH,KAAP,EAAcS,cAAd,CAArB;AACA,UAAME,KAAK,GAAGxB,MAAM,CAACe,IAAD,EAAOF,KAAP,EAAcS,cAAd,CAApB;AAEA,WAAQ,IAAGC,MAAM,CAACb,CAAE,IAAGa,MAAM,CAACZ,CAAE,IAAGE,KAAK,CAACH,CAAE,IAAGG,KAAK,CAACF,CAAE,IAAGa,KAAK,CAACd,CAAE,IAAGc,KAAK,CAACb,CAAE,EAA5E;AACD,GArBH,EAsBGc,IAtBH,CAsBQ,EAtBR,CADA,IAwBCrB,IAAI,GAAI,IAAGI,GAAG,CAACE,CAAE,IAAGL,MAAM,GAAGC,KAAK,CAACI,CAAf,GAAmB,CAAE,IAArC,GAA2C,EAxBhD,CADF;AA2BD","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\nimport { Point } from '../VSparkline'\nimport { checkCollinear, getDistance, moveTo } from './math'\n\n/**\n * From https://github.com/unsplash/react-trend/blob/master/src/helpers/DOM.helpers.js#L18\n */\nexport function genPath (points: Point[], radius: number, fill = false, height = 75) {\n  const start = points.shift()!\n  const end = points[points.length - 1]\n\n  return (\n    (fill ? `M${start.x} ${height - start.x + 2} L${start.x} ${start.y}` : `M${start.x} ${start.y}`) +\n    points\n      .map((point, index) => {\n        const next = points[index + 1]\n        const prev = points[index - 1] || start\n        const isCollinear = next && checkCollinear(next, point, prev)\n\n        if (!next || isCollinear) {\n          return `L${point.x} ${point.y}`\n        }\n\n        const threshold = Math.min(\n          getDistance(prev, point),\n          getDistance(next, point)\n        )\n        const isTooCloseForRadius = threshold / 2 < radius\n        const radiusForPoint = isTooCloseForRadius ? threshold / 2 : radius\n\n        const before = moveTo(prev, point, radiusForPoint)\n        const after = moveTo(next, point, radiusForPoint)\n\n        return `L${before.x} ${before.y}S${point.x} ${point.y} ${after.x} ${after.y}`\n      })\n      .join('') +\n    (fill ? `L${end.x} ${height - start.x + 2} Z` : '')\n  )\n}\n"],"file":"path.mjs"}