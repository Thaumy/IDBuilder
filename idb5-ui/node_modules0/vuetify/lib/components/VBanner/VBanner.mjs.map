{"version":3,"sources":["../../../src/components/VBanner/VBanner.tsx"],"names":["VAvatar","VBannerActions","VBannerAvatar","VBannerContent","VBannerText","makeBorderProps","useBorder","makeDensityProps","useDensity","makeDimensionProps","useDimension","makeElevationProps","useElevation","makePositionProps","usePosition","makeRoundedProps","useRounded","makeTagProps","makeThemeProps","useTheme","useDisplay","useTextColor","toRef","defineComponent","VBanner","name","props","avatar","String","color","icon","lines","type","default","sticky","Boolean","text","setup","slots","themeClasses","borderClasses","densityClasses","dimensionStyles","mobile","elevationClasses","positionClasses","positionStyles","roundedClasses","textColorClasses","textColorStyles","hasAvatar","hasText","hasContent","value","density","actions"],"mappings":";AAAA;AACA,uB,CAEA;;SACSA,O;SACAC,c;SACAC,a;SACAC,c;SACAC,W,6BAET;;SACSC,e,EAAiBC,S;SACjBC,gB,EAAkBC,U;SAClBC,kB,EAAoBC,Y;SACpBC,kB,EAAoBC,Y;SACpBC,iB,EAAmBC,W;SACnBC,gB,EAAkBC,U;SAClBC,Y;SACAC,c,EAAgBC,Q;SAChBC,U;SACAC,Y,uCAET;;AACA,SAASC,KAAT,QAAsB,KAAtB;SACSC,e;AAET,OAAO,MAAMC,OAAO,GAAGD,eAAe,CAAC;AACrCE,EAAAA,IAAI,EAAE,SAD+B;AAGrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAEC,MADH;AAELC,IAAAA,KAAK,EAAED,MAFF;AAGLE,IAAAA,IAAI,EAAEF,MAHD;AAILG,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEJ,MADD;AAELK,MAAAA,OAAO,EAAE;AAFJ,KAJF;AAQLC,IAAAA,MAAM,EAAEC,OARH;AASLC,IAAAA,IAAI,EAAER,MATD;AAWL,OAAGvB,eAAe,EAXb;AAYL,OAAGE,gBAAgB,EAZd;AAaL,OAAGE,kBAAkB,EAbhB;AAcL,OAAGE,kBAAkB,EAdhB;AAeL,OAAGE,iBAAiB,EAff;AAgBL,OAAGE,gBAAgB,EAhBd;AAiBL,OAAGE,YAAY,EAjBV;AAkBL,OAAGC,cAAc;AAlBZ,GAH8B;;AAwBrCmB,EAAAA,KAAK,CAAEX,KAAF,QAAoB;AAAA,QAAX;AAAEY,MAAAA;AAAF,KAAW;AACvB,UAAM;AAAEC,MAAAA;AAAF,QAAmBpB,QAAQ,CAACO,KAAD,CAAjC;AACA,UAAM;AAAEc,MAAAA;AAAF,QAAoBlC,SAAS,CAACoB,KAAD,EAAQ,UAAR,CAAnC;AACA,UAAM;AAAEe,MAAAA;AAAF,QAAqBjC,UAAU,CAACkB,KAAD,EAAQ,UAAR,CAArC;AACA,UAAM;AAAEgB,MAAAA;AAAF,QAAsBhC,YAAY,CAACgB,KAAD,CAAxC;AACA,UAAM;AAAEiB,MAAAA;AAAF,QAAavB,UAAU,EAA7B;AACA,UAAM;AAAEwB,MAAAA;AAAF,QAAuBhC,YAAY,CAACc,KAAD,CAAzC;AACA,UAAM;AAAEmB,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,QAAsChC,WAAW,CAACY,KAAD,EAAQ,UAAR,CAAvD;AACA,UAAM;AAAEqB,MAAAA;AAAF,QAAqB/B,UAAU,CAACU,KAAD,EAAQ,UAAR,CAArC;AACA,UAAM;AAAEsB,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAwC5B,YAAY,CAACC,KAAK,CAACI,KAAD,EAAQ,OAAR,CAAN,CAA1D;AAEA,WAAO,MAAM;AAAA;;AACX,YAAMwB,SAAS,GAAG,CAAC,EAAExB,KAAK,CAACC,MAAN,IAAgBD,KAAK,CAACI,IAAtB,IAA8BQ,KAAK,CAACX,MAApC,IAA8CW,KAAK,CAACR,IAAtD,CAAnB;AACA,YAAMqB,OAAO,GAAG,CAAC,EAAEzB,KAAK,CAACU,IAAN,IAAcE,KAAK,CAACF,IAAtB,CAAjB;AACA,YAAMgB,UAAU,GAAGF,SAAS,IAAIC,OAAb,IAAwBb,KAAK,CAACL,OAAjD;AAEA;AAAA,iBAEW,CACL,UADK,EAEL;AACE,8BAAoBU,MAAM,CAACU,KAD7B;AAEE,8BAAoB3B,KAAK,CAACQ,MAF5B;AAGE,WAAE,aAAYR,KAAK,CAACK,KAAM,OAA1B,GAAmC;AAHrC,SAFK,EAOLS,aAAa,CAACa,KAPT,EAQLZ,cAAc,CAACY,KARV,EASLT,gBAAgB,CAACS,KATZ,EAULR,eAAe,CAACQ,KAVX,EAWLN,cAAc,CAACM,KAXV,EAYLL,gBAAgB,CAACK,KAZZ,EAaLd,YAAY,CAACc,KAbR,CAFX;AAAA,iBAiBW,CACLX,eAAe,CAACW,KADX,EAELP,cAAc,CAACO,KAFV,EAGLJ,eAAe,CAACI,KAHX,CAjBX;AAAA,gBAsBS;AAtBT;AAAA,wBAwBMD,UAAU;AAAA,0BAENF,SAAS;AAAA,4BAELZ,KAAK,CAACX,MAAN,GACEW,KAAK,CAACX,MAAN,EADF;AAAA,yBAIcD,KAAK,CAAC4B,OAJpB;AAAA,sBAKW5B,KAAK,CAACI,IALjB;AAAA,uBAMYJ,KAAK,CAACC;AANlB,qDAFK;AAAA,YAFH,EAiBNwB,OAAO;AAAA,4BAEHb,KAAK,CAACF,IAAN,GAAaE,KAAK,CAACF,IAAN,EAAb,GAA4BV,KAAK,CAACU,IAF/B;AAAA,YAjBD,oBAuBNE,KAAK,CAACL,OAvBA,qBAuBN,oBAAAK,KAAK,CAvBC;AAAA;AAAA,UAxBhB,EAmDMA,KAAK,CAACiB,OAAN,uCACyB;AAAEtB,UAAAA,OAAO,EAAEK,KAAK,CAACiB;AAAjB,SADzB,CAnDN;AAAA;AAAA;AAwDD,KA7DD;AA8DD;;AAjGoC,CAAD,CAA/B","sourcesContent":["// Styles\nimport './VBanner.sass'\n\n// Components\nimport { VAvatar } from '@/components/VAvatar'\nimport { VBannerActions } from './VBannerActions'\nimport { VBannerAvatar } from './VBannerAvatar'\nimport { VBannerContent } from './VBannerContent'\nimport { VBannerText } from './VBannerText'\n\n// Composables\nimport { makeBorderProps, useBorder } from '@/composables/border'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { makeElevationProps, useElevation } from '@/composables/elevation'\nimport { makePositionProps, usePosition } from '@/composables/position'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\nimport { useDisplay } from '@/composables/display'\nimport { useTextColor } from '@/composables/color'\n\n// Utilities\nimport { toRef } from 'vue'\nimport { defineComponent } from '@/util'\n\nexport const VBanner = defineComponent({\n  name: 'VBanner',\n\n  props: {\n    avatar: String,\n    color: String,\n    icon: String,\n    lines: {\n      type: String,\n      default: 'one',\n    },\n    sticky: Boolean,\n    text: String,\n\n    ...makeBorderProps(),\n    ...makeDensityProps(),\n    ...makeDimensionProps(),\n    ...makeElevationProps(),\n    ...makePositionProps(),\n    ...makeRoundedProps(),\n    ...makeTagProps(),\n    ...makeThemeProps(),\n  },\n\n  setup (props, { slots }) {\n    const { themeClasses } = useTheme(props)\n    const { borderClasses } = useBorder(props, 'v-banner')\n    const { densityClasses } = useDensity(props, 'v-banner')\n    const { dimensionStyles } = useDimension(props)\n    const { mobile } = useDisplay()\n    const { elevationClasses } = useElevation(props)\n    const { positionClasses, positionStyles } = usePosition(props, 'v-banner')\n    const { roundedClasses } = useRounded(props, 'v-banner')\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    return () => {\n      const hasAvatar = !!(props.avatar || props.icon || slots.avatar || slots.icon)\n      const hasText = !!(props.text || slots.text)\n      const hasContent = hasAvatar || hasText || slots.default\n\n      return (\n        <props.tag\n          class={[\n            'v-banner',\n            {\n              'v-banner--mobile': mobile.value,\n              'v-banner--sticky': props.sticky,\n              [`v-banner--${props.lines}-line`]: true,\n            },\n            borderClasses.value,\n            densityClasses.value,\n            elevationClasses.value,\n            positionClasses.value,\n            roundedClasses.value,\n            textColorClasses.value,\n            themeClasses.value,\n          ]}\n          style={[\n            dimensionStyles.value,\n            positionStyles.value,\n            textColorStyles.value,\n          ]}\n          role=\"banner\"\n        >\n          { hasContent && (\n            <VBannerContent>\n              { hasAvatar && (\n                <VBannerAvatar>\n                  { slots.avatar\n                    ? slots.avatar()\n                    : (\n                      <VAvatar\n                        density={ props.density }\n                        icon={ props.icon }\n                        image={ props.avatar }\n                      />\n                    )\n                  }\n                </VBannerAvatar>\n              ) }\n\n              { hasText && (\n                <VBannerText>\n                  { slots.text ? slots.text() : props.text }\n                </VBannerText>\n              ) }\n\n              { slots.default?.() }\n            </VBannerContent>\n          ) }\n\n          { slots.actions && (\n            <VBannerActions v-slots={{ default: slots.actions }} />\n          ) }\n        </props.tag>\n      )\n    }\n  },\n})\n\nexport type VBanner = InstanceType<typeof VBanner>\n"],"file":"VBanner.mjs"}