{"version":3,"sources":["../../src/util/dateTimeUtils.ts"],"names":["createUTCDate","year","month","day","date","Date","UTC","isFinite","getUTCFullYear","setUTCFullYear","firstWeekOffset","firstDayOfWeek","firstDayOfYear","firstWeekDayInFirstWeek","firstWeekDayOfYear","getUTCDay","dayOfYear","isLeapYear","weeksInYear","weekOffset","weekOffsetNext","daysInYear","weekNumber","localeFirstDayOfYear","week","Math","ceil"],"mappings":"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","sourcesContent":["function createUTCDate (year: number, month = 0, day = 1) {\n  let date\n  if (year < 100 && year >= 0) {\n    date = new Date(Date.UTC(year, month, day))\n    if (isFinite(date.getUTCFullYear())) {\n      date.setUTCFullYear(year)\n    }\n  } else {\n    date = new Date(Date.UTC(year, month, day))\n  }\n\n  return date\n}\n\nfunction firstWeekOffset (year: number, firstDayOfWeek: number, firstDayOfYear: number) {\n  const firstWeekDayInFirstWeek = 7 + firstDayOfWeek - firstDayOfYear\n  const firstWeekDayOfYear = (7 + createUTCDate(year, 0, firstWeekDayInFirstWeek).getUTCDay() - firstDayOfWeek) % 7\n\n  return -firstWeekDayOfYear + firstWeekDayInFirstWeek - 1\n}\n\nfunction dayOfYear (year: number, month: number, day: number, firstDayOfWeek: number) {\n  let dayOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334][month]\n  if (month > 1 && isLeapYear(year)) {\n    dayOfYear++\n  }\n\n  return dayOfYear + day\n}\n\nfunction weeksInYear (year: number, firstDayOfWeek: number, firstDayOfYear: number) {\n  const weekOffset = firstWeekOffset(year, firstDayOfWeek, firstDayOfYear)\n  const weekOffsetNext = firstWeekOffset(year + 1, firstDayOfWeek, firstDayOfYear)\n  const daysInYear = isLeapYear(year) ? 366 : 365\n\n  return (daysInYear - weekOffset + weekOffsetNext) / 7\n}\n\nexport function weekNumber (year: number, month: number, day: number, firstDayOfWeek: number, localeFirstDayOfYear: number): number {\n  const weekOffset = firstWeekOffset(year, firstDayOfWeek, localeFirstDayOfYear)\n  const week = Math.ceil((dayOfYear(year, month, day, firstDayOfWeek) - weekOffset) / 7)\n\n  if (week < 1) {\n    return week + weeksInYear(year - 1, firstDayOfWeek, localeFirstDayOfYear)\n  } else if (week > weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)) {\n    return week - weeksInYear(year, firstDayOfWeek, localeFirstDayOfYear)\n  } else {\n    return week\n  }\n}\n\nexport function isLeapYear (year: number): boolean {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n"],"file":"dateTimeUtils.mjs"}