{"version":3,"sources":["../../../src/mixins/activatable/index.ts"],"names":["Delayable","Toggleable","mixins","getSlot","getSlotType","consoleError","baseMixins","extend","name","props","activator","default","validator","val","includes","disabled","Boolean","internalActivator","openOnHover","openOnFocus","data","activatorElement","activatorNode","events","listeners","watch","mounted","slotType","addActivatorEvents","beforeDestroy","removeActivatorEvents","methods","getActivator","genActivatorListeners","keys","Object","key","addEventListener","genActivator","node","assign","getValueProxy","on","attrs","genActivatorAttributes","role","String","isActive","mouseenter","e","runDelay","mouseleave","click","focus","stopPropagation","target","$el","document","querySelector","length","vm","componentInstance","$options","some","m","options","elm","currentTarget","nodeType","Node","ELEMENT_NODE","getContentSlot","self","value","removeEventListener","resetActivator"],"mappings":"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","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\ntype Listeners = Dictionary<(e: MouseEvent & KeyboardEvent & FocusEvent) => void>\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n    openOnFocus: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave', 'focus'],\n    listeners: {} as Listeners,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnFocus: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Listeners = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      if (this.openOnFocus) {\n        listeners.focus = (e: FocusEvent) => {\n          this.getActivator(e)\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click or focus event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      // The activator should only be a valid element (Ignore comments and text nodes)\n      this.activatorElement = activator?.nodeType === Node.ELEMENT_NODE ? activator : null\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n"],"file":"index.mjs"}