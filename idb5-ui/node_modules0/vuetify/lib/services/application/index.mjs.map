{"version":3,"sources":["../../../src/services/application/index.ts"],"names":["Service","Application","bar","top","left","insetFooter","right","bottom","footer","register","uid","location","size","application","update","unregister","Object","values","reduce","acc","cur"],"mappings":";;AAAA;;AACA;AAEA;SACSA,O,gCAET;;AAGA,OAAO,MAAMC,WAAN,SAA0BD,OAA1B,CAA0D;AAAA;AAAA;;AAAA,iCAGzD,CAHyD;;AAAA,iCAKzD,CALyD;;AAAA,kCAOxD,CAPwD;;AAAA,yCASjD,CATiD;;AAAA,mCAWvD,CAXuD;;AAAA,oCAatD,CAbsD;;AAAA,oCAetD,CAfsD;;AAAA,yCAiBnB;AAC1CE,MAAAA,GAAG,EAAE,EADqC;AAE1CC,MAAAA,GAAG,EAAE,EAFqC;AAG1CC,MAAAA,IAAI,EAAE,EAHoC;AAI1CC,MAAAA,WAAW,EAAE,EAJ6B;AAK1CC,MAAAA,KAAK,EAAE,EALmC;AAM1CC,MAAAA,MAAM,EAAE,EANkC;AAO1CC,MAAAA,MAAM,EAAE;AAPkC,KAjBmB;AAAA;;AA2B/DC,EAAAA,QAAQ,CACNC,GADM,EAENC,QAFM,EAGNC,IAHM,EAIN;AACA,SAAKC,WAAL,CAAiBF,QAAjB,IAA6B;AAAE,OAACD,GAAD,GAAOE;AAAT,KAA7B;AAEA,SAAKE,MAAL,CAAYH,QAAZ;AACD;;AAEDI,EAAAA,UAAU,CAAEL,GAAF,EAAeC,QAAf,EAAqC;AAC7C,QAAI,KAAKE,WAAL,CAAiBF,QAAjB,EAA2BD,GAA3B,KAAmC,IAAvC,EAA6C;AAE7C,WAAO,KAAKG,WAAL,CAAiBF,QAAjB,EAA2BD,GAA3B,CAAP;AACA,SAAKI,MAAL,CAAYH,QAAZ;AACD;;AAEDG,EAAAA,MAAM,CAAEH,QAAF,EAAwB;AAC5B,SAAKA,QAAL,IAAiBK,MAAM,CAACC,MAAP,CAAc,KAAKJ,WAAL,CAAiBF,QAAjB,CAAd,EACdO,MADc,CACP,CAACC,GAAD,EAAcC,GAAd,KAAuCD,GAAG,GAAGC,GADtC,EAC4C,CAD5C,CAAjB;AAED;;AA/C8D;;gBAApDnB,W,cACsB,a","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Extensions\nimport { Service } from '../service'\n\n// Types\nimport { TargetPropValues, TargetProp, Application as IApplication } from 'vuetify/types/services/application'\n\nexport class Application extends Service implements IApplication {\n  static property: 'application' = 'application'\n\n  bar = 0\n\n  top = 0\n\n  left = 0\n\n  insetFooter = 0\n\n  right = 0\n\n  bottom = 0\n\n  footer = 0\n\n  application: Dictionary<TargetPropValues> = {\n    bar: {},\n    top: {},\n    left: {},\n    insetFooter: {},\n    right: {},\n    bottom: {},\n    footer: {},\n  }\n\n  register (\n    uid: number,\n    location: TargetProp,\n    size: number\n  ) {\n    this.application[location] = { [uid]: size }\n\n    this.update(location)\n  }\n\n  unregister (uid: number, location: TargetProp) {\n    if (this.application[location][uid] == null) return\n\n    delete this.application[location][uid]\n    this.update(location)\n  }\n\n  update (location: TargetProp) {\n    this[location] = Object.values(this.application[location])\n      .reduce((acc: number, cur: number): number => (acc + cur), 0)\n  }\n}\n"],"file":"index.mjs"}