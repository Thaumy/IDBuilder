{"version":3,"sources":["../../../src/services/lang/index.ts"],"names":["Service","getObjectValueByPath","consoleError","consoleWarn","LANG_PREFIX","fallback","Symbol","getTranslation","locale","key","usingDefault","defaultLocale","shortKey","replace","translation","Lang","constructor","preset","current","locales","t","property","translator","defaultTranslator","currentLocale","params","startsWith","str","match","index","String"],"mappings":";;AAAA;;AACA;AAEA;SACSA,O,gCAET;;SACSC,oB;SACAC,Y,EAAcC,W,kCAEvB;;AAOA,MAAMC,WAAW,GAAG,WAApB;AACA,MAAMC,QAAQ,GAAGC,MAAM,CAAC,eAAD,CAAvB;;AAEA,SAASC,cAAT,CACEC,MADF,EAEEC,GAFF,EAKU;AAAA,MAFRC,YAEQ,uEAFO,KAEP;AAAA,MADRC,aACQ;AACR,QAAMC,QAAQ,GAAGH,GAAG,CAACI,OAAJ,CAAYT,WAAZ,EAAyB,EAAzB,CAAjB;AACA,MAAIU,WAAW,GAAGb,oBAAoB,CAACO,MAAD,EAASI,QAAT,EAAmBP,QAAnB,CAAtC;;AAEA,MAAIS,WAAW,KAAKT,QAApB,EAA8B;AAC5B,QAAIK,YAAJ,EAAkB;AAChBR,MAAAA,YAAY,CAAE,oBAAmBU,QAAS,yBAA9B,CAAZ;AACAE,MAAAA,WAAW,GAAGL,GAAd;AACD,KAHD,MAGO;AACLN,MAAAA,WAAW,CAAE,oBAAmBS,QAAS,sCAA9B,CAAX;AACAE,MAAAA,WAAW,GAAGP,cAAc,CAACI,aAAD,EAAgBF,GAAhB,EAAqB,IAArB,EAA2BE,aAA3B,CAA5B;AACD;AACF;;AAED,SAAOG,WAAP;AACD;;AAED,OAAO,MAAMC,IAAN,SAAmBf,OAAnB,CAA4C;AAWjDgB,EAAAA,WAAW,CAAEC,MAAF,EAAyB;AAClC;;AADkC,2CANb,IAMa;;AAGlC,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA,OAFI;AAGJC,MAAAA;AAHI,QAIFH,MAAM,CAACF,IAAI,CAACM,QAAN,CAJV;AAMA,SAAKH,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKG,UAAL,GAAkBF,CAAC,IAAI,KAAKG,iBAA5B;AACD;;AAEMC,EAAAA,aAAa,CAAEf,GAAF,EAAe;AACjC,UAAMK,WAAW,GAAG,KAAKK,OAAL,CAAa,KAAKD,OAAlB,CAApB;AACA,UAAMP,aAAa,GAAG,KAAKQ,OAAL,CAAa,KAAKR,aAAlB,CAAtB;AAEA,WAAOJ,cAAc,CAACO,WAAD,EAAcL,GAAd,EAAmB,KAAnB,EAA0BE,aAA1B,CAArB;AACD;;AAEMS,EAAAA,CAAC,CAAEX,GAAF,EAAiC;AAAA,sCAAfgB,MAAe;AAAfA,MAAAA,MAAe;AAAA;;AACvC,QAAI,CAAChB,GAAG,CAACiB,UAAJ,CAAetB,WAAf,CAAL,EAAkC,OAAO,KAAKS,OAAL,CAAaJ,GAAb,EAAkBgB,MAAlB,CAAP;AAElC,WAAO,KAAKH,UAAL,CAAgBb,GAAhB,EAAqB,GAAGgB,MAAxB,CAAP;AACD;;AAEOF,EAAAA,iBAAiB,CAAEd,GAAF,EAAiC;AAAA,uCAAfgB,MAAe;AAAfA,MAAAA,MAAe;AAAA;;AACxD,WAAO,KAAKZ,OAAL,CAAa,KAAKW,aAAL,CAAmBf,GAAnB,CAAb,EAAsCgB,MAAtC,CAAP;AACD;;AAEOZ,EAAAA,OAAO,CAAEc,GAAF,EAAeF,MAAf,EAA8B;AAC3C,WAAOE,GAAG,CAACd,OAAJ,CAAY,YAAZ,EAA0B,CAACe,KAAD,EAAgBC,KAAhB,KAAkC;AACjE;AACA,aAAOC,MAAM,CAACL,MAAM,CAAC,CAACI,KAAF,CAAP,CAAb;AACD,KAHM,CAAP;AAID;;AA/CgD;;gBAAtCd,I,cACe,M","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\n// Extensions\nimport { Service } from '../service'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport { consoleError, consoleWarn } from '../../util/console'\n\n// Types\nimport { VuetifyPreset } from 'vuetify/types/services/presets'\nimport {\n  VuetifyLocale,\n  Lang as ILang,\n} from 'vuetify/types/services/lang'\n\nconst LANG_PREFIX = '$vuetify.'\nconst fallback = Symbol('Lang fallback')\n\nfunction getTranslation (\n  locale: VuetifyLocale,\n  key: string,\n  usingDefault = false,\n  defaultLocale: VuetifyLocale\n): string {\n  const shortKey = key.replace(LANG_PREFIX, '')\n  let translation = getObjectValueByPath(locale, shortKey, fallback) as string | typeof fallback\n\n  if (translation === fallback) {\n    if (usingDefault) {\n      consoleError(`Translation key \"${shortKey}\" not found in fallback`)\n      translation = key\n    } else {\n      consoleWarn(`Translation key \"${shortKey}\" not found, falling back to default`)\n      translation = getTranslation(defaultLocale, key, true, defaultLocale)\n    }\n  }\n\n  return translation\n}\n\nexport class Lang extends Service implements ILang {\n  static property: 'lang' = 'lang'\n\n  public current: ILang['current']\n\n  public defaultLocale = 'en'\n\n  public locales: ILang['locales']\n\n  private translator: ILang['t']\n\n  constructor (preset: VuetifyPreset) {\n    super()\n\n    const {\n      current,\n      locales,\n      t,\n    } = preset[Lang.property]\n\n    this.current = current\n    this.locales = locales\n    this.translator = t || this.defaultTranslator\n  }\n\n  public currentLocale (key: string) {\n    const translation = this.locales[this.current]\n    const defaultLocale = this.locales[this.defaultLocale]\n\n    return getTranslation(translation, key, false, defaultLocale)\n  }\n\n  public t (key: string, ...params: any[]) {\n    if (!key.startsWith(LANG_PREFIX)) return this.replace(key, params)\n\n    return this.translator(key, ...params)\n  }\n\n  private defaultTranslator (key: string, ...params: any[]) {\n    return this.replace(this.currentLocale(key), params)\n  }\n\n  private replace (str: string, params: any[]) {\n    return str.replace(/\\{(\\d+)\\}/g, (match: string, index: string) => {\n      /* istanbul ignore next */\n      return String(params[+index])\n    })\n  }\n}\n"],"file":"index.mjs"}