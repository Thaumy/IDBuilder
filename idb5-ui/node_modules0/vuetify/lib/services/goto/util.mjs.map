{"version":3,"sources":["../../../src/services/goto/util.ts"],"names":["getOffset","target","el","$","Error","TypeError","type","totalOffset","offsetTop","offsetParent","getContainer","container","constructor","name","document","querySelector","_isVue","$el","HTMLElement"],"mappings":"AAAA;;AACA;AAIA;AACA,OAAO,SAASA,SAAT,CAAoBC,MAApB,EAAyC;AAC9C,MAAI,OAAOA,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,WAAOA,MAAP;AACD;;AAED,MAAIC,EAAE,GAAGC,CAAC,CAACF,MAAD,CAAV;;AACA,MAAI,CAACC,EAAL,EAAS;AACP,UAAM,OAAOD,MAAP,KAAkB,QAAlB,GACF,IAAIG,KAAJ,CAAW,mBAAkBH,MAAO,cAApC,CADE,GAEF,IAAII,SAAJ,CAAe,uEAAsEC,IAAI,CAACL,MAAD,CAAS,WAAlG,CAFJ;AAGD;;AAED,MAAIM,WAAW,GAAG,CAAlB;;AACA,SAAOL,EAAP,EAAW;AACTK,IAAAA,WAAW,IAAIL,EAAE,CAACM,SAAlB;AACAN,IAAAA,EAAE,GAAGA,EAAE,CAACO,YAAR;AACD;;AAED,SAAOF,WAAP;AACD;AAED,OAAO,SAASG,YAAT,CAAuBC,SAAvB,EAAoD;AACzD,QAAMT,EAAE,GAAGC,CAAC,CAACQ,SAAD,CAAZ;AAEA,MAAIT,EAAJ,EAAQ,OAAOA,EAAP;AAER,QAAM,OAAOS,SAAP,KAAqB,QAArB,GACF,IAAIP,KAAJ,CAAW,sBAAqBO,SAAU,cAA1C,CADE,GAEF,IAAIN,SAAJ,CAAe,mEAAkEC,IAAI,CAACK,SAAD,CAAY,WAAjG,CAFJ;AAGD;;AAED,SAASL,IAAT,CAAeJ,EAAf,EAAwB;AACtB,SAAOA,EAAE,IAAI,IAAN,GAAaA,EAAb,GAAkBA,EAAE,CAACU,WAAH,CAAeC,IAAxC;AACD;;AAED,SAASV,CAAT,CAAYD,EAAZ,EAAyC;AACvC,MAAI,OAAOA,EAAP,KAAc,QAAlB,EAA4B;AAC1B,WAAOY,QAAQ,CAACC,aAAT,CAAoCb,EAApC,CAAP;AACD,GAFD,MAEO,IAAIA,EAAE,IAAIA,EAAE,CAACc,MAAb,EAAqB;AAC1B,WAAQd,EAAD,CAAYe,GAAnB;AACD,GAFM,MAEA,IAAIf,EAAE,YAAYgB,WAAlB,EAA+B;AACpC,WAAOhB,EAAP;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF","sourcesContent":["// @ts-nocheck\n/* eslint-disable */\n\nimport Vue from 'vue'\n\n// Return target's cumulative offset from the top\nexport function getOffset (target: any): number {\n  if (typeof target === 'number') {\n    return target\n  }\n\n  let el = $(target)\n  if (!el) {\n    throw typeof target === 'string'\n      ? new Error(`Target element \"${target}\" not found.`)\n      : new TypeError(`Target must be a Number/Selector/HTMLElement/VueComponent, received ${type(target)} instead.`)\n  }\n\n  let totalOffset = 0\n  while (el) {\n    totalOffset += el.offsetTop\n    el = el.offsetParent as HTMLElement\n  }\n\n  return totalOffset\n}\n\nexport function getContainer (container: any): HTMLElement {\n  const el = $(container)\n\n  if (el) return el\n\n  throw typeof container === 'string'\n    ? new Error(`Container element \"${container}\" not found.`)\n    : new TypeError(`Container must be a Selector/HTMLElement/VueComponent, received ${type(container)} instead.`)\n}\n\nfunction type (el: any) {\n  return el == null ? el : el.constructor.name\n}\n\nfunction $ (el: any): HTMLElement | null {\n  if (typeof el === 'string') {\n    return document.querySelector<HTMLElement>(el)\n  } else if (el && el._isVue) {\n    return (el as Vue).$el as HTMLElement\n  } else if (el instanceof HTMLElement) {\n    return el\n  } else {\n    return null\n  }\n}\n"],"file":"util.mjs"}